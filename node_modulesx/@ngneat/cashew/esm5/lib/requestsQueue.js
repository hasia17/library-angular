/**
 * @fileoverview added by tsickle
 * Generated from: lib/requestsQueue.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
var RequestsQueue = /** @class */ (function () {
    function RequestsQueue() {
        this.queue = new Map();
    }
    /**
     * @param {?} key
     * @return {?}
     */
    RequestsQueue.prototype.get = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        return this.queue.get(key);
    };
    /**
     * @param {?} key
     * @return {?}
     */
    RequestsQueue.prototype.has = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        return this.queue.has(key);
    };
    /**
     * @param {?} key
     * @param {?} shared
     * @return {?}
     */
    RequestsQueue.prototype.set = /**
     * @param {?} key
     * @param {?} shared
     * @return {?}
     */
    function (key, shared) {
        this.queue.set(key, shared);
    };
    /**
     * @param {?} key
     * @return {?}
     */
    RequestsQueue.prototype.delete = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        this.queue.delete(key);
    };
    RequestsQueue.decorators = [
        { type: Injectable }
    ];
    return RequestsQueue;
}());
export { RequestsQueue };
if (false) {
    /**
     * @type {?}
     * @private
     */
    RequestsQueue.prototype.queue;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVxdWVzdHNRdWV1ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ25lYXQvY2FzaGV3LyIsInNvdXJjZXMiOlsibGliL3JlcXVlc3RzUXVldWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBSTNDO0lBQUE7UUFFVSxVQUFLLEdBQUcsSUFBSSxHQUFHLEVBQUUsQ0FBQztJQWlCNUIsQ0FBQzs7Ozs7SUFmQywyQkFBRzs7OztJQUFILFVBQUksR0FBVztRQUNiLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDN0IsQ0FBQzs7Ozs7SUFFRCwyQkFBRzs7OztJQUFILFVBQUksR0FBVztRQUNiLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDN0IsQ0FBQzs7Ozs7O0lBRUQsMkJBQUc7Ozs7O0lBQUgsVUFBSSxHQUFXLEVBQUUsTUFBa0M7UUFDakQsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQzlCLENBQUM7Ozs7O0lBRUQsOEJBQU07Ozs7SUFBTixVQUFPLEdBQVc7UUFDaEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDekIsQ0FBQzs7Z0JBbEJGLFVBQVU7O0lBbUJYLG9CQUFDO0NBQUEsQUFuQkQsSUFtQkM7U0FsQlksYUFBYTs7Ozs7O0lBQ3hCLDhCQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEh0dHBFdmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFJlcXVlc3RzUXVldWUge1xuICBwcml2YXRlIHF1ZXVlID0gbmV3IE1hcCgpO1xuXG4gIGdldChrZXk6IHN0cmluZykge1xuICAgIHJldHVybiB0aGlzLnF1ZXVlLmdldChrZXkpO1xuICB9XG5cbiAgaGFzKGtleTogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHRoaXMucXVldWUuaGFzKGtleSk7XG4gIH1cblxuICBzZXQoa2V5OiBzdHJpbmcsIHNoYXJlZDogT2JzZXJ2YWJsZTxIdHRwRXZlbnQ8YW55Pj4pIHtcbiAgICB0aGlzLnF1ZXVlLnNldChrZXksIHNoYXJlZCk7XG4gIH1cblxuICBkZWxldGUoa2V5OiBzdHJpbmcpIHtcbiAgICB0aGlzLnF1ZXVlLmRlbGV0ZShrZXkpO1xuICB9XG59XG4iXX0=