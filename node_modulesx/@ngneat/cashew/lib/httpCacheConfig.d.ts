import { HttpParameterCodec } from '@angular/common/http';
import { InjectionToken } from '@angular/core';
import { CacheBucket } from './cacheBucket';
export interface HttpCacheConfig {
    strategy: 'implicit' | 'explicit';
    ttl: number;
    responseSerializer?: (value: any) => any;
    localStorageKey?: string;
    parameterCodec?: HttpParameterCodec;
}
export declare const defaultConfig: HttpCacheConfig;
declare type Params = {
    cache$?: boolean;
    ttl$?: number;
    key$?: string;
    bucket$?: CacheBucket;
    parameterCodec$?: HttpParameterCodec;
    [key: string]: any;
};
export declare function withCache(params?: Params): {
    params: Params;
};
export declare function cashewConfig(config?: Partial<HttpCacheConfig>): HttpCacheConfig;
export declare const HTTP_CACHE_CONFIG: InjectionToken<HttpCacheConfig>;
export {};
