{"version":3,"file":"ngneat-cashew.js","sources":["@ngneat/cashew/lib/keySerializer.ts","@ngneat/cashew/lib/httpCacheConfig.ts","@ngneat/cashew/lib/deleteByRegex.ts","@ngneat/cashew/lib/httpCacheStorage.ts","@ngneat/cashew/lib/ttlManager.ts","@ngneat/cashew/lib/httpCacheGuard.ts","@ngneat/cashew/lib/requestsQueue.ts","@ngneat/cashew/lib/cacheBucket.ts","@ngneat/cashew/lib/httpCacheManager.service.ts","@ngneat/cashew/lib/filterParams.ts","@ngneat/cashew/lib/cloneWithoutParams.ts","@ngneat/cashew/lib/httpCacheInterceptor.ts","@ngneat/cashew/lib/httpCacheInterceptor.module.ts","@ngneat/cashew/lib/localstorage/localstorage.ts","@ngneat/cashew/lib/localstorage/httpCacheLocalStorage.ts","@ngneat/cashew/lib/localstorage/localStorageTtlManager.ts","@ngneat/cashew/lib/localstorage/useHttpCacheLocalStorage.ts"],"names":[],"mappings":"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AAA,AAAA,AChBA,AAYA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAhrrpDA,AAAA,AAKA,AAAA,AAAA,AAAA,ACXA,AAKA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA","sourcesContent":["import { HttpCacheRequest } from './types';\n\nexport abstract class KeySerializer {\n  abstract serialize(request: HttpCacheRequest): string;\n}\n\nexport class DefaultKeySerializer extends KeySerializer {\n  serialize(request: HttpCacheRequest) {\n    return request.customKey || request.urlWithParams;\n  }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\nimport { InjectionToken } from '@angular/core';\nimport { CacheBucket } from './cacheBucket';\n\nexport interface HttpCacheConfig {\n  strategy: 'implicit' | 'explicit';\n  ttl: number;\n  responseSerializer?: (value: any) => any;\n  localStorageKey?: string;\n  parameterCodec?: HttpParameterCodec;\n}\n\nexport const defaultConfig: HttpCacheConfig = {\n  strategy: 'explicit',\n  ttl: 3600000, // One hour\n  localStorageKey: 'httpCache'\n};\n\ntype Params = {\n  cache$?: boolean;\n  ttl$?: number;\n  key$?: string;\n  bucket$?: CacheBucket;\n  parameterCodec$?: HttpParameterCodec;\n  [key: string]: any;\n};\n\nexport function withCache(params: Params = {}): { params: Params } {\n  return {\n    params: {\n      cache$: true,\n      ...params\n    }\n  };\n}\n\nexport function cashewConfig(config: Partial<HttpCacheConfig> = defaultConfig): HttpCacheConfig {\n  return {\n    strategy: config.strategy || defaultConfig.strategy,\n    ttl: config.ttl || defaultConfig.ttl,\n    localStorageKey: config.localStorageKey || defaultConfig.localStorageKey,\n    responseSerializer: config.responseSerializer,\n    parameterCodec: config.parameterCodec\n  };\n}\n\nexport const HTTP_CACHE_CONFIG = new InjectionToken<HttpCacheConfig>('HTTP_CACHE_CONFIG');\n","export function deleteByRegex(pattern: RegExp, cache: Map<any, any>) {\n  for (const [key] of Array.from(cache)) {\n    if ((pattern as RegExp).test(key)) {\n      cache.delete(key);\n      break;\n    }\n  }\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { deleteByRegex } from './deleteByRegex';\n\nexport abstract class HttpCacheStorage {\n  abstract has(key: string): boolean;\n  abstract get(key: string): HttpResponse<any>;\n  abstract set(key: string, response: HttpResponse<any>): void;\n  abstract delete(key?: string | RegExp): void;\n}\n\n@Injectable()\nexport class DefaultHttpCacheStorage implements HttpCacheStorage {\n  private cache = new Map<string, HttpResponse<any>>();\n\n  has(key: string): boolean {\n    return this.cache.has(key);\n  }\n\n  get(key: string) {\n    return this.cache.get(key);\n  }\n\n  set(key: string, response: HttpResponse<any>): void {\n    this.cache.set(key, response);\n  }\n\n  delete(key?: string | RegExp): void {\n    if (!key) {\n      this.cache.clear();\n      return;\n    }\n\n    if (typeof key === 'string') {\n      this.cache.delete(key as string);\n      return;\n    }\n\n    deleteByRegex(key as RegExp, this.cache);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HTTP_CACHE_CONFIG, HttpCacheConfig } from './httpCacheConfig';\nimport { deleteByRegex } from './deleteByRegex';\n\nexport abstract class TTLManager {\n  abstract isValid(key: string): boolean;\n  abstract set(key: string, ttl?: number): void;\n  abstract delete(key?: string | RegExp): void;\n}\n\n@Injectable()\nexport class DefaultTTLManager {\n  private cache = new Map<string, number>();\n\n  constructor(@Inject(HTTP_CACHE_CONFIG) private config: HttpCacheConfig) {}\n\n  isValid(key: string): boolean {\n    return this.cache.get(key) > new Date().getTime();\n  }\n\n  set(key: string, ttl?: number): void {\n    let resolveTTL = ttl || this.config.ttl;\n\n    this.cache.set(key, new Date().setMilliseconds(resolveTTL));\n  }\n\n  delete(key?: string | RegExp): void {\n    if (!key) {\n      this.cache.clear();\n      return;\n    }\n\n    if (typeof key === 'string') {\n      this.cache.delete(key as string);\n      return;\n    }\n\n    deleteByRegex(key as RegExp, this.cache);\n  }\n}\n","import { HttpCacheRequest } from './types';\n\nexport abstract class HttpCacheGuard {\n  abstract canActivate(request: HttpCacheRequest): boolean;\n}\n\nexport class DefaultHttpCacheGuard implements HttpCacheGuard {\n  canActivate(request: HttpCacheRequest): boolean {\n    return request.method === 'GET' && request.responseType === 'json';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class RequestsQueue {\n  private queue = new Map();\n\n  get(key: string) {\n    return this.queue.get(key);\n  }\n\n  has(key: string) {\n    return this.queue.has(key);\n  }\n\n  set(key: string, shared: Observable<HttpEvent<any>>) {\n    this.queue.set(key, shared);\n  }\n\n  delete(key: string) {\n    this.queue.delete(key);\n  }\n}\n","export class CacheBucket {\n  private keys = new Set();\n\n  add(key: string) {\n    this.keys.add(key);\n  }\n\n  has(key: string) {\n    return this.keys.has(key);\n  }\n\n  forEach(cb) {\n    this.keys.forEach(cb);\n  }\n\n  delete(key: string) {\n    this.keys.delete(key);\n  }\n\n  clear() {\n    this.keys.clear();\n  }\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { HTTP_CACHE_CONFIG, HttpCacheConfig } from './httpCacheConfig';\nimport { HttpCacheStorage } from './httpCacheStorage';\nimport { TTLManager } from './ttlManager';\nimport { HttpCacheGuard } from './httpCacheGuard';\nimport { RequestsQueue } from './requestsQueue';\nimport { HttpCacheRequest } from './types';\nimport { CacheBucket } from './cacheBucket';\n\n@Injectable()\nexport class HttpCacheManager {\n  constructor(\n    private queue: RequestsQueue,\n    private storage: HttpCacheStorage,\n    private guard: HttpCacheGuard,\n    private ttlManager: TTLManager,\n    @Inject(HTTP_CACHE_CONFIG) private config: HttpCacheConfig\n  ) {}\n\n  validate(key: string) {\n    const has = this.storage.has(key);\n    const isValid = this.ttlManager.isValid(key);\n    if (has && isValid) return true;\n\n    this.storage.delete(key);\n    return false;\n  }\n\n  get<T = any>(key: string): HttpResponse<T> {\n    return this._resolveResponse<T>(this.storage.get(key));\n  }\n\n  has(key: string) {\n    return this.storage.has(key);\n  }\n\n  set(key: string, body: HttpResponse<any> | any, { ttl, bucket }: { ttl?: number; bucket?: CacheBucket } = {}) {\n    let response = body;\n\n    if (!(body instanceof HttpResponse)) {\n      response = new HttpResponse({\n        body,\n        status: 200,\n        url: key\n      });\n    }\n\n    this._set(key, response, ttl);\n    bucket && bucket.add(key);\n  }\n\n  delete(key?: string | RegExp | CacheBucket): void {\n    if (key instanceof CacheBucket) {\n      key.forEach(value => this.delete(value));\n      key.clear();\n      return;\n    }\n\n    this.storage.delete(key);\n    this.ttlManager.delete(key);\n  }\n\n  _getQueue(): RequestsQueue {\n    return this.queue;\n  }\n\n  _isCacheable(canActivate: boolean, cache: any) {\n    const strategy = this.config.strategy;\n    if (strategy === 'explicit') {\n      return cache;\n    }\n\n    if (canActivate && strategy === 'implicit') {\n      return cache !== false;\n    }\n\n    return false;\n  }\n\n  _set(key: string, response: HttpResponse<any>, ttl: number) {\n    this.storage.set(key, response);\n    this.ttlManager.set(key, ttl);\n  }\n\n  _canActivate(request: HttpCacheRequest) {\n    return this.guard.canActivate(request);\n  }\n\n  _resolveResponse<T = any>(event: HttpResponse<T>): HttpResponse<T> {\n    return this.config.responseSerializer ? event.clone({ body: this.config.responseSerializer(event.body) }) : event;\n  }\n}\n","import { HttpCacheRequest } from './types';\n\nconst filterKeys = ['ttl$', 'cache$', 'key$', 'bucket$', 'parameterCodec$'];\n\nexport function filterParams(request: HttpCacheRequest) {\n  return request.params.keys().reduce((acc, key) => {\n    if (filterKeys.includes(key) === false) {\n      acc[key] = request.params.getAll(key);\n    }\n\n    return acc;\n  }, {});\n}\n","import { HttpParameterCodec, HttpParams } from '@angular/common/http';\nimport { filterParams } from './filterParams';\nimport { HttpCacheRequest } from './types';\n\nexport function cloneWithoutParams(\n  request: HttpCacheRequest,\n  customKey: string,\n  parameterCodec?: HttpParameterCodec\n): HttpCacheRequest {\n  const filteredParams = filterParams(request);\n\n  const clone = request.clone({\n    params: new HttpParams({\n      fromObject: filteredParams,\n      ...(parameterCodec && { encoder: parameterCodec })\n    })\n  });\n\n  (clone as HttpCacheRequest).customKey = customKey;\n\n  return clone as HttpCacheRequest;\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { finalize, share, tap } from 'rxjs/operators';\nimport { HTTP_CACHE_CONFIG, HttpCacheConfig } from './httpCacheConfig';\n\nimport { HttpCacheManager } from './httpCacheManager.service';\nimport { cloneWithoutParams } from './cloneWithoutParams';\nimport { KeySerializer } from './keySerializer';\nimport { CacheBucket } from './cacheBucket';\n\n@Injectable()\nexport class HttpCacheInterceptor implements HttpInterceptor {\n  constructor(\n    private httpCacheManager: HttpCacheManager,\n    private keySerializer: KeySerializer,\n    @Inject(HTTP_CACHE_CONFIG) private config: HttpCacheConfig\n  ) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const canActivate = this.httpCacheManager._canActivate(request);\n    const cache = request.params.get('cache$');\n    const ttl = request.params.get('ttl$');\n    const customKey = request.params.get('key$');\n    const bucket: any = request.params.get('bucket$');\n\n    const localParameterCodec: any = request.params.get('parameterCodec$');\n    const globalParameterCodec = this.config.parameterCodec;\n    const parameterCodec = localParameterCodec || globalParameterCodec;\n\n    const clone = cloneWithoutParams(request, customKey, parameterCodec);\n    const key = this.keySerializer.serialize(clone);\n    const queue = this.httpCacheManager._getQueue();\n\n    if (this.httpCacheManager._isCacheable(canActivate, cache)) {\n      bucket && (bucket as CacheBucket).add(key);\n\n      if (queue.has(key)) {\n        return queue.get(key);\n      }\n\n      if (this.httpCacheManager.validate(key)) {\n        return of(this.httpCacheManager.get(key));\n      }\n      const shared = next.handle(clone).pipe(\n        tap(event => {\n          if (event instanceof HttpResponse) {\n            const cache = this.httpCacheManager._resolveResponse(event);\n            this.httpCacheManager._set(key, cache, +ttl);\n          }\n        }),\n        finalize(() => {\n          queue.delete(key);\n        }),\n        share()\n      );\n\n      queue.set(key, shared);\n\n      return shared;\n    }\n\n    return next.handle(clone);\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { HttpCacheInterceptor } from './httpCacheInterceptor';\nimport { DefaultKeySerializer, KeySerializer } from './keySerializer';\nimport { DefaultHttpCacheStorage, HttpCacheStorage } from './httpCacheStorage';\nimport { defaultConfig, HTTP_CACHE_CONFIG, HttpCacheConfig } from './httpCacheConfig';\nimport { HttpCacheManager } from './httpCacheManager.service';\nimport { DefaultTTLManager, TTLManager } from './ttlManager';\nimport { DefaultHttpCacheGuard, HttpCacheGuard } from './httpCacheGuard';\nimport { RequestsQueue } from './requestsQueue';\n\n@NgModule({})\nexport class HttpCacheInterceptorModule {\n  static forRoot(config: Partial<HttpCacheConfig> = {}): ModuleWithProviders<HttpCacheInterceptorModule> {\n    return {\n      providers: [\n        { provide: HTTP_CACHE_CONFIG, useValue: { ...defaultConfig, ...config } },\n        { provide: KeySerializer, useClass: DefaultKeySerializer },\n        { provide: HttpCacheStorage, useClass: DefaultHttpCacheStorage },\n        { provide: TTLManager, useClass: DefaultTTLManager },\n        { provide: HttpCacheGuard, useClass: DefaultHttpCacheGuard },\n        { provide: HTTP_INTERCEPTORS, useClass: HttpCacheInterceptor, multi: true },\n        HttpCacheManager,\n        RequestsQueue\n      ],\n      ngModule: HttpCacheInterceptorModule\n    };\n  }\n}\n","export function setCacheInStorage(key: string, storage: Map<string, any>) {\n  localStorage.setItem(key, JSON.stringify(mapToObj(storage)));\n}\n\nexport function getStorageCache(key: string): Map<string, any> {\n  const storage = JSON.parse(localStorage.getItem(key) || '{}');\n  const map = new Map();\n  Object.keys(storage).forEach(key => map.set(key, storage[key]));\n\n  return map;\n}\n\nexport function clearStorageCache(key: string) {\n  localStorage.removeItem(key);\n}\n\nfunction mapToObj(map: Map<any, any>) {\n  return Array.from(map).reduce((obj, [key, value]) => {\n    obj[key] = value;\n    return obj;\n  }, {});\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { deleteByRegex } from '../deleteByRegex';\nimport { DefaultHttpCacheStorage, HttpCacheStorage } from '../httpCacheStorage';\nimport { HTTP_CACHE_CONFIG, HttpCacheConfig } from '../httpCacheConfig';\nimport { setCacheInStorage, getStorageCache, clearStorageCache } from './localstorage';\n\n@Injectable()\nexport class HttpCacheLocalStorage implements HttpCacheStorage {\n  private readonly cache = new DefaultHttpCacheStorage();\n  private readonly storageKey: string;\n\n  constructor(@Inject(HTTP_CACHE_CONFIG) private config: HttpCacheConfig) {\n    this.storageKey = config.localStorageKey;\n  }\n\n  has(key: string): boolean {\n    return this.cache.has(key) || getStorageCache(this.storageKey).has(key);\n  }\n\n  get(key: string): HttpResponse<any> {\n    const cacheValue = this.cache.get(key);\n    if (cacheValue) {\n      return cacheValue;\n    }\n\n    const value = getStorageCache(this.storageKey).get(key);\n    if (value) {\n      const response = new HttpResponse(value);\n      this.cache.set(key, response);\n    }\n\n    return this.cache.get(key);\n  }\n\n  set(key: string, response: HttpResponse<any>): void {\n    const storage = getStorageCache(this.storageKey);\n    storage.set(key, response);\n    setCacheInStorage(this.storageKey, storage);\n    this.cache.set(key, response);\n  }\n\n  delete(key?: string | RegExp): void {\n    this.cache.delete(key);\n\n    if (!key) {\n      clearStorageCache(this.storageKey);\n      return;\n    }\n\n    const storage = getStorageCache(this.storageKey);\n\n    if (typeof key === 'string') {\n      storage.delete(key);\n      setCacheInStorage(this.storageKey, storage);\n      return;\n    }\n\n    deleteByRegex(key as RegExp, storage);\n    setCacheInStorage(this.storageKey, storage);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HTTP_CACHE_CONFIG, HttpCacheConfig } from '../httpCacheConfig';\nimport { DefaultTTLManager } from '../ttlManager';\nimport { deleteByRegex } from '../deleteByRegex';\nimport { setCacheInStorage, getStorageCache, clearStorageCache } from './localstorage';\n\n@Injectable()\nexport class LocalStorageTTLManager {\n  private readonly ttl: DefaultTTLManager;\n  private readonly ttlStorageKey: string;\n\n  constructor(@Inject(HTTP_CACHE_CONFIG) private config: HttpCacheConfig) {\n    this.ttlStorageKey = `${config.localStorageKey}TTL`;\n    this.ttl = new DefaultTTLManager(config);\n  }\n\n  isValid(key: string): boolean {\n    const valid = this.ttl.isValid(key);\n    if (valid) {\n      return true;\n    }\n\n    const localStorageTimeStamp = getStorageCache(this.ttlStorageKey).get(key);\n    const validInStorage = localStorageTimeStamp > new Date().getTime();\n\n    if (validInStorage) {\n      this.ttl.set(key, localStorageTimeStamp - new Date().getTime());\n    }\n\n    return validInStorage;\n  }\n\n  set(key: string, ttl?: number) {\n    const resolveTTL = ttl || this.config.ttl;\n    const storage = getStorageCache(this.ttlStorageKey);\n    storage.set(key, new Date().setMilliseconds(resolveTTL));\n    setCacheInStorage(this.ttlStorageKey, storage);\n    this.ttl.set(key, resolveTTL);\n  }\n\n  delete(key?: string | RegExp) {\n    this.ttl.delete(key);\n\n    if (!key) {\n      clearStorageCache(this.ttlStorageKey);\n      return;\n    }\n\n    if (typeof key === 'string') {\n      const storage = getStorageCache(this.ttlStorageKey);\n      storage.delete(key);\n      setCacheInStorage(this.ttlStorageKey, storage);\n      return;\n    }\n\n    const storage = getStorageCache(this.ttlStorageKey);\n    deleteByRegex(key as RegExp, storage);\n    setCacheInStorage(this.ttlStorageKey, storage);\n  }\n}\n","import { TTLManager } from '../ttlManager';\nimport { HttpCacheStorage } from '../httpCacheStorage';\nimport { HttpCacheLocalStorage } from './httpCacheLocalStorage';\nimport { LocalStorageTTLManager } from './localStorageTtlManager';\n\nexport const useHttpCacheLocalStorage = [\n  { provide: HttpCacheStorage, useClass: HttpCacheLocalStorage },\n  { provide: TTLManager, useClass: LocalStorageTTLManager }\n];\n"]}