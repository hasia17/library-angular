{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@ngneat/cashew/lib/keySerializer.ts","ng://@ngneat/cashew/lib/httpCacheConfig.ts","ng://@ngneat/cashew/lib/deleteByRegex.ts","ng://@ngneat/cashew/lib/httpCacheStorage.ts","ng://@ngneat/cashew/lib/ttlManager.ts","ng://@ngneat/cashew/lib/httpCacheGuard.ts","ng://@ngneat/cashew/lib/requestsQueue.ts","ng://@ngneat/cashew/lib/cacheBucket.ts","ng://@ngneat/cashew/lib/httpCacheManager.service.ts","ng://@ngneat/cashew/lib/filterParams.ts","ng://@ngneat/cashew/lib/cloneWithoutParams.ts","ng://@ngneat/cashew/lib/httpCacheInterceptor.ts","ng://@ngneat/cashew/lib/httpCacheInterceptor.module.ts","ng://@ngneat/cashew/lib/localstorage/localstorage.ts","ng://@ngneat/cashew/lib/localstorage/httpCacheLocalStorage.ts","ng://@ngneat/cashew/lib/localstorage/localStorageTtlManager.ts","ng://@ngneat/cashew/lib/localstorage/useHttpCacheLocalStorage.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","KeySerializer","__extends","__","constructor","create","tslib_1.__extends","DefaultKeySerializer","serialize","request","customKey","urlWithParams","defaultConfig","strategy","ttl","localStorageKey","HTTP_CACHE_CONFIG","InjectionToken","deleteByRegex","pattern","cache","_b","__values","tslib_1.__values","from","_c","key","test","delete","HttpCacheStorage","DefaultHttpCacheStorage","has","get","set","response","clear","Injectable","Map","TTLManager","DefaultTTLManager","isValid","Date","getTime","resolveTTL","config","setMilliseconds","Inject","args","HttpCacheGuard","DefaultHttpCacheGuard","canActivate","method","responseType","RequestsQueue","queue","shared","CacheBucket","add","keys","forEach","cb","Set","HttpCacheManager","validate","storage","ttlManager","_resolveResponse","body","_a","bucket","HttpResponse","status","url","_set","_this","_getQueue","_isCacheable","_canActivate","guard","event","responseSerializer","clone","filterKeys","cloneWithoutParams","parameterCodec","filteredParams","filterParams","params","reduce","acc","includes","getAll","HttpParams","fromObject","encoder","HttpCacheInterceptor","intercept","httpCacheManager","localParameterCodec","globalParameterCodec","keySerializer","of","handle","pipe","tap","cache_1","finalize","share","HttpCacheInterceptorModule","forRoot","providers","provide","useValue","useClass","HTTP_INTERCEPTORS","multi","ngModule","NgModule","setCacheInStorage","localStorage","setItem","JSON","stringify","mapToObj","map","obj","getStorageCache","parse","getItem","clearStorageCache","removeItem","HttpCacheLocalStorage","storageKey","cacheValue","LocalStorageTTLManager","localStorageTimeStamp","ttlStorageKey","validInStorage","storage_1","useHttpCacheLocalStorage","withCache","cache$","cashewConfig"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { HttpCacheRequest } from './types';\n\nexport abstract class KeySerializer {\n  abstract serialize(request: HttpCacheRequest): string;\n}\n\nexport class DefaultKeySerializer extends KeySerializer {\n  serialize(request: HttpCacheRequest) {\n    return request.customKey || request.urlWithParams;\n  }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\nimport { InjectionToken } from '@angular/core';\nimport { CacheBucket } from './cacheBucket';\n\nexport interface HttpCacheConfig {\n  strategy: 'implicit' | 'explicit';\n  ttl: number;\n  responseSerializer?: (value: any) => any;\n  localStorageKey?: string;\n  parameterCodec?: HttpParameterCodec;\n}\n\nexport const defaultConfig: HttpCacheConfig = {\n  strategy: 'explicit',\n  ttl: 3600000, // One hour\n  localStorageKey: 'httpCache'\n};\n\ntype Params = {\n  cache$?: boolean;\n  ttl$?: number;\n  key$?: string;\n  bucket$?: CacheBucket;\n  parameterCodec$?: HttpParameterCodec;\n  [key: string]: any;\n};\n\nexport function withCache(params: Params = {}): { params: Params } {\n  return {\n    params: {\n      cache$: true,\n      ...params\n    }\n  };\n}\n\nexport function cashewConfig(config: Partial<HttpCacheConfig> = defaultConfig): HttpCacheConfig {\n  return {\n    strategy: config.strategy || defaultConfig.strategy,\n    ttl: config.ttl || defaultConfig.ttl,\n    localStorageKey: config.localStorageKey || defaultConfig.localStorageKey,\n    responseSerializer: config.responseSerializer,\n    parameterCodec: config.parameterCodec\n  };\n}\n\nexport const HTTP_CACHE_CONFIG = new InjectionToken<HttpCacheConfig>('HTTP_CACHE_CONFIG');\n","export function deleteByRegex(pattern: RegExp, cache: Map<any, any>) {\n  for (const [key] of Array.from(cache)) {\n    if ((pattern as RegExp).test(key)) {\n      cache.delete(key);\n      break;\n    }\n  }\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { deleteByRegex } from './deleteByRegex';\n\nexport abstract class HttpCacheStorage {\n  abstract has(key: string): boolean;\n  abstract get(key: string): HttpResponse<any>;\n  abstract set(key: string, response: HttpResponse<any>): void;\n  abstract delete(key?: string | RegExp): void;\n}\n\n@Injectable()\nexport class DefaultHttpCacheStorage implements HttpCacheStorage {\n  private cache = new Map<string, HttpResponse<any>>();\n\n  has(key: string): boolean {\n    return this.cache.has(key);\n  }\n\n  get(key: string) {\n    return this.cache.get(key);\n  }\n\n  set(key: string, response: HttpResponse<any>): void {\n    this.cache.set(key, response);\n  }\n\n  delete(key?: string | RegExp): void {\n    if (!key) {\n      this.cache.clear();\n      return;\n    }\n\n    if (typeof key === 'string') {\n      this.cache.delete(key as string);\n      return;\n    }\n\n    deleteByRegex(key as RegExp, this.cache);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HTTP_CACHE_CONFIG, HttpCacheConfig } from './httpCacheConfig';\nimport { deleteByRegex } from './deleteByRegex';\n\nexport abstract class TTLManager {\n  abstract isValid(key: string): boolean;\n  abstract set(key: string, ttl?: number): void;\n  abstract delete(key?: string | RegExp): void;\n}\n\n@Injectable()\nexport class DefaultTTLManager {\n  private cache = new Map<string, number>();\n\n  constructor(@Inject(HTTP_CACHE_CONFIG) private config: HttpCacheConfig) {}\n\n  isValid(key: string): boolean {\n    return this.cache.get(key) > new Date().getTime();\n  }\n\n  set(key: string, ttl?: number): void {\n    let resolveTTL = ttl || this.config.ttl;\n\n    this.cache.set(key, new Date().setMilliseconds(resolveTTL));\n  }\n\n  delete(key?: string | RegExp): void {\n    if (!key) {\n      this.cache.clear();\n      return;\n    }\n\n    if (typeof key === 'string') {\n      this.cache.delete(key as string);\n      return;\n    }\n\n    deleteByRegex(key as RegExp, this.cache);\n  }\n}\n","import { HttpCacheRequest } from './types';\n\nexport abstract class HttpCacheGuard {\n  abstract canActivate(request: HttpCacheRequest): boolean;\n}\n\nexport class DefaultHttpCacheGuard implements HttpCacheGuard {\n  canActivate(request: HttpCacheRequest): boolean {\n    return request.method === 'GET' && request.responseType === 'json';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class RequestsQueue {\n  private queue = new Map();\n\n  get(key: string) {\n    return this.queue.get(key);\n  }\n\n  has(key: string) {\n    return this.queue.has(key);\n  }\n\n  set(key: string, shared: Observable<HttpEvent<any>>) {\n    this.queue.set(key, shared);\n  }\n\n  delete(key: string) {\n    this.queue.delete(key);\n  }\n}\n","export class CacheBucket {\n  private keys = new Set();\n\n  add(key: string) {\n    this.keys.add(key);\n  }\n\n  has(key: string) {\n    return this.keys.has(key);\n  }\n\n  forEach(cb) {\n    this.keys.forEach(cb);\n  }\n\n  delete(key: string) {\n    this.keys.delete(key);\n  }\n\n  clear() {\n    this.keys.clear();\n  }\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { HTTP_CACHE_CONFIG, HttpCacheConfig } from './httpCacheConfig';\nimport { HttpCacheStorage } from './httpCacheStorage';\nimport { TTLManager } from './ttlManager';\nimport { HttpCacheGuard } from './httpCacheGuard';\nimport { RequestsQueue } from './requestsQueue';\nimport { HttpCacheRequest } from './types';\nimport { CacheBucket } from './cacheBucket';\n\n@Injectable()\nexport class HttpCacheManager {\n  constructor(\n    private queue: RequestsQueue,\n    private storage: HttpCacheStorage,\n    private guard: HttpCacheGuard,\n    private ttlManager: TTLManager,\n    @Inject(HTTP_CACHE_CONFIG) private config: HttpCacheConfig\n  ) {}\n\n  validate(key: string) {\n    const has = this.storage.has(key);\n    const isValid = this.ttlManager.isValid(key);\n    if (has && isValid) return true;\n\n    this.storage.delete(key);\n    return false;\n  }\n\n  get<T = any>(key: string): HttpResponse<T> {\n    return this._resolveResponse<T>(this.storage.get(key));\n  }\n\n  has(key: string) {\n    return this.storage.has(key);\n  }\n\n  set(key: string, body: HttpResponse<any> | any, { ttl, bucket }: { ttl?: number; bucket?: CacheBucket } = {}) {\n    let response = body;\n\n    if (!(body instanceof HttpResponse)) {\n      response = new HttpResponse({\n        body,\n        status: 200,\n        url: key\n      });\n    }\n\n    this._set(key, response, ttl);\n    bucket && bucket.add(key);\n  }\n\n  delete(key?: string | RegExp | CacheBucket): void {\n    if (key instanceof CacheBucket) {\n      key.forEach(value => this.delete(value));\n      key.clear();\n      return;\n    }\n\n    this.storage.delete(key);\n    this.ttlManager.delete(key);\n  }\n\n  _getQueue(): RequestsQueue {\n    return this.queue;\n  }\n\n  _isCacheable(canActivate: boolean, cache: any) {\n    const strategy = this.config.strategy;\n    if (strategy === 'explicit') {\n      return cache;\n    }\n\n    if (canActivate && strategy === 'implicit') {\n      return cache !== false;\n    }\n\n    return false;\n  }\n\n  _set(key: string, response: HttpResponse<any>, ttl: number) {\n    this.storage.set(key, response);\n    this.ttlManager.set(key, ttl);\n  }\n\n  _canActivate(request: HttpCacheRequest) {\n    return this.guard.canActivate(request);\n  }\n\n  _resolveResponse<T = any>(event: HttpResponse<T>): HttpResponse<T> {\n    return this.config.responseSerializer ? event.clone({ body: this.config.responseSerializer(event.body) }) : event;\n  }\n}\n","import { HttpCacheRequest } from './types';\n\nconst filterKeys = ['ttl$', 'cache$', 'key$', 'bucket$', 'parameterCodec$'];\n\nexport function filterParams(request: HttpCacheRequest) {\n  return request.params.keys().reduce((acc, key) => {\n    if (filterKeys.includes(key) === false) {\n      acc[key] = request.params.getAll(key);\n    }\n\n    return acc;\n  }, {});\n}\n","import { HttpParameterCodec, HttpParams } from '@angular/common/http';\nimport { filterParams } from './filterParams';\nimport { HttpCacheRequest } from './types';\n\nexport function cloneWithoutParams(\n  request: HttpCacheRequest,\n  customKey: string,\n  parameterCodec?: HttpParameterCodec\n): HttpCacheRequest {\n  const filteredParams = filterParams(request);\n\n  const clone = request.clone({\n    params: new HttpParams({\n      fromObject: filteredParams,\n      ...(parameterCodec && { encoder: parameterCodec })\n    })\n  });\n\n  (clone as HttpCacheRequest).customKey = customKey;\n\n  return clone as HttpCacheRequest;\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { finalize, share, tap } from 'rxjs/operators';\nimport { HTTP_CACHE_CONFIG, HttpCacheConfig } from './httpCacheConfig';\n\nimport { HttpCacheManager } from './httpCacheManager.service';\nimport { cloneWithoutParams } from './cloneWithoutParams';\nimport { KeySerializer } from './keySerializer';\nimport { CacheBucket } from './cacheBucket';\n\n@Injectable()\nexport class HttpCacheInterceptor implements HttpInterceptor {\n  constructor(\n    private httpCacheManager: HttpCacheManager,\n    private keySerializer: KeySerializer,\n    @Inject(HTTP_CACHE_CONFIG) private config: HttpCacheConfig\n  ) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const canActivate = this.httpCacheManager._canActivate(request);\n    const cache = request.params.get('cache$');\n    const ttl = request.params.get('ttl$');\n    const customKey = request.params.get('key$');\n    const bucket: any = request.params.get('bucket$');\n\n    const localParameterCodec: any = request.params.get('parameterCodec$');\n    const globalParameterCodec = this.config.parameterCodec;\n    const parameterCodec = localParameterCodec || globalParameterCodec;\n\n    const clone = cloneWithoutParams(request, customKey, parameterCodec);\n    const key = this.keySerializer.serialize(clone);\n    const queue = this.httpCacheManager._getQueue();\n\n    if (this.httpCacheManager._isCacheable(canActivate, cache)) {\n      bucket && (bucket as CacheBucket).add(key);\n\n      if (queue.has(key)) {\n        return queue.get(key);\n      }\n\n      if (this.httpCacheManager.validate(key)) {\n        return of(this.httpCacheManager.get(key));\n      }\n      const shared = next.handle(clone).pipe(\n        tap(event => {\n          if (event instanceof HttpResponse) {\n            const cache = this.httpCacheManager._resolveResponse(event);\n            this.httpCacheManager._set(key, cache, +ttl);\n          }\n        }),\n        finalize(() => {\n          queue.delete(key);\n        }),\n        share()\n      );\n\n      queue.set(key, shared);\n\n      return shared;\n    }\n\n    return next.handle(clone);\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { HttpCacheInterceptor } from './httpCacheInterceptor';\nimport { DefaultKeySerializer, KeySerializer } from './keySerializer';\nimport { DefaultHttpCacheStorage, HttpCacheStorage } from './httpCacheStorage';\nimport { defaultConfig, HTTP_CACHE_CONFIG, HttpCacheConfig } from './httpCacheConfig';\nimport { HttpCacheManager } from './httpCacheManager.service';\nimport { DefaultTTLManager, TTLManager } from './ttlManager';\nimport { DefaultHttpCacheGuard, HttpCacheGuard } from './httpCacheGuard';\nimport { RequestsQueue } from './requestsQueue';\n\n@NgModule({})\nexport class HttpCacheInterceptorModule {\n  static forRoot(config: Partial<HttpCacheConfig> = {}): ModuleWithProviders<HttpCacheInterceptorModule> {\n    return {\n      providers: [\n        { provide: HTTP_CACHE_CONFIG, useValue: { ...defaultConfig, ...config } },\n        { provide: KeySerializer, useClass: DefaultKeySerializer },\n        { provide: HttpCacheStorage, useClass: DefaultHttpCacheStorage },\n        { provide: TTLManager, useClass: DefaultTTLManager },\n        { provide: HttpCacheGuard, useClass: DefaultHttpCacheGuard },\n        { provide: HTTP_INTERCEPTORS, useClass: HttpCacheInterceptor, multi: true },\n        HttpCacheManager,\n        RequestsQueue\n      ],\n      ngModule: HttpCacheInterceptorModule\n    };\n  }\n}\n","export function setCacheInStorage(key: string, storage: Map<string, any>) {\n  localStorage.setItem(key, JSON.stringify(mapToObj(storage)));\n}\n\nexport function getStorageCache(key: string): Map<string, any> {\n  const storage = JSON.parse(localStorage.getItem(key) || '{}');\n  const map = new Map();\n  Object.keys(storage).forEach(key => map.set(key, storage[key]));\n\n  return map;\n}\n\nexport function clearStorageCache(key: string) {\n  localStorage.removeItem(key);\n}\n\nfunction mapToObj(map: Map<any, any>) {\n  return Array.from(map).reduce((obj, [key, value]) => {\n    obj[key] = value;\n    return obj;\n  }, {});\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { deleteByRegex } from '../deleteByRegex';\nimport { DefaultHttpCacheStorage, HttpCacheStorage } from '../httpCacheStorage';\nimport { HTTP_CACHE_CONFIG, HttpCacheConfig } from '../httpCacheConfig';\nimport { setCacheInStorage, getStorageCache, clearStorageCache } from './localstorage';\n\n@Injectable()\nexport class HttpCacheLocalStorage implements HttpCacheStorage {\n  private readonly cache = new DefaultHttpCacheStorage();\n  private readonly storageKey: string;\n\n  constructor(@Inject(HTTP_CACHE_CONFIG) private config: HttpCacheConfig) {\n    this.storageKey = config.localStorageKey;\n  }\n\n  has(key: string): boolean {\n    return this.cache.has(key) || getStorageCache(this.storageKey).has(key);\n  }\n\n  get(key: string): HttpResponse<any> {\n    const cacheValue = this.cache.get(key);\n    if (cacheValue) {\n      return cacheValue;\n    }\n\n    const value = getStorageCache(this.storageKey).get(key);\n    if (value) {\n      const response = new HttpResponse(value);\n      this.cache.set(key, response);\n    }\n\n    return this.cache.get(key);\n  }\n\n  set(key: string, response: HttpResponse<any>): void {\n    const storage = getStorageCache(this.storageKey);\n    storage.set(key, response);\n    setCacheInStorage(this.storageKey, storage);\n    this.cache.set(key, response);\n  }\n\n  delete(key?: string | RegExp): void {\n    this.cache.delete(key);\n\n    if (!key) {\n      clearStorageCache(this.storageKey);\n      return;\n    }\n\n    const storage = getStorageCache(this.storageKey);\n\n    if (typeof key === 'string') {\n      storage.delete(key);\n      setCacheInStorage(this.storageKey, storage);\n      return;\n    }\n\n    deleteByRegex(key as RegExp, storage);\n    setCacheInStorage(this.storageKey, storage);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HTTP_CACHE_CONFIG, HttpCacheConfig } from '../httpCacheConfig';\nimport { DefaultTTLManager } from '../ttlManager';\nimport { deleteByRegex } from '../deleteByRegex';\nimport { setCacheInStorage, getStorageCache, clearStorageCache } from './localstorage';\n\n@Injectable()\nexport class LocalStorageTTLManager {\n  private readonly ttl: DefaultTTLManager;\n  private readonly ttlStorageKey: string;\n\n  constructor(@Inject(HTTP_CACHE_CONFIG) private config: HttpCacheConfig) {\n    this.ttlStorageKey = `${config.localStorageKey}TTL`;\n    this.ttl = new DefaultTTLManager(config);\n  }\n\n  isValid(key: string): boolean {\n    const valid = this.ttl.isValid(key);\n    if (valid) {\n      return true;\n    }\n\n    const localStorageTimeStamp = getStorageCache(this.ttlStorageKey).get(key);\n    const validInStorage = localStorageTimeStamp > new Date().getTime();\n\n    if (validInStorage) {\n      this.ttl.set(key, localStorageTimeStamp - new Date().getTime());\n    }\n\n    return validInStorage;\n  }\n\n  set(key: string, ttl?: number) {\n    const resolveTTL = ttl || this.config.ttl;\n    const storage = getStorageCache(this.ttlStorageKey);\n    storage.set(key, new Date().setMilliseconds(resolveTTL));\n    setCacheInStorage(this.ttlStorageKey, storage);\n    this.ttl.set(key, resolveTTL);\n  }\n\n  delete(key?: string | RegExp) {\n    this.ttl.delete(key);\n\n    if (!key) {\n      clearStorageCache(this.ttlStorageKey);\n      return;\n    }\n\n    if (typeof key === 'string') {\n      const storage = getStorageCache(this.ttlStorageKey);\n      storage.delete(key);\n      setCacheInStorage(this.ttlStorageKey, storage);\n      return;\n    }\n\n    const storage = getStorageCache(this.ttlStorageKey);\n    deleteByRegex(key as RegExp, storage);\n    setCacheInStorage(this.ttlStorageKey, storage);\n  }\n}\n","import { TTLManager } from '../ttlManager';\nimport { HttpCacheStorage } from '../httpCacheStorage';\nimport { HttpCacheLocalStorage } from './httpCacheLocalStorage';\nimport { LocalStorageTTLManager } from './localStorageTtlManager';\n\nexport const useHttpCacheLocalStorage = [\n  { provide: HttpCacheStorage, useClass: HttpCacheLocalStorage },\n  { provide: TTLManager, useClass: LocalStorageTTLManager }\n];\n"]}