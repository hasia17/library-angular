import { Directive, Input, Inject, ViewContainerRef, TemplateRef } from '@angular/core';
import { AUTH_SERVICE } from '../../api/injection-tokens';
export class TkIfPermDirective {
    constructor(templateRef, viewContainer, authService) {
        this.templateRef = templateRef;
        this.viewContainer = viewContainer;
        this.authService = authService;
    }
    set tkIfPerm(permission) {
        this.permission = permission;
    }
    ngOnInit() {
        if (!this.authService.hasPermission(this.permission)) {
            console.log(`Hide element because no perm ${this.permission}`);
            this.viewContainer.clear();
        }
        else {
            this.viewContainer.createEmbeddedView(this.templateRef);
        }
    }
}
TkIfPermDirective.decorators = [
    { type: Directive, args: [{ selector: '[tkIfPerm]' },] }
];
TkIfPermDirective.ctorParameters = () => [
    { type: TemplateRef },
    { type: ViewContainerRef },
    { type: undefined, decorators: [{ type: Inject, args: [AUTH_SERVICE,] }] }
];
TkIfPermDirective.propDecorators = {
    loaderState: [{ type: Input }],
    tkIfPerm: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGtpZnBlcm0uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvcG9ydGFsLWxpYi9zcmMvbGliL3RraXQtcG9ydGFsL2NvbXBvbmVudHMvdGtpZnBlcm0uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUF5QixNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsV0FBVyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBRXZILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUcxRCxNQUFNLE9BQU8saUJBQWlCO0lBRzVCLFlBQ1UsV0FBNkIsRUFDN0IsYUFBK0IsRUFDVCxXQUF5QjtRQUYvQyxnQkFBVyxHQUFYLFdBQVcsQ0FBa0I7UUFDN0Isa0JBQWEsR0FBYixhQUFhLENBQWtCO1FBQ1QsZ0JBQVcsR0FBWCxXQUFXLENBQWM7SUFDdEQsQ0FBQztJQUVKLElBQ0ksUUFBUSxDQUFDLFVBQWtCO1FBQzdCLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO0lBQy9CLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsRUFBRTtZQUNwRCxPQUFPLENBQUMsR0FBRyxDQUFDLGdDQUFnQyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQztZQUMvRCxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDO1NBQzVCO2FBQU07WUFDTCxJQUFJLENBQUMsYUFBYSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztTQUN6RDtJQUNILENBQUM7OztZQXRCRixTQUFTLFNBQUMsRUFBRSxRQUFRLEVBQUUsWUFBWSxFQUFFOzs7WUFKdUMsV0FBVztZQUE3QixnQkFBZ0I7NENBV3JFLE1BQU0sU0FBQyxZQUFZOzs7MEJBSnJCLEtBQUs7dUJBT0wsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIFJlbmRlcmVyMiwgRWxlbWVudFJlZiwgSW5qZWN0LCBWaWV3Q29udGFpbmVyUmVmLCBUZW1wbGF0ZVJlZiwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IElBdXRoU2VydmljZSB9IGZyb20gJy4uLy4uL2FwaS9pYXV0aC5zZXJ2aWNlJztcclxuaW1wb3J0IHsgQVVUSF9TRVJWSUNFIH0gZnJvbSAnLi4vLi4vYXBpL2luamVjdGlvbi10b2tlbnMnO1xyXG5cclxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnW3RrSWZQZXJtXScgfSlcclxuZXhwb3J0IGNsYXNzIFRrSWZQZXJtRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0IHtcclxuICBwZXJtaXNzaW9uOiBzdHJpbmc7XHJcbiAgQElucHV0KCkgbG9hZGVyU3RhdGU6IGJvb2xlYW47XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+LFxyXG4gICAgcHJpdmF0ZSB2aWV3Q29udGFpbmVyOiBWaWV3Q29udGFpbmVyUmVmLFxyXG4gICAgQEluamVjdChBVVRIX1NFUlZJQ0UpIHByaXZhdGUgYXV0aFNlcnZpY2U6IElBdXRoU2VydmljZVxyXG4gICkge31cclxuXHJcbiAgQElucHV0KClcclxuICBzZXQgdGtJZlBlcm0ocGVybWlzc2lvbjogc3RyaW5nKSB7XHJcbiAgICB0aGlzLnBlcm1pc3Npb24gPSBwZXJtaXNzaW9uO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICBpZiAoIXRoaXMuYXV0aFNlcnZpY2UuaGFzUGVybWlzc2lvbih0aGlzLnBlcm1pc3Npb24pKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGBIaWRlIGVsZW1lbnQgYmVjYXVzZSBubyBwZXJtICR7dGhpcy5wZXJtaXNzaW9ufWApO1xyXG4gICAgICB0aGlzLnZpZXdDb250YWluZXIuY2xlYXIoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMudmlld0NvbnRhaW5lci5jcmVhdGVFbWJlZGRlZFZpZXcodGhpcy50ZW1wbGF0ZVJlZik7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==