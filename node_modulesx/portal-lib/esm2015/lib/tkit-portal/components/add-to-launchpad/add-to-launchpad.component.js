import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';
import { IconsService } from '../../../api/services/icons.service';
import { FormBuilder, Validators } from '@angular/forms';
import { LaunchpadService } from '../../../api/services/launchpad.service';
import { AUTH_SERVICE } from '../../../api/injection-tokens';
import { MessageService } from 'primeng/api';
import { ConfigurationService } from '../../../api/configuration.service';
export class AddToLaunchpadComponent {
    constructor(iconsService, fb, launchpadService, auth, messageService, confService) {
        this.iconsService = iconsService;
        this.fb = fb;
        this.launchpadService = launchpadService;
        this.auth = auth;
        this.messageService = messageService;
        this.confService = confService;
        this.closed = new EventEmitter();
        this.launchpads = [];
    }
    ngOnInit() {
        this.iconsService.getPrimeicons().subscribe(icons => (this.icons = icons.filter(i => !!i)), error => console.log(error));
        this.launchpadForm = this.fb.group({
            icon: ['', Validators.required],
            type: [{ value: 'FAVOURITE', disabled: true }],
            name: ['', Validators.required],
            appId: [{ value: this.appId, disabled: true }],
            appUrl: [
                {
                    value: window.location.href.replace(window.location.origin, ''),
                    disabled: true,
                },
            ],
            launchpad: ['', Validators.required],
        });
        const launchpadCriteria = {
            portalId: this.confService.getProperty('TKIT_PORTAL_ID'),
        };
        this.launchpadService.getLaunchpads(launchpadCriteria).subscribe(data => (this.launchpads = data), error => console.log(error));
    }
    addToLaunchpad() {
        const createTileDTO = {
            appId: this.launchpadForm.get('appId').value,
            appUrl: this.launchpadForm.get('appUrl').value,
            name: this.launchpadForm.get('name').value,
            type: this.launchpadForm.get('type').value,
            icon: this.launchpadForm.get('icon').value,
        };
        this.launchpadService.addToLaunchpad(this.launchpadForm.get('launchpad').value.id, createTileDTO).subscribe(() => {
            this.messageService.add({
                summary: 'App added to favourites successfully',
                severity: 'success',
            });
            this.close();
        }, () => {
            this.messageService.add({
                summary: 'Failed to add app to favourites',
                severity: 'error',
            });
        });
    }
    filterIcons(event) {
        const query = event.query.toLowerCase();
        this.filteredIcons = this.icons.filter(icon => icon.toLowerCase().includes(query));
    }
    close(event) {
        this.closed.emit(false);
    }
}
AddToLaunchpadComponent.decorators = [
    { type: Component, args: [{
                selector: 'tk-add-to-launchpad',
                template: "<p-dialog\n  header=\"Add to Favourites\"\n  [contentStyle]=\"{ overflow: 'visible' }\"\n  [style]=\"{ width: '700px', 'max-height': '600px' }\"\n  [(visible)]=\"display\"\n  (onHide)=\"close($event)\"\n  [modal]=\"true\"\n>\n  <form [formGroup]=\"launchpadForm\" (ngSubmit)=\"addToLaunchpad()\">\n    <div class=\"p-fluid modal-content\">\n      <div class=\"p-field p-grid\">\n        <label for=\"name\" class=\"p-col-12 p-md-3\">Tile Name: </label>\n        <div class=\"p-col-12 p-md-9\">\n          <input formControlName=\"name\" id=\"name\" type=\"text\" pInputText />\n        </div>\n      </div>\n      <div class=\"p-field p-grid\">\n        <label for=\"appId\" class=\"p-col-12 p-md-3\">AppId: </label>\n        <div class=\"p-col-12 p-md-9\">\n          <input formControlName=\"appId\" id=\"appId\" type=\"text\" pInputText />\n        </div>\n      </div>\n      <div class=\"p-field p-grid\">\n        <label for=\"appUrl\" class=\"p-col-12 p-md-3\">AppUrl: </label>\n        <div class=\"p-col-12 p-md-9\">\n          <input formControlName=\"appUrl\" id=\"appUrl\" type=\"text\" pInputText />\n        </div>\n      </div>\n      <div class=\"p-field p-grid\">\n        <label for=\"launchpad\" class=\"p-col-12 p-md-3\">Launchpad: </label>\n        <div class=\"p-col-12 p-md-9\">\n          <p-dropdown\n            inputId=\"launchpad\"\n            [options]=\"launchpads\"\n            formControlName=\"launchpad\"\n            placeholder=\"{{ 'LAUNCHPAD.SELECT_LAUNCHPAD' | translate }}\"\n          >\n            <ng-template let-item pTemplate=\"item\">\n              <span class=\"custom-launchpad-container\">\n                <span> {{ item.name }} </span>\n                <span>\n                  {{ item.type }}\n                </span>\n              </span>\n            </ng-template>\n          </p-dropdown>\n        </div>\n      </div>\n      <div class=\"p-field p-grid\">\n        <label for=\"type\" class=\"p-col-12 p-md-3\">{{ \"LAUNCHPAD.TILE_TYPE\" | translate }}: </label>\n        <div class=\"p-col-12 p-md-9\">\n          <input id=\"text\" type=\"text\" pInputText formControlName=\"type\" value=\"FAVOURITE\" readonly />\n        </div>\n      </div>\n      <div class=\"p-field p-grid\">\n        <label for=\"icon\" class=\"p-col-12 p-md-3\">Icon: </label>\n        <div class=\"p-col-12 p-md-9\">\n          <p-autoComplete\n            [suggestions]=\"filteredIcons\"\n            inputId=\"icon\"\n            formControlName=\"icon\"\n            (completeMethod)=\"filterIcons($event)\"\n            placeholder=\"{{ 'LAUNCHPAD.SELECT_ICON' | translate }}\"\n            forceSelection=\"true\"\n            completeOnFocus=\"true\"\n          >\n            <ng-template let-icon pTemplate=\"item\">\n              <div class=\"custom-item-container\">\n                <div>{{ icon }}</div>\n                <span class=\"pi pi-{{icon}}\"></span>\n              </div>\n            </ng-template>\n          </p-autoComplete>\n        </div>\n      </div>\n    </div>\n    <p-footer class=\"submit\">\n      <button\n        pButton\n        type=\"submit\"\n        label=\"{{ 'LAUNCHPAD.SAVE' | translate }}\"\n        [disabled]=\"!launchpadForm.valid\"\n      ></button>\n    </p-footer>\n  </form>\n</p-dialog>\n",
                styles: [".custom-launchpad-container{display:flex}.custom-launchpad-container span:last-of-type{margin-left:auto}.submit{padding:.5em 0;margin-top:20px}.submit button{margin-top:.5em;width:100%}.custom-item-container div{display:inline-block}.custom-item-container span{float:left;margin-right:5px}"]
            },] }
];
AddToLaunchpadComponent.ctorParameters = () => [
    { type: IconsService },
    { type: FormBuilder },
    { type: LaunchpadService },
    { type: undefined, decorators: [{ type: Inject, args: [AUTH_SERVICE,] }] },
    { type: MessageService },
    { type: ConfigurationService }
];
AddToLaunchpadComponent.propDecorators = {
    display: [{ type: Input }],
    appId: [{ type: Input }],
    closed: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,