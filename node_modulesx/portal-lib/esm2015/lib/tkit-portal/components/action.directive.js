import { Directive, Input, Renderer2, ElementRef, Inject, ViewContainerRef } from '@angular/core';
import { AUTH_SERVICE } from '../../api/injection-tokens';
export class ActionDirective {
    constructor(renderer, el, 
    // private templateRef: TemplateRef<any>,
    viewContainer, authService) {
        this.renderer = renderer;
        this.el = el;
        this.viewContainer = viewContainer;
        this.authService = authService;
    }
    ngOnInit() {
        console.log(`Action permission ${this.permission}`);
        if (!this.authService.hasPermission(this.permission)) {
            console.log(`Disable btn because no perm ${this.permission}`);
            this.renderer.setAttribute(this.el.nativeElement, 'disabled', 'disabled');
            this.viewContainer.clear();
        }
    }
}
ActionDirective.decorators = [
    { type: Directive, args: [{ selector: '[tkAction]' },] }
];
ActionDirective.ctorParameters = () => [
    { type: Renderer2 },
    { type: ElementRef },
    { type: ViewContainerRef },
    { type: undefined, decorators: [{ type: Inject, args: [AUTH_SERVICE,] }] }
];
ActionDirective.propDecorators = {
    permission: [{ type: Input }],
    loaderState: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3BvcnRhbC1saWIvc3JjL2xpYi90a2l0LXBvcnRhbC9jb21wb25lbnRzL2FjdGlvbi5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxLQUFLLEVBQ0wsU0FBUyxFQUNULFVBQVUsRUFDVixNQUFNLEVBQ04sZ0JBQWdCLEVBR2pCLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUcxRCxNQUFNLE9BQU8sZUFBZTtJQUcxQixZQUNVLFFBQW1CLEVBQ25CLEVBQWM7SUFDdEIseUNBQXlDO0lBQ2pDLGFBQStCLEVBQ1QsV0FBeUI7UUFKL0MsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQUNuQixPQUFFLEdBQUYsRUFBRSxDQUFZO1FBRWQsa0JBQWEsR0FBYixhQUFhLENBQWtCO1FBQ1QsZ0JBQVcsR0FBWCxXQUFXLENBQWM7SUFDdEQsQ0FBQztJQUVKLFFBQVE7UUFDTixPQUFPLENBQUMsR0FBRyxDQUFDLHFCQUFxQixJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQztRQUNwRCxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFO1lBQ3BELE9BQU8sQ0FBQyxHQUFHLENBQUMsK0JBQStCLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDO1lBQzlELElBQUksQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLFVBQVUsRUFBRSxVQUFVLENBQUMsQ0FBQztZQUMxRSxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDO1NBQzVCO0lBQ0gsQ0FBQzs7O1lBbkJGLFNBQVMsU0FBQyxFQUFFLFFBQVEsRUFBRSxZQUFZLEVBQUU7OztZQVZuQyxTQUFTO1lBQ1QsVUFBVTtZQUVWLGdCQUFnQjs0Q0FnQmIsTUFBTSxTQUFDLFlBQVk7Ozt5QkFQckIsS0FBSzswQkFDTCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBEaXJlY3RpdmUsXHJcbiAgSW5wdXQsXHJcbiAgUmVuZGVyZXIyLFxyXG4gIEVsZW1lbnRSZWYsXHJcbiAgSW5qZWN0LFxyXG4gIFZpZXdDb250YWluZXJSZWYsXHJcbiAgVGVtcGxhdGVSZWYsXHJcbiAgT25Jbml0XHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IElBdXRoU2VydmljZSB9IGZyb20gJy4uLy4uL2FwaS9pYXV0aC5zZXJ2aWNlJztcclxuaW1wb3J0IHsgQVVUSF9TRVJWSUNFIH0gZnJvbSAnLi4vLi4vYXBpL2luamVjdGlvbi10b2tlbnMnO1xyXG5cclxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnW3RrQWN0aW9uXScgfSlcclxuZXhwb3J0IGNsYXNzIEFjdGlvbkRpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgQElucHV0KCkgcGVybWlzc2lvbjogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIGxvYWRlclN0YXRlOiBib29sZWFuO1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyLFxyXG4gICAgcHJpdmF0ZSBlbDogRWxlbWVudFJlZixcclxuICAgIC8vIHByaXZhdGUgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT4sXHJcbiAgICBwcml2YXRlIHZpZXdDb250YWluZXI6IFZpZXdDb250YWluZXJSZWYsXHJcbiAgICBASW5qZWN0KEFVVEhfU0VSVklDRSkgcHJpdmF0ZSBhdXRoU2VydmljZTogSUF1dGhTZXJ2aWNlXHJcbiAgKSB7fVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIGNvbnNvbGUubG9nKGBBY3Rpb24gcGVybWlzc2lvbiAke3RoaXMucGVybWlzc2lvbn1gKTtcclxuICAgIGlmICghdGhpcy5hdXRoU2VydmljZS5oYXNQZXJtaXNzaW9uKHRoaXMucGVybWlzc2lvbikpIHtcclxuICAgICAgY29uc29sZS5sb2coYERpc2FibGUgYnRuIGJlY2F1c2Ugbm8gcGVybSAke3RoaXMucGVybWlzc2lvbn1gKTtcclxuICAgICAgdGhpcy5yZW5kZXJlci5zZXRBdHRyaWJ1dGUodGhpcy5lbC5uYXRpdmVFbGVtZW50LCAnZGlzYWJsZWQnLCAnZGlzYWJsZWQnKTtcclxuICAgICAgdGhpcy52aWV3Q29udGFpbmVyLmNsZWFyKCk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==