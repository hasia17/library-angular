import { Component, Input, Output } from '@angular/core';
import { BreadcrumbService } from '../../../api/services/breadcrumb.service';
import { EventEmitter } from '@angular/core';
export class BreadcrumbComponent {
    constructor(breadcrumbService) {
        this.breadcrumbService = breadcrumbService;
        this.openHelpPage = new EventEmitter();
        this.openHelpPageEditor = new EventEmitter();
    }
    ngOnInit() {
        this.subscription = this.breadcrumbService.itemsHandler.subscribe(response => {
            this.items = response;
        });
        this.home = { icon: 'pi pi-home', routerLink: '/' };
    }
    ngOnDestroy() {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    }
    onOpenHelpPageEditor(evt) {
        this.openHelpPageEditor.emit(evt);
    }
    onOpenHelpPage(evt) {
        this.openHelpPage.emit(evt);
    }
}
BreadcrumbComponent.decorators = [
    { type: Component, args: [{
                selector: 'tk-breadcrumb',
                template: "<div *ngIf=\"disableBreadcrumbs\" class=\"header-breadcrumb\">\n  <ul>\n    <li>\n      <a class=\"home-icon\" routerLink=\"\">\n        <i class=\"pi pi-home\"></i>\n      </a>\n    </li>\n    <li></li>\n    <ng-template ngFor let-item let-last=\"last\" [ngForOf]=\"items\">\n      <li>\n        <a [routerLink]=\"item.routerLink\" *ngIf=\"item.routerLink\">{{ item.label }}</a>\n        <ng-container *ngIf=\"!item.routerLink\">{{ item.label }}</ng-container>\n      </li>\n      <li *ngIf=\"!last\">/</li>\n    </ng-template>\n    <li>\n      <tk-http-progress-loader class=\"p-ml-2\"></tk-http-progress-loader>\n    </li>\n  </ul>\n</div>\n<div *ngIf=\"!disableBreadcrumbs\" class=\"layout-breadcrumb-container p-d-flex p-jc-between p-ai-center p-shadow-1\">\n  <p-breadcrumb [home]=\"home\" [model]=\"items\" styleClass=\"layout-breadcrumb p-pl-4 p-py-2\"></p-breadcrumb>\n  <div *ngIf=\"fullPortalLayout\" class=\"layout-breadcrumb-buttons p-d-flex p-ai-center p-pr-3\">\n    <button\n      pButton\n      pRipple\n      type=\"button\"\n      title=\"Hilfe f\u00FCr diesen Artikel anzeigen\"\n      (click)=\"onOpenHelpPage($event)\"\n      icon=\"pi pi-question-circle\"\n      class=\"p-button-rounded p-button-text p-button-plain p-mr-1\"\n    ></button>\n    <button\n      pButton\n      pRipple\n      type=\"button\"\n      title=\"Hilfe f\u00FCr diesen Artikel vervalten\"\n      (click)=\"onOpenHelpPageEditor($event)\"\n      icon=\"pi pi-pencil\"\n      class=\"p-button-rounded p-button-text p-button-plain p-mr-1\"\n    ></button>\n  </div>\n</div>\n",
                styles: [".home-icon{margin-right:.3em}.home-icon i{font-size:28px}.header-breadcrumb{display:flex;flex-direction:row;font-size:large}.header-breadcrumb a i{vertical-align:middle;color:#fff}.header-breadcrumb ul{padding:0;list-style:none;display:inline-block}.header-breadcrumb ul li{display:inline-block;color:#fff;vertical-align:middle}.header-breadcrumb ul li:nth-child(2n){font-size:20px}"]
            },] }
];
BreadcrumbComponent.ctorParameters = () => [
    { type: BreadcrumbService }
];
BreadcrumbComponent.propDecorators = {
    disableBreadcrumbs: [{ type: Input }],
    fullPortalLayout: [{ type: Input }],
    openHelpPage: [{ type: Output }],
    openHelpPageEditor: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJlYWRjcnVtYi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9wb3J0YWwtbGliL3NyYy9saWIvdGtpdC1wb3J0YWwvY29tcG9uZW50cy9icmVhZGNydW1icy9icmVhZGNydW1iLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFlLEtBQUssRUFBcUIsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFBO0FBRXhGLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDBDQUEwQyxDQUFBO0FBQzVFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUE7QUFRNUMsTUFBTSxPQUFPLG1CQUFtQjtJQWdCOUIsWUFBb0IsaUJBQW9DO1FBQXBDLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7UUFKeEQsaUJBQVksR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQTtRQUVwRCx1QkFBa0IsR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQTtJQUVDLENBQUM7SUFFNUQsUUFBUTtRQUNOLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDM0UsSUFBSSxDQUFDLEtBQUssR0FBRyxRQUFRLENBQUE7UUFDdkIsQ0FBQyxDQUFDLENBQUE7UUFFRixJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsR0FBRyxFQUFFLENBQUE7SUFDckQsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDckIsSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLEVBQUUsQ0FBQTtTQUNoQztJQUNILENBQUM7SUFFRCxvQkFBb0IsQ0FBQyxHQUFRO1FBQzNCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUE7SUFDbkMsQ0FBQztJQUVELGNBQWMsQ0FBQyxHQUFRO1FBQ3JCLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFBO0lBQzdCLENBQUM7OztZQTNDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGVBQWU7Z0JBQ3pCLDhpREFBMEM7O2FBRTNDOzs7WUFSUSxpQkFBaUI7OztpQ0FnQnZCLEtBQUs7K0JBRUwsS0FBSzsyQkFFTCxNQUFNO2lDQUVOLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3RCaW5kaW5nLCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnXG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJ1xuaW1wb3J0IHsgQnJlYWRjcnVtYlNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9hcGkvc2VydmljZXMvYnJlYWRjcnVtYi5zZXJ2aWNlJ1xuaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSdcbmltcG9ydCB7IE1lbnVJdGVtIH0gZnJvbSAncHJpbWVuZy9hcGknXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RrLWJyZWFkY3J1bWInLFxuICB0ZW1wbGF0ZVVybDogJy4vYnJlYWRjcnVtYi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2JyZWFkY3J1bWIuY29tcG9uZW50LnNjc3MnXSxcbn0pXG5leHBvcnQgY2xhc3MgQnJlYWRjcnVtYkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgc3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb25cblxuICBpdGVtczogYW55W11cblxuICBob21lOiBNZW51SXRlbVxuXG4gIEBJbnB1dCgpXG4gIGRpc2FibGVCcmVhZGNydW1iczogYm9vbGVhblxuICBASW5wdXQoKVxuICBmdWxsUG9ydGFsTGF5b3V0OiBib29sZWFuXG4gIEBPdXRwdXQoKVxuICBvcGVuSGVscFBhZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpXG4gIEBPdXRwdXQoKVxuICBvcGVuSGVscFBhZ2VFZGl0b3I6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpXG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBicmVhZGNydW1iU2VydmljZTogQnJlYWRjcnVtYlNlcnZpY2UpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5zdWJzY3JpcHRpb24gPSB0aGlzLmJyZWFkY3J1bWJTZXJ2aWNlLml0ZW1zSGFuZGxlci5zdWJzY3JpYmUocmVzcG9uc2UgPT4ge1xuICAgICAgdGhpcy5pdGVtcyA9IHJlc3BvbnNlXG4gICAgfSlcblxuICAgIHRoaXMuaG9tZSA9IHsgaWNvbjogJ3BpIHBpLWhvbWUnLCByb3V0ZXJMaW5rOiAnLycgfVxuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgaWYgKHRoaXMuc3Vic2NyaXB0aW9uKSB7XG4gICAgICB0aGlzLnN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpXG4gICAgfVxuICB9XG5cbiAgb25PcGVuSGVscFBhZ2VFZGl0b3IoZXZ0OiBhbnkpIHtcbiAgICB0aGlzLm9wZW5IZWxwUGFnZUVkaXRvci5lbWl0KGV2dClcbiAgfVxuXG4gIG9uT3BlbkhlbHBQYWdlKGV2dDogYW55KSB7XG4gICAgdGhpcy5vcGVuSGVscFBhZ2UuZW1pdChldnQpXG4gIH1cbn1cbiJdfQ==