import { Component, ViewChild, Renderer2, NgZone, Input, Inject, } from '@angular/core';
import { NavigationStart, NavigationEnd, NavigationError, Router, ActivatedRoute, ActivationEnd, } from '@angular/router';
import { HelpPageAPIService } from '../../../api/services/help-page-api.service';
import { MessageService, PrimeNGConfig } from 'primeng/api';
import { DialogService } from 'primeng/dynamicdialog';
import { NoHelpInfoComponent } from '../no-help-info/no-help-info.component';
import { isTkitPage } from '../../pages/PortalPage';
import { TranslateService } from '@ngx-translate/core';
import { ConfigurationService } from '../../../api/configuration.service';
import { ThemeService } from '../../../api/services/theme.service';
import { MenuApiService } from '../../../api/services/menu-api.service';
import { AUTH_SERVICE } from '../../../api/injection-tokens';
import { CONFIG_KEY_TKIT_PORTAL_DISABLE_THEME_MANAGEMENT } from '../../constants';
import { BreakpointObserver } from '@angular/cdk/layout';
import { FeedbackApiService } from '../../../api/services/feedback-api.service';
import { SupportTicketApiService } from '../../../api/services/support-ticket-api.service';
import { MenuService } from "../../../api/services/menu.service";
var MenuOrientation;
(function (MenuOrientation) {
    MenuOrientation[MenuOrientation["STATIC"] = 0] = "STATIC";
    MenuOrientation[MenuOrientation["OVERLAY"] = 1] = "OVERLAY";
    MenuOrientation[MenuOrientation["SLIM"] = 2] = "SLIM";
    MenuOrientation[MenuOrientation["HORIZONTAL"] = 3] = "HORIZONTAL";
})(MenuOrientation || (MenuOrientation = {}));
const FALLBACK_THEME_URL = './portal-lib/assets/css/fallback-theme/fallback.css';
const DEFAULT_BASE_URL = 'https://1000kit.atlassian.net/wiki/spaces/1000KIT/overview';
export class PortalViewportComponent {
    constructor(renderer2, zone, router, route, helpDataService, messageService, dialogService, breakpointObserver, translate, themeService, menuService, menuApiService, configService, feedbackApiService, supportTicketApiService, primeNgConfig, auth) {
        this.renderer2 = renderer2;
        this.zone = zone;
        this.router = router;
        this.route = route;
        this.helpDataService = helpDataService;
        this.messageService = messageService;
        this.dialogService = dialogService;
        this.breakpointObserver = breakpointObserver;
        this.translate = translate;
        this.themeService = themeService;
        this.menuService = menuService;
        this.menuApiService = menuApiService;
        this.configService = configService;
        this.feedbackApiService = feedbackApiService;
        this.supportTicketApiService = supportTicketApiService;
        this.primeNgConfig = primeNgConfig;
        this.auth = auth;
        this.showProfileInSidebar = true;
        this.enableBreadcrumbs = false;
        this.fullPortalLayout = true;
        // TKIT
        this.helpPageEditorDisplayed = false;
        this.addToFavouritesDisplayed = false;
        this.supportTicketDisplayed = false;
        this.feedbackData = { comment: '', rating: 0, anonymous: false };
        this.feedbackVisible = false;
        this.feedbackSubmitDisabled = false;
        this.portalName = 'PORTAL';
        // PRIMENG STUFF
        this.layoutMode = MenuOrientation.STATIC;
        // TODO Ultima11: dark menu
        this.darkMenu = false;
        this.profileMode = 'top';
        this.searchClick = false;
        this.search = false;
        this.preloader = true;
        this.portalHomeMenuItem = { url: '/', label: 'Home' };
    }
    get menuButtonTitle() {
        return (this.isDesktop() && this.menuActive || this.isMobile() && this.mobileMenuActive) ? this.hideMenuButtonTitle : this.showMenuButtonTitle;
    }
    applyPadding() {
        if (this.isBodyCompact) {
            this.addClass(document.body, 'compact');
        }
        else {
            this.removeClass(document.body, 'compact');
        }
    }
    setSidebarColorTheme() {
        if (this.sideBarColorTheme === 'DARK') {
            this.darkMenu = true;
        }
        else if (this.sideBarColorTheme === 'LIGHT') {
            this.darkMenu = false;
        }
    }
    ngOnInit() {
        var _a;
        this.primeNgConfig.ripple = true;
        this.initError = this.configService.error;
        if (this.initError) {
            this.preloader = false;
            return;
        }
        this.mainPortal = this.configService.getPortalData();
        if (this.auth.currentUser().accountSettings.layoutAndThemeSettings) {
            this.isBodyCompact = (_a = this.auth.currentUser().accountSettings.layoutAndThemeSettings.compactView) !== null && _a !== void 0 ? _a : false;
            this.applyPadding();
            // this.sideBarColorTheme = this.auth.currentUser().accountSettings.layoutAndThemeSettings.menuTheme ?? 'LIGHT'
            if (this.auth.currentUser().accountSettings.layoutAndThemeSettings.sidebarViewMode) {
                this.layoutMode =
                    MenuOrientation[this.auth.currentUser().accountSettings.layoutAndThemeSettings.sidebarViewMode];
            }
            else {
                this.layoutMode = MenuOrientation['STATIC'];
            }
        }
        this.menuActive = this.isStatic() && !this.isMobile() && this.fullPortalLayout;
        this.validateRequiredInputs();
        this.setSidebarColorTheme();
        this.setCustomTheme();
        if (this.fullPortalLayout) {
            this.loadMenuItems();
        }
        this.router.events.subscribe((event) => {
            // console.log(`nav event ${event.constructor.name}`);
            if (event instanceof NavigationStart) {
                // Show loading indicator
            }
            if (event instanceof ActivationEnd) {
                // this.helpArticleId = event.snapshot.pathFromRoot
                //   .map(i => (i.routeConfig ? i.routeConfig.path : ''))
                //   .join('/');
                // console.log(`aftger event ${this.helpArticleId}`);
            }
            if (event instanceof NavigationEnd && this.fullPortalLayout) {
                // Hide loading indicator
                if (this.currentComponent) {
                    let helpPageIdentifier;
                    if (isTkitPage(this.currentComponent)) {
                        helpPageIdentifier = this.currentComponent.helpArticleId;
                    }
                    else {
                        helpPageIdentifier = event.url || this.currentComponent.constructor.name;
                        console.log(`Page does not have helpItemId, using router path ${helpPageIdentifier}`);
                    }
                    this.helpArticleId = helpPageIdentifier;
                    this.helpDataItem = {
                        helpItemId: helpPageIdentifier,
                        appId: this.appName,
                        baseUrl: DEFAULT_BASE_URL,
                        resourceUrl: '',
                    };
                    this.loadHelpArticle();
                }
            }
            if (event instanceof NavigationError) {
                // Hide loading indicator
                // Present error to user
                this.messageService.add({
                    severity: 'error',
                    summary: 'Navigation error',
                    detail: `Route ${event.url} not recognized`,
                });
            }
            // console.log(`navigate event ${event}`);
            this.setSidebarColorTheme();
        });
        this.translate.get(['GENERAL.SHOW_MENU', 'GENERAL.HIDE_MENU']).subscribe(text => {
            this.hideMenuButtonTitle = text['GENERAL.HIDE_MENU'];
            this.showMenuButtonTitle = text['GENERAL.SHOW_MENU'];
        });
    }
    ngAfterViewInit() {
        this.documentClickListener = this.renderer2.listen('body', 'click', () => {
            if (!this.topbarItemClick) {
                this.activeTopbarItem = null;
            }
            if (!this.menuClick && (this.isHorizontal() || this.isSlim())) {
                this.menuService.reset();
            }
            if (!this.menuClick) {
                if (this.mobileMenuActive) {
                    this.mobileMenuActive = false;
                }
                if (this.isOverlay()) {
                    this.menuActive = false;
                }
                this.menuHoverActive = false;
                this.unblockBodyScroll();
            }
            if (!this.searchClick) {
                this.search = false;
            }
            if (this.inlineMenuActive && !this.inlineMenuClick) {
                this.inlineMenuActive = false;
            }
            this.inlineMenuClick = false;
            this.searchClick = false;
            this.topbarItemClick = false;
            this.menuClick = false;
        });
    }
    loadMenuItems() {
        const portalId = this.configService.getProperty('TKIT_PORTAL_ID');
        const stripForbiddenStr = this.configService.getProperty('TKIT_PORTAL_DISABLE_MENU_PERMISSIONS');
        const stripForbidden = stripForbiddenStr === 'true';
        this.configService.lang$.subscribe(data => (this.lang = data)).unsubscribe();
        if (!portalId) {
            this.portalMenuItems = [{ label: 'Failed to load menu', icon: 'dashboard', routerLink: ['/'] }];
        }
        else if (this.fullPortalLayout) {
            this.menuApiService.getMenuItems(portalId).subscribe(data => {
                let serverMenuItems = [];
                const mainMenuItem = data.find(item => item.key === 'PORTAL_MAIN_MENU');
                this.portalHomeMenuItem = this.toPrimeNGMenuItem(data.find(item => item.key === 'PORTAL_MENU_HOME'));
                if (!this.portalHomeMenuItem) {
                    this.portalHomeMenuItem = { url: '/', label: 'Home' };
                }
                if (mainMenuItem) {
                    serverMenuItems = mainMenuItem.children
                        .filter(item => (!stripForbidden || this.auth.hasPermission(`${item.permissionObject}#VIEW`)) && !item.disabled)
                        .sort((a, b) => a.position - b.position)
                        .map(item => this.toPrimeNGMenuItem(item));
                }
                this.portalMenuItems = [
                    // { label: 'Portal Home', icon: 'dashboard', routerLink: ['/'] },
                    ...serverMenuItems,
                ];
            });
        }
    }
    toPrimeNGMenuItem(item, level = 1) {
        if (!item) {
            return undefined;
        }
        let isAbsoluteLink = item.url && item.url.match(/^(http|https)/g) !== null;
        const currentHost = document.getElementsByTagName('base')[0].href;
        let routerLink = undefined;
        const label = item.i18n[this.lang] || item.name;
        if (this.appName === item.applicationId) {
            // it is a local link, set routerlink
            if (isAbsoluteLink && item.url.includes(currentHost)) {
                routerLink = [item.url.substr(currentHost.length - 1)];
                isAbsoluteLink = false;
            }
            else {
                const path = currentHost.substring(window.location.origin.length);
                if (path.length >= 1 && item.url.startsWith(path)) {
                    // its a link within same  path
                    routerLink = [item.url.substr(path.length - 1)];
                    isAbsoluteLink = false;
                }
            }
        }
        let badgeIcon = level === 1 ? 'menu' : 'subject';
        if (item.badge !== '' && item.badge) {
            badgeIcon = item.badge;
        }
        return {
            label,
            // badge: '🔗',
            icon: badgeIcon,
            command: e => {
                e.originalEvent.preventDefault();
                if (item.children.length === 0) {
                    item.portalExit
                        ? window.open(item.url, '_blank')
                        : routerLink
                            ? this.router.navigate(routerLink)
                            : window.location.assign(item.url);
                }
            },
            url: item.url,
            routerLinkActiveOptions: [{ exact: false }],
            items: item.children.length > 0
                ? item.children
                    .filter(child => !child.disabled)
                    .sort((a, b) => a.position - b.position)
                    .map(child => this.toPrimeNGMenuItem(child, level + 1))
                : undefined,
        };
    }
    validateRequiredInputs() {
        if (!this.appName) {
            throw new Error(`You must specify [appName] attribute on <tk-portal-viewport> component.`);
        }
    }
    loadHelpArticle() {
        this.helpDataService.getHelpDataItem(this.appName, this.helpArticleId).subscribe(data => {
            if (data) {
                this.helpDataItem = data;
            }
        }, error => console.log('Failed to load help article'));
    }
    onHelpArticleEditorClosed(changed) {
        if (changed) {
            this.helpDataService.saveHelpPage(this.appName, this.helpDataItem).subscribe(res => {
                console.log(`Help item saved: ${res.status}`);
                this.helpPageEditorDisplayed = false;
                this.messageService.add({
                    severity: 'info',
                    summary: 'Help Item definition updated',
                });
                this.loadHelpArticle();
            }, error => {
                console.log(`Could not save help item`);
                this.messageService.add({
                    severity: 'error',
                    summary: 'Help Item definition update failed',
                    detail: `Server error: ${error.status}`,
                });
            });
        }
        else {
            this.helpPageEditorDisplayed = false;
        }
    }
    onAddToLaunchpadClosed(event) {
        this.addToFavouritesDisplayed = false;
    }
    openHelpPage(event) {
        if (this.helpDataItem.id) {
            const url = this.helpDataItem.baseUrl
                ? `${this.helpDataItem.baseUrl}/${this.helpDataItem.resourceUrl}`
                : this.helpDataItem.resourceUrl;
            console.log(`navigate to help page: ${url}`);
            const win = window.open(url, '_blank');
            win.focus();
        }
        else {
            this.dialogService.open(NoHelpInfoComponent, {
                header: 'No help item defined for this page',
                width: '400px',
                data: {
                    pageItem: this.helpArticleId,
                },
            });
        }
        event.preventDefault();
    }
    openHelpPageEditor(event) {
        this.helpPageEditorDisplayed = true;
        event.preventDefault();
    }
    openFeedback(event) {
        if (this.breakpointObserver.isMatched('(max-width: 1024px)')) {
            this.feedbackVisible = true;
        }
        else {
            this.feedbackPanel.toggle(event);
        }
        event.preventDefault();
    }
    openAddToLaunchpad(event) {
        this.addToFavouritesDisplayed = true;
        event.preventDefault();
    }
    openSupportTicket(event) {
        this.supportTicketDisplayed = true;
        event.preventDefault();
    }
    onSubmitFeedback(feedback) {
        this.feedbackSubmitDisabled = true;
        const feedbackDTO = {
            rating: feedback.rating,
            comment: feedback.comment,
            appId: this.appName,
            userId: feedback.anonymous ? 'anonymous' : this.auth.currentUser().userId,
        };
        this.feedbackApiService.sendFeedback(feedbackDTO).subscribe(() => {
            this.closeFeedback();
            this.messageService.add({
                severity: 'success',
                summary: 'Feedback successfully sent',
            });
        }, () => {
            this.closeFeedback();
            this.messageService.add({
                severity: 'error',
                summary: 'Sending feedback failed',
                detail: 'Please try again later',
            });
        });
    }
    closeFeedback() {
        this.feedbackSubmitDisabled = false;
        this.feedbackVisible = false;
        this.feedbackPanel.hide();
    }
    onSubmitTicket(ticket) {
        this.supportTicketApiService.createSupportTicket(ticket, this.appName).subscribe(() => {
            this.messageService.add({
                severity: 'success',
                summary: 'Success!',
                detail: 'Ticket successfully submitted',
            });
        }, () => this.messageService.add({
            severity: 'error',
            summary: 'Error!',
            detail: 'Error occured while submitting a ticket',
        }));
    }
    clearFeedback() {
        this.feedbackData = { comment: '', rating: 0, anonymous: false };
    }
    addClass(element, className) {
        if (element.classList) {
            element.classList.add(className);
        }
        else {
            element.className += ' ' + className;
        }
    }
    removeClass(element, className) {
        if (element.classList) {
            element.classList.remove(className);
        }
        else {
            element.className = element.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
        }
    }
    onMenuButtonClick(event) {
        this.menuActive = !this.menuActive;
        this.menuClick = true;
        if (!this.isDesktop()) {
            this.mobileMenuActive = !this.mobileMenuActive;
            if (this.mobileMenuActive) {
                this.blockBodyScroll();
            }
            else {
                this.unblockBodyScroll();
            }
        }
        event.preventDefault();
    }
    onMenuClick($event) {
        this.menuClick = true;
        if (this.inlineMenuActive && !this.inlineMenuClick) {
            this.inlineMenuActive = false;
        }
    }
    onInlineMenuClick(event) {
        this.inlineMenuActive = !this.inlineMenuActive;
        this.inlineMenuClick = true;
    }
    onTopbarMobileButtonClick(event) {
        this.mobileTopbarActive = !this.mobileTopbarActive;
        event.preventDefault();
    }
    onTopbarItemClick(event, item) {
        this.topbarItemClick = true;
        if (this.activeTopbarItem === item) {
            this.activeTopbarItem = null;
        }
        else {
            this.activeTopbarItem = item;
        }
        if (item === 'search') {
            this.search = !this.search;
            this.searchClick = !this.searchClick;
        }
        event.preventDefault();
    }
    onSearchClick(event, val) {
        this.searchClick = val;
        this.search = val;
        event.preventDefault();
    }
    isDesktop() {
        return window.innerWidth > 991;
    }
    isMobile() {
        return window.innerWidth <= 991;
    }
    isStatic() {
        return this.layoutMode === MenuOrientation.STATIC;
    }
    isOverlay() {
        return this.layoutMode === MenuOrientation.OVERLAY;
    }
    isHorizontal() {
        return this.layoutMode === MenuOrientation.HORIZONTAL;
    }
    isSlim() {
        return this.layoutMode === MenuOrientation.SLIM;
    }
    changeToStaticMenu() {
        this.layoutMode = MenuOrientation.STATIC;
    }
    changeToOverlayMenu() {
        this.layoutMode = MenuOrientation.OVERLAY;
    }
    changeToHorizontalMenu() {
        this.layoutMode = MenuOrientation.HORIZONTAL;
    }
    changeToSlimMenu() {
        this.layoutMode = MenuOrientation.SLIM;
    }
    blockBodyScroll() {
        if (document.body.classList) {
            document.body.classList.add('blocked-scroll');
        }
        else {
            document.body.className += ' blocked-scroll';
        }
    }
    unblockBodyScroll() {
        if (document.body.classList) {
            document.body.classList.remove('blocked-scroll');
        }
        else {
            document.body.className = document.body.className.replace(new RegExp('(^|\\b)' +
                'blocked-scroll'.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
        }
    }
    setCustomTheme() {
        const disablePortalThemeMgmt = this.configService.getProperty(CONFIG_KEY_TKIT_PORTAL_DISABLE_THEME_MANAGEMENT) === 'true';
        if (disablePortalThemeMgmt) {
            console.log(`Portal theme mgmt is disabled. To enable it, remove env var: ${CONFIG_KEY_TKIT_PORTAL_DISABLE_THEME_MANAGEMENT}`);
            this.preloader = false;
            return;
        }
        console.log(`Setting theme dynamically`);
        let customTheme = this.configService.getPortalData() && this.configService.getPortalData().themeName;
        if (!customTheme) {
            const themeFromEnv = this.configService.getProperty('TKIT_PORTAL_DEFAULT_THEME');
            if (!themeFromEnv) {
                console.log(`Custom theme not defined, or portal data not available, setting default theme CG`);
                customTheme = 'cg';
            }
            else {
                console.log(`Custom theme not defined, or portal data not available, setting theme from 'TKIT_PORTAL_DEFAULT_THEME' var: ${themeFromEnv} `);
                customTheme = themeFromEnv;
            }
        }
        if (document.getElementById('theme-css')) {
            const themeLinkToRemove = document.getElementById('theme-css');
            themeLinkToRemove.remove();
        }
        const themeLink = document.createElement('link');
        themeLink.setAttribute('id', 'theme-css');
        themeLink.setAttribute('rel', 'stylesheet');
        themeLink.setAttribute('type', 'text/css');
        themeLink.onload = () => {
            console.log('theme load done');
            this.preloader = false;
        };
        themeLink.onerror = () => {
            console.log(`Failed to load theme assets for '${customTheme}'`);
            themeLink.setAttribute('href', FALLBACK_THEME_URL);
            this.preloader = false;
        };
        themeLink.setAttribute('href', this.themeService.getThemeHref(customTheme));
        document.getElementsByTagName('head')[0].appendChild(themeLink);
    }
}
PortalViewportComponent.decorators = [
    { type: Component, args: [{
                selector: 'tk-portal-viewport',
                template: "<div class=\"loading-block\" *ngIf=\"preloader\">\n  <div\n    class=\"p-d-flex p-mb-3 p-p-1\"\n    style=\"position: fixed;\n    z-index: 100;\n    width: 100%;\n    background-color: #fff;\n    height: 75px;\n    box-shadow: 0 2px 5px 0 rgb(0 0 0 / 26%);\n    -webkit-box-shadow: 0 2px 5px 0 rgb(0 0 0 / 26%);\"\n  >\n    <p-skeleton width=\"8rem\" height=\"60px\" styleClass=\"p-mr-2\"></p-skeleton>\n    <div style=\"flex: 1; height: 100%;\">\n      <p-skeleton width=\"100%\" height=\"60px\"></p-skeleton>\n    </div>\n  </div>\n  <div\n    style=\"overflow: auto;\n    position: fixed;\n    margin-left: 0px;\n    width: 250px;\n    z-index: 99;\n    top: 75px;\n    height: 100%;\n    background-color: #fff;\n    box-shadow: 3px 0 6px rgb(0 0 0 / 30%);\n    -webkit-box-shadow: 3px 0 6px rgb(0 0 0 / 30%);\n    -moz-box-shadow: 3px 0 6px rgba(0,0,0,.3);\n    padding: 1rem\"\n  >\n    <div class=\"custom-skeleton p-p-3 p-mt-4\">\n      <div class=\"p-mb-3 p-ml-5\">\n        <p-skeleton shape=\"circle\" size=\"3rem\" styleClass=\"p-mr-2\"></p-skeleton>\n      </div>\n      <p-skeleton width=\"80%\" height=\"1rem\" styleClass=\"p-mb-1 p-ml-2\"></p-skeleton>\n    </div>\n    <div class=\"p-mt-4\">\n      <p-skeleton *ngFor=\"let number of [0,1,2,3,4,5]\" width=\"100%\" height=\"1.5rem\" styleClass=\"p-mb-2\"></p-skeleton>\n    </div>\n  </div>\n</div>\n<div class=\"exception-body error-page\" *ngIf=\"initError\">\n  <div class=\"exception-type\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 48 48\" stroke=\"currentColor\">\n      <path\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        stroke-width=\"2\"\n        d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n      />\n    </svg>\n  </div>\n\n  <div class=\"card exception-panel\">\n    <i class=\"pi pi-exclamation-circle\"></i>\n    <h1>Exception Occured</h1>\n    <div class=\"exception-detail\">Please contact system administrator</div>\n\n    <p-button label=\"Homepage\" [routerLink]=\"['/']\" class=\"p-button-help\"></p-button>\n  </div>\n</div>\n\n<div\n  [hidden]=\"preloader || initError\"\n  class=\"layout-wrapper\"\n  [ngClass]=\"{ 'layout-menu-static': isStatic(),\n        'layout-menu-overlay': isOverlay(),\n        'layout-menu-horizontal': isHorizontal(),\n        'layout-menu-slim': isSlim(),\n        'layout-menu-active': menuActive,\n        'layout-menu-mobile-active': mobileMenuActive,\n        'layout-topbar-mobile-active': mobileTopbarActive\n   }\"\n>\n    <tk-header\n      [menuButtonTitle]=\"menuButtonTitle\"\n      [activeTopbarItem]=\"activeTopbarItem\"\n      [isHorizontal]=\"isHorizontal()\"\n      [profileMode]=\"profileMode\"\n      [disableBreadcrumbs]=\"!enableBreadcrumbs\"\n      [homeNavTitle]=\"portalHomeMenuItem.label\"\n      [homeNavUrl]=\"portalHomeMenuItem.url\"\n      [fullPortalLayout]=\"fullPortalLayout\"\n      [search]=\"search\"\n      (searchClick)=\"onSearchClick($event.event, $event.val)\"\n      (menuButtonClick)=\"onMenuButtonClick($event)\"\n      (topbarItemClick)=\"onTopbarItemClick($event.event, $event.arg)\"\n      (openHelpPageEditor)=\"openHelpPageEditor($event)\"\n      (openHelpPage)=\"openHelpPage($event)\"\n      (openFeedback)=\"openFeedback($event)\"\n      (openSupportTicket)=\"openSupportTicket($event)\"\n      (openAddToLaunchpad)=\"openAddToLaunchpad($event)\"\n    ></tk-header>\n\n    <p-overlayPanel #feedbackPanel (onHide)=\"clearFeedback()\">\n      <ng-template pTemplate>\n        <tk-feedback\n          [(feedbackData)]=\"feedbackData\"\n          [submitDisabled]=\"feedbackSubmitDisabled\"\n          (feedbackSubmit)=\"onSubmitFeedback($event)\"\n        >\n        </tk-feedback>\n      </ng-template>\n    </p-overlayPanel>\n\n    <p-dialog header=\"Leave Feedback\" [(visible)]=\"feedbackVisible\" (onHide)=\"clearFeedback()\">\n      <tk-feedback\n        [(feedbackData)]=\"feedbackData\"\n        [submitDisabled]=\"feedbackSubmitDisabled\"\n        (feedbackSubmit)=\"onSubmitFeedback($event)\"\n      >\n      </tk-feedback>\n    </p-dialog>\n\n    <p-toast></p-toast>\n\n    <div class=\"menu-wrapper\" (click)=\"onMenuClick($event)\">\n      <div\n        *ngIf=\"fullPortalLayout\"\n        class=\"layout-menu-container\"\n      >\n        <tk-inline-profile\n          *ngIf=\"showProfileInSidebar && !isHorizontal()\"\n          [inlineMenuActive]=\"inlineMenuActive\"\n          (inlineMenuClick)=\"onInlineMenuClick($event)\"\n        ></tk-inline-profile>\n\n        <tk-menu\n          [(menuActive)]=\"menuActive\"\n          [(mobileMenuActive)]=\"mobileMenuActive\"\n          [isStatic]=\"isStatic()\"\n          [isSlim]=\"isSlim()\"\n          [isHorizontal]=\"isHorizontal()\"\n          [isMobile]=\"isMobile()\"\n          [isDesktop]=\"isDesktop()\"\n          [menuHoverActive]=\"menuHoverActive\"\n          [portalMenu]=\"portalMenuItems\"\n        ></tk-menu>\n      </div>\n    </div>\n\n    <div class=\"layout-main\">\n      <tk-breadcrumb\n        *ngIf=\"enableBreadcrumbs\"\n        [fullPortalLayout]=\"fullPortalLayout\"\n        [disableBreadcrumbs]=\"!enableBreadcrumbs\"\n        (openHelpPageEditor)=\"openHelpPageEditor($event)\"\n        (openHelpPage)=\"openHelpPage($event)\"\n      ></tk-breadcrumb>\n\n      <div class=\"layout-content\">\n        <router-outlet (activate)=\"currentComponent = $event\"></router-outlet>\n        <tk-footer [homePortal]=\"mainPortal\"></tk-footer>\n      </div>\n    </div>\n\n    <div class=\"layout-mask modal-in\"></div>\n</div>\n\n<tk-help-editor\n  *ngIf=\"helpDataItem\"\n  [display]=\"helpPageEditorDisplayed\"\n  [helpItem]=\"helpDataItem\"\n  (closed)=\"onHelpArticleEditorClosed($event)\"\n></tk-help-editor>\n\n<tk-add-to-launchpad\n  *ngIf=\"addToFavouritesDisplayed\"\n  [display]=\"addToFavouritesDisplayed\"\n  (closed)=\"onAddToLaunchpadClosed($event)\"\n  [appId]=\"appName\"\n></tk-add-to-launchpad>\n\n<tk-support-ticket [(display)]=\"supportTicketDisplayed\" (submitTicket)=\"onSubmitTicket($event)\"></tk-support-ticket>\n",
                styles: [`
      .loading-block {
      }
    `]
            },] }
];
PortalViewportComponent.ctorParameters = () => [
    { type: Renderer2 },
    { type: NgZone },
    { type: Router },
    { type: ActivatedRoute },
    { type: HelpPageAPIService },
    { type: MessageService },
    { type: DialogService },
    { type: BreakpointObserver },
    { type: TranslateService },
    { type: ThemeService },
    { type: MenuService },
    { type: MenuApiService },
    { type: ConfigurationService },
    { type: FeedbackApiService },
    { type: SupportTicketApiService },
    { type: PrimeNGConfig },
    { type: undefined, decorators: [{ type: Inject, args: [AUTH_SERVICE,] }] }
];
PortalViewportComponent.propDecorators = {
    showProfileInSidebar: [{ type: Input }],
    enableBreadcrumbs: [{ type: Input }],
    fullPortalLayout: [{ type: Input }],
    appName: [{ type: Input }],
    portalName: [{ type: Input }],
    layoutContainerViewChild: [{ type: ViewChild, args: ['layoutContainer',] }],
    layoutMenuScrollerViewChild: [{ type: ViewChild, args: ['scrollPanel',] }],
    feedbackPanel: [{ type: ViewChild, args: ['feedbackPanel',] }]
};
//# sourceMappingURL=data:application/json;base64,