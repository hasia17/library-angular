import { Component } from '@angular/core';
import { HttpProgressLoaderService } from '../http-progress-loader.service';
export class HttpProgressLoaderComponent {
    constructor(loaderService) {
        this.loaderService = loaderService;
        this.loaderService.isLoading.subscribe(v => {
            this.loading = v;
        });
    }
    ngOnInit() { }
}
HttpProgressLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'tk-http-progress-loader',
                template: `
    <div class="wrapper" [ngClass]="{ noshow: !loading }">
      <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
        <circle cx="50" cy="50" r="45" />
      </svg>
    </div>
  `,
                styles: [`
      :host {
        display: block;
        height: 36px;
      }
      .wrapper {
        position: absolute;
        opacity: 1;
      }
      .wrapper.noshow {
        -webkit-transition: opacity 1s linear;
        -moz-transition: opacity 1s linear;
        -o-transition: opacity 1s linear;
        transition: opacity 1s linear;
        opacity: 0;
      }
      svg {
        animation: 2s linear infinite svg-animation;
        width: 36px;
      }

      .noshow svg {
        animation: none;
      }

      @keyframes svg-animation {
        0% {
          transform: rotateZ(0deg);
        }
        100% {
          transform: rotateZ(360deg);
        }
      }

      circle {
        animation: 1.4s ease-in-out infinite both circle-animation;
        display: block;
        fill: transparent;
        stroke: #ffffff;
        stroke-linecap: round;
        stroke-dasharray: 283;
        stroke-dashoffset: 280;
        stroke-width: 10px;
        transform-origin: 50% 50%;
      }

      @keyframes circle-animation {
        0%,
        25% {
          stroke-dashoffset: 280;
          transform: rotate(0);
        }

        50%,
        75% {
          stroke-dashoffset: 75;
          transform: rotate(45deg);
        }

        100% {
          stroke-dashoffset: 280;
          transform: rotate(360deg);
        }
      }
    `]
            },] }
];
HttpProgressLoaderComponent.ctorParameters = () => [
    { type: HttpProgressLoaderService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cC1wcm9ncmVzcy1sb2FkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvcG9ydGFsLWxpYi9zcmMvbGliL3RraXQtcG9ydGFsL2NvbXBvbmVudHMvaHR0cC1wcm9ncmVzcy1sb2FkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDbEQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUErRTVFLE1BQU0sT0FBTywyQkFBMkI7SUFFdEMsWUFBb0IsYUFBd0M7UUFBeEMsa0JBQWEsR0FBYixhQUFhLENBQTJCO1FBQzFELElBQUksQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUN6QyxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQztRQUNuQixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxRQUFRLEtBQUksQ0FBQzs7O1lBckZkLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUseUJBQXlCO2dCQUNuQyxRQUFRLEVBQUU7Ozs7OztHQU1UO3lCQUVDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBZ0VDO2FBRUo7OztZQTlFUSx5QkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSHR0cFByb2dyZXNzTG9hZGVyU2VydmljZSB9IGZyb20gJy4uL2h0dHAtcHJvZ3Jlc3MtbG9hZGVyLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0ay1odHRwLXByb2dyZXNzLWxvYWRlcicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cIndyYXBwZXJcIiBbbmdDbGFzc109XCJ7IG5vc2hvdzogIWxvYWRpbmcgfVwiPlxuICAgICAgPHN2ZyB2aWV3Qm94PVwiMCAwIDEwMCAxMDBcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XG4gICAgICAgIDxjaXJjbGUgY3g9XCI1MFwiIGN5PVwiNTBcIiByPVwiNDVcIiAvPlxuICAgICAgPC9zdmc+XG4gICAgPC9kaXY+XG4gIGAsXG4gIHN0eWxlczogW1xuICAgIGBcbiAgICAgIDpob3N0IHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGhlaWdodDogMzZweDtcbiAgICAgIH1cbiAgICAgIC53cmFwcGVyIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgfVxuICAgICAgLndyYXBwZXIubm9zaG93IHtcbiAgICAgICAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDFzIGxpbmVhcjtcbiAgICAgICAgLW1vei10cmFuc2l0aW9uOiBvcGFjaXR5IDFzIGxpbmVhcjtcbiAgICAgICAgLW8tdHJhbnNpdGlvbjogb3BhY2l0eSAxcyBsaW5lYXI7XG4gICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMXMgbGluZWFyO1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgfVxuICAgICAgc3ZnIHtcbiAgICAgICAgYW5pbWF0aW9uOiAycyBsaW5lYXIgaW5maW5pdGUgc3ZnLWFuaW1hdGlvbjtcbiAgICAgICAgd2lkdGg6IDM2cHg7XG4gICAgICB9XG5cbiAgICAgIC5ub3Nob3cgc3ZnIHtcbiAgICAgICAgYW5pbWF0aW9uOiBub25lO1xuICAgICAgfVxuXG4gICAgICBAa2V5ZnJhbWVzIHN2Zy1hbmltYXRpb24ge1xuICAgICAgICAwJSB7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGVaKDBkZWcpO1xuICAgICAgICB9XG4gICAgICAgIDEwMCUge1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlWigzNjBkZWcpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGNpcmNsZSB7XG4gICAgICAgIGFuaW1hdGlvbjogMS40cyBlYXNlLWluLW91dCBpbmZpbml0ZSBib3RoIGNpcmNsZS1hbmltYXRpb247XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBmaWxsOiB0cmFuc3BhcmVudDtcbiAgICAgICAgc3Ryb2tlOiAjZmZmZmZmO1xuICAgICAgICBzdHJva2UtbGluZWNhcDogcm91bmQ7XG4gICAgICAgIHN0cm9rZS1kYXNoYXJyYXk6IDI4MztcbiAgICAgICAgc3Ryb2tlLWRhc2hvZmZzZXQ6IDI4MDtcbiAgICAgICAgc3Ryb2tlLXdpZHRoOiAxMHB4O1xuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiA1MCUgNTAlO1xuICAgICAgfVxuXG4gICAgICBAa2V5ZnJhbWVzIGNpcmNsZS1hbmltYXRpb24ge1xuICAgICAgICAwJSxcbiAgICAgICAgMjUlIHtcbiAgICAgICAgICBzdHJva2UtZGFzaG9mZnNldDogMjgwO1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDApO1xuICAgICAgICB9XG5cbiAgICAgICAgNTAlLFxuICAgICAgICA3NSUge1xuICAgICAgICAgIHN0cm9rZS1kYXNob2Zmc2V0OiA3NTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgIH1cblxuICAgICAgICAxMDAlIHtcbiAgICAgICAgICBzdHJva2UtZGFzaG9mZnNldDogMjgwO1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBgXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgSHR0cFByb2dyZXNzTG9hZGVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgbG9hZGluZzogYm9vbGVhbjtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBsb2FkZXJTZXJ2aWNlOiBIdHRwUHJvZ3Jlc3NMb2FkZXJTZXJ2aWNlKSB7XG4gICAgdGhpcy5sb2FkZXJTZXJ2aWNlLmlzTG9hZGluZy5zdWJzY3JpYmUodiA9PiB7XG4gICAgICB0aGlzLmxvYWRpbmcgPSB2O1xuICAgIH0pO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7fVxufVxuIl19