import { CommonModule } from '@angular/common';
import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';
import { APP_INITIALIZER, NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { TranslateModule, TranslateService } from '@ngx-translate/core';
import { TranslateHttpLoader } from '@ngx-translate/http-loader';
import { ButtonModule } from 'primeng/button';
import { CalendarModule } from 'primeng/calendar';
import { CardModule } from 'primeng/card';
import { CheckboxModule } from 'primeng/checkbox';
import { ConfirmDialogModule } from 'primeng/confirmdialog';
import { DialogModule } from 'primeng/dialog';
import { DropdownModule } from 'primeng/dropdown';
import { DialogService, DynamicDialogModule } from 'primeng/dynamicdialog';
import { InputSwitchModule } from 'primeng/inputswitch';
import { InputTextModule } from 'primeng/inputtext';
import { InputTextareaModule } from 'primeng/inputtextarea';
import { MenuModule } from 'primeng/menu';
import { MessageModule } from 'primeng/message';
import { MessagesModule } from 'primeng/messages';
import { OverlayPanelModule } from 'primeng/overlaypanel';
import { PaginatorModule } from 'primeng/paginator';
import { PanelModule } from 'primeng/panel';
import { PanelMenuModule } from 'primeng/panelmenu';
import { ScrollPanelModule } from 'primeng/scrollpanel';
import { SelectButtonModule } from 'primeng/selectbutton';
import { TableModule } from 'primeng/table';
import { ToastModule } from 'primeng/toast';
import { ToggleButtonModule } from 'primeng/togglebutton';
import { TooltipModule } from 'primeng/tooltip';
import { AutoCompleteModule } from 'primeng/autocomplete';
import { RatingModule } from 'primeng/rating';
import { RippleModule } from 'primeng/ripple';
import { SkeletonModule } from 'primeng/skeleton';
import { BreadcrumbModule } from "primeng/breadcrumb";
import { ConfigurationService } from '../api/configuration.service';
import { AUTH_SERVICE } from '../api/injection-tokens';
import { ActionDirective } from './components/action.directive';
import { BreadcrumbComponent } from './components/breadcrumbs/breadcrumb.component';
// import { KeycloakAngularModule, KeycloakService } from "keycloak-angular";
import { CollapsibleDirective } from './components/collapsible.directive';
import { AppFooterComponent } from './components/footer.component';
import { HelpEditDialogComponent } from './components/help-edit-dialog.component';
import { HttpProgressLoaderComponent } from './components/http-progress-loader.component';
import { AppInlineProfileComponent } from './components/inline-profile.component';
import { LoadingComponent } from './components/loading/loading.component';
import { NoHelpInfoComponent } from './components/no-help-info/no-help-info.component';
import { PanelHeaderComponent } from './components/panel-header.component';
import { HeaderComponent } from './components/portal-header/header.component';
import { AppMenuComponent, AppSubMenuComponent } from './components/portal-menu/portal-menu.component';
import { PortalPageComponent } from './components/portal-page/portal-page.component';
import { PortalSearchPageComponent } from './components/portal-search-page/portal-search-page.component';
import { PortalViewportComponent } from './components/portal-viewport/portal-viewport.component';
import { TkIfPermDirective } from './components/tkifperm.directive';
import { ToolbarItemComponent } from './components/toolbar-item.component';
import { HttpProgressInterceptor } from './http-progress-interceptor';
import { tkitPortalInitializer } from './tkitPortalInitilizer';
import { SearchBarComponent } from './components/search-bar/search-bar.component';
import { MultiTranslateHttpLoader } from 'ngx-translate-multi-http-loader';
import { ResultTextComponent } from './components/result-text.component';
import { FeedbackComponent } from './components/feedback/feedback.component';
import { SupportTicketComponent } from './components/support-ticket/support-ticket.component';
import { AddToLaunchpadComponent } from './components/add-to-launchpad/add-to-launchpad.component';
import { TooltipAriaDirective } from './components/aria/tooltip.directive';
import { HttpCacheInterceptorModule, useHttpCacheLocalStorage } from '@ngneat/cashew';
export function HttpLoaderFactory2(http) {
    return new TranslateHttpLoader(http, './portal-lib/assets/i18n/');
}
export function StandardTranslateHttpLoader(http) {
    return new MultiTranslateHttpLoader(http, [
        { prefix: './assets/i18n/', suffix: '.json' },
        { prefix: './portal-lib/assets/i18n/', suffix: '.json' },
    ]);
}
const ɵ0 = tkitPortalInitializer;
export class TkitPortalModule {
}
TkitPortalModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    PortalViewportComponent,
                    ToolbarItemComponent,
                    AppMenuComponent,
                    AppSubMenuComponent,
                    HeaderComponent,
                    AppFooterComponent,
                    HelpEditDialogComponent,
                    BreadcrumbComponent,
                    AppInlineProfileComponent,
                    HttpProgressLoaderComponent,
                    PortalPageComponent,
                    PanelHeaderComponent,
                    CollapsibleDirective,
                    ActionDirective,
                    TooltipAriaDirective,
                    NoHelpInfoComponent,
                    PortalSearchPageComponent,
                    LoadingComponent,
                    TkIfPermDirective,
                    SearchBarComponent,
                    ResultTextComponent,
                    FeedbackComponent,
                    AddToLaunchpadComponent,
                    SupportTicketComponent,
                ],
                imports: [
                    CommonModule,
                    FormsModule,
                    ReactiveFormsModule,
                    // KeycloakAngularModule,
                    // primeng
                    // TODO do not import all!!!
                    AutoCompleteModule,
                    BreadcrumbModule,
                    ButtonModule,
                    CalendarModule,
                    CardModule,
                    CheckboxModule,
                    ConfirmDialogModule,
                    DialogModule,
                    DynamicDialogModule,
                    DropdownModule,
                    InputSwitchModule,
                    InputTextModule,
                    InputTextareaModule,
                    MenuModule,
                    MessageModule,
                    MessagesModule,
                    OverlayPanelModule,
                    PanelModule,
                    PanelMenuModule,
                    RatingModule,
                    RippleModule,
                    ScrollPanelModule,
                    SkeletonModule,
                    TableModule,
                    ToastModule,
                    ToggleButtonModule,
                    TooltipModule,
                    // end primeng modules
                    HttpClientModule,
                    HttpCacheInterceptorModule.forRoot(),
                    TranslateModule,
                ],
                exports: [
                    FormsModule,
                    // reexport primeng
                    AutoCompleteModule,
                    BreadcrumbModule,
                    ButtonModule,
                    CalendarModule,
                    CardModule,
                    CheckboxModule,
                    ConfirmDialogModule,
                    DialogModule,
                    DynamicDialogModule,
                    DropdownModule,
                    InputSwitchModule,
                    InputTextModule,
                    InputTextareaModule,
                    MenuModule,
                    MessageModule,
                    MessagesModule,
                    OverlayPanelModule,
                    PaginatorModule,
                    PanelModule,
                    PanelMenuModule,
                    RatingModule,
                    RippleModule,
                    SelectButtonModule,
                    SkeletonModule,
                    TableModule,
                    ToastModule,
                    ToggleButtonModule,
                    TooltipModule,
                    // angular common
                    HttpClientModule,
                    HttpCacheInterceptorModule,
                    // our components
                    PortalViewportComponent,
                    PortalPageComponent,
                    PortalSearchPageComponent,
                    PanelHeaderComponent,
                    ToolbarItemComponent,
                    LoadingComponent,
                    CollapsibleDirective,
                    ActionDirective,
                    TooltipAriaDirective,
                    TkIfPermDirective,
                    ResultTextComponent,
                ],
                entryComponents: [NoHelpInfoComponent],
                providers: [
                    useHttpCacheLocalStorage,
                    DialogService,
                    {
                        provide: HTTP_INTERCEPTORS,
                        useClass: HttpProgressInterceptor,
                        multi: true,
                    },
                    {
                        provide: APP_INITIALIZER,
                        useFactory: ɵ0,
                        multi: true,
                        deps: [ConfigurationService, TranslateService, AUTH_SERVICE],
                    },
                ],
            },] }
];
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,