import { Injectable } from '@angular/core';
import { HttpClient, HttpParams } from '@angular/common/http';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
export class PortalItemService {
    constructor(http) {
        this.http = http;
        this.url = 'portal-api/v1/portalItems/search';
    }
    searchForServices(query, portalId, count) {
        let params = new HttpParams();
        if (query) {
            params = params.set('query', query);
        }
        if (portalId) {
            params = params.set('portal-id', portalId);
        }
        if (count) {
            params = params.set('count', count.toString());
        }
        return this.http.get(this.url, {
            params
        });
    }
}
PortalItemService.ɵprov = i0.ɵɵdefineInjectable({ factory: function PortalItemService_Factory() { return new PortalItemService(i0.ɵɵinject(i1.HttpClient)); }, token: PortalItemService, providedIn: "root" });
PortalItemService.decorators = [
    { type: Injectable, args: [{ providedIn: 'root' },] }
];
PortalItemService.ctorParameters = () => [
    { type: HttpClient }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9ydGFsLWl0ZW0uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3BvcnRhbC1saWIvc3JjL2xpYi9hcGkvc2VydmljZXMvcG9ydGFsLWl0ZW0uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7OztBQUs5RCxNQUFNLE9BQU8saUJBQWlCO0lBRTVCLFlBQTZCLElBQWdCO1FBQWhCLFNBQUksR0FBSixJQUFJLENBQVk7UUFENUIsUUFBRyxHQUFHLGtDQUFrQyxDQUFDO0lBQ1YsQ0FBQztJQUVqRCxpQkFBaUIsQ0FBQyxLQUFhLEVBQUUsUUFBZ0IsRUFBRSxLQUFjO1FBQy9ELElBQUksTUFBTSxHQUFHLElBQUksVUFBVSxFQUFFLENBQUM7UUFDOUIsSUFBSSxLQUFLLEVBQUU7WUFDVCxNQUFNLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDckM7UUFDRCxJQUFJLFFBQVEsRUFBRTtZQUNaLE1BQU0sR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxRQUFRLENBQUMsQ0FBQztTQUM1QztRQUNELElBQUksS0FBSyxFQUFFO1lBQ1QsTUFBTSxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO1NBQ2hEO1FBQ0QsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBa0IsSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUM5QyxNQUFNO1NBQ1AsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7OztZQW5CRixVQUFVLFNBQUMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFOzs7WUFKekIsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgSHR0cENsaWVudCwgSHR0cFBhcmFtcyB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBTZWFyY2hJdGVtRFRPIH0gZnJvbSAnLi4vbW9kZWwvc2VhcmNoLWl0ZW0ubW9kZWwnO1xyXG5cclxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcclxuZXhwb3J0IGNsYXNzIFBvcnRhbEl0ZW1TZXJ2aWNlIHtcclxuICBwcml2YXRlIHJlYWRvbmx5IHVybCA9ICdwb3J0YWwtYXBpL3YxL3BvcnRhbEl0ZW1zL3NlYXJjaCc7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBodHRwOiBIdHRwQ2xpZW50KSB7fVxyXG5cclxuICBzZWFyY2hGb3JTZXJ2aWNlcyhxdWVyeTogc3RyaW5nLCBwb3J0YWxJZDogc3RyaW5nLCBjb3VudD86IG51bWJlcik6IE9ic2VydmFibGU8U2VhcmNoSXRlbURUT1tdPiB7XHJcbiAgICBsZXQgcGFyYW1zID0gbmV3IEh0dHBQYXJhbXMoKTtcclxuICAgIGlmIChxdWVyeSkge1xyXG4gICAgICBwYXJhbXMgPSBwYXJhbXMuc2V0KCdxdWVyeScsIHF1ZXJ5KTtcclxuICAgIH1cclxuICAgIGlmIChwb3J0YWxJZCkge1xyXG4gICAgICBwYXJhbXMgPSBwYXJhbXMuc2V0KCdwb3J0YWwtaWQnLCBwb3J0YWxJZCk7XHJcbiAgICB9XHJcbiAgICBpZiAoY291bnQpIHtcclxuICAgICAgcGFyYW1zID0gcGFyYW1zLnNldCgnY291bnQnLCBjb3VudC50b1N0cmluZygpKTtcclxuICAgIH1cclxuICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0PFNlYXJjaEl0ZW1EVE9bXT4odGhpcy51cmwsIHtcclxuICAgICAgcGFyYW1zXHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIl19