{"version":3,"file":"keycloak-auth.service.d.ts","sources":["keycloak-auth.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { KeycloakService } from 'keycloak-angular';\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\nimport { ConfigurationService } from '../api/configuration.service';\r\nimport { IAuthService } from '../api/iauth.service';\r\nimport { AvatarInfo } from '../api/model/avatar-info.model';\r\nimport { UserProfile } from '../api/model/user-profile.model';\r\nimport { UserProfileService } from '../api/services/user-profile.service';\r\nimport { Router } from '@angular/router';\r\nexport declare class KeycloakAuthService implements IAuthService {\r\n    private keycloakService;\r\n    private configService;\r\n    private userProfileService;\r\n    private router;\r\n    userProfile: UserProfile;\r\n    avatarSubject: ReplaySubject<AvatarInfo>;\r\n    private user;\r\n    constructor(keycloakService: KeycloakService, configService: ConfigurationService, userProfileService: UserProfileService, router: Router);\r\n    hasPermission(permissionKey: string): boolean;\r\n    currentUser(): UserProfile;\r\n    logout(): void;\r\n    getAuthProviderName(): string;\r\n    init(): Promise<boolean>;\r\n    init2(): Promise<boolean>;\r\n    private setupEventListener;\r\n    private clearKCStateFromLocalstorage;\r\n    private getSilentSSOUrl;\r\n    hasRole(role: string | string[]): boolean;\r\n    getRoles(): string[];\r\n    refreshProfile(): void;\r\n    loadFullProfile(): Observable<UserProfile>;\r\n    private handleAvatarUpdate;\r\n    getAvatar(): Observable<AvatarInfo>;\r\n    private updateUserFromUserProfile;\r\n}\r\n"]}