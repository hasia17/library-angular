import { KeycloakService } from 'keycloak-angular';
import { Observable, ReplaySubject } from 'rxjs';
import { ConfigurationService } from '../api/configuration.service';
import { IAuthService } from '../api/iauth.service';
import { AvatarInfo } from '../api/model/avatar-info.model';
import { UserProfile } from '../api/model/user-profile.model';
import { UserProfileService } from '../api/services/user-profile.service';
import { Router } from '@angular/router';
export declare class KeycloakAuthService implements IAuthService {
    private keycloakService;
    private configService;
    private userProfileService;
    private router;
    userProfile: UserProfile;
    avatarSubject: ReplaySubject<AvatarInfo>;
    private user;
    constructor(keycloakService: KeycloakService, configService: ConfigurationService, userProfileService: UserProfileService, router: Router);
    hasPermission(permissionKey: string): boolean;
    currentUser(): UserProfile;
    logout(): void;
    getAuthProviderName(): string;
    init(): Promise<boolean>;
    init2(): Promise<boolean>;
    private setupEventListener;
    private clearKCStateFromLocalstorage;
    private getSilentSSOUrl;
    hasRole(role: string | string[]): boolean;
    getRoles(): string[];
    refreshProfile(): void;
    loadFullProfile(): Observable<UserProfile>;
    private handleAvatarUpdate;
    getAvatar(): Observable<AvatarInfo>;
    private updateUserFromUserProfile;
}
