import { Permission } from './permission.model';
import { UserPerson } from './person.model';
import { AvatarInfo } from './avatar-info.model';
export interface UserProfile {
    id?: string;
    userId?: string;
    identityProvider?: string;
    /**
     * user id in external identity provider, e.g. in keycloak
     */
    identityProviderId?: string;
    organization?: string;
    person?: UserPerson;
    avatar?: AvatarInfo;
    accountSettings?: UserProfileAccountSettings;
    roles?: Array<string>;
    memberships?: Array<Membership>;
}
export interface UserProfileAccountSettings {
    privacySettings?: UserProfileAccountSettingsPrivacySettings;
    notificationSettings?: UserProfileAccountSettingsNotificationSettings;
    localeAndTimeSettings?: UserProfileAccountSettingsLocaleAndTimeSettings;
    layoutAndThemeSettings?: UserProfileAccountSettingsLayoutAndThemeSettings;
    preferences?: Array<UserProfileAccountSettingsPreferences>;
}
export interface UserProfileAccountSettingsLocaleAndTimeSettings {
    locale?: string;
    timezone?: string;
}
export interface UserProfileAccountSettingsNotificationSettings {
    todo?: string;
}
export interface UserProfileAccountSettingsPreferences {
    key?: string;
    value?: string;
}
export interface UserProfileAccountSettingsPrivacySettings {
    hideMyProfile?: string;
}
export interface UserProfileAccountSettingsLayoutAndThemeSettings {
    sidebarViewMode?: string;
    compactView?: boolean;
    menuTheme?: string;
}
export interface Membership {
    application?: string;
    roleMemberships?: Array<MembershipRoles>;
}
export interface PersonDTO {
    persisted?: boolean;
    id?: string;
    version?: number;
    firstName?: string;
    lastName?: string;
    email?: string;
    jobPosition?: string;
    groupId?: string;
}
export interface MembershipRoles {
    role?: string;
    permissions?: Array<Permission>;
}
