import { Observable } from 'rxjs';
import { UserProfile } from './model/user-profile.model';
import { AvatarInfo } from './model/avatar-info.model';
export interface IAuthService {
    currentUser(): UserProfile;
    getAvatar(): Observable<AvatarInfo>;
    logout(): any;
    /**
     * Checks, whether user has the permission that is passed as param.
     * @param permissionKey permission key to check in form of RESOURCE#ACTION
     */
    hasPermission(permissionKey: string): boolean;
    getAuthProviderName(): string;
    /**
     * Checks, whether the current user has to role assigned. If role[] is passed, then the method returns true, if uses has ANY of the roles.
     * @param role role or roles to check
     */
    hasRole(role: string | string[]): boolean;
    /**
     * Initialization method of the Auth service. Once resolved, all user data MUST be available.
     */
    init(): Promise<boolean>;
    getRoles(): string[];
}
