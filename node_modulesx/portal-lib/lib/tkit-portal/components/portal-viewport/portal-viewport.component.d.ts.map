{"version":3,"file":"portal-viewport.component.d.ts","sources":["portal-viewport.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { AfterViewInit, OnInit, ElementRef, Renderer2, NgZone } from '@angular/core';\r\nimport { ScrollPanel } from 'primeng/scrollpanel';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { HelpPageAPIService } from '../../../api/services/help-page-api.service';\r\nimport { MessageService, MenuItem, PrimeNGConfig } from 'primeng/api';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\nimport { HelpData } from '../../../api/model';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ConfigurationService } from '../../../api/configuration.service';\r\nimport { ThemeService } from '../../../api/services/theme.service';\r\nimport { MenuApiService } from '../../../api/services/menu-api.service';\r\nimport { IAuthService } from '../../../api/iauth.service';\r\nimport { Portal } from '../../../api/model/portal';\r\nimport { OverlayPanel } from 'primeng/overlaypanel';\r\nimport { BreakpointObserver } from '@angular/cdk/layout';\r\nimport { FeedbackBasic } from '../../../api/model/feedback.model';\r\nimport { FeedbackApiService } from '../../../api/services/feedback-api.service';\r\nimport { SupportTicket } from '../../../api/model/support-ticket.model';\r\nimport { SupportTicketApiService } from '../../../api/services/support-ticket-api.service';\r\nimport { MenuService } from \"../../../api/services/menu.service\";\r\ndeclare enum MenuOrientation {\r\n    STATIC = 0,\r\n    OVERLAY = 1,\r\n    SLIM = 2,\r\n    HORIZONTAL = 3\r\n}\r\nexport declare class PortalViewportComponent implements AfterViewInit, OnInit {\r\n    renderer2: Renderer2;\r\n    zone: NgZone;\r\n    private router;\r\n    private route;\r\n    private helpDataService;\r\n    private messageService;\r\n    private dialogService;\r\n    private breakpointObserver;\r\n    private translate;\r\n    private themeService;\r\n    private menuService;\r\n    private menuApiService;\r\n    private configService;\r\n    private feedbackApiService;\r\n    private supportTicketApiService;\r\n    private primeNgConfig;\r\n    private auth;\r\n    showProfileInSidebar: boolean;\r\n    enableBreadcrumbs: boolean;\r\n    fullPortalLayout: boolean;\r\n    helpPageEditorDisplayed: boolean;\r\n    addToFavouritesDisplayed: boolean;\r\n    supportTicketDisplayed: boolean;\r\n    currentComponent: any;\r\n    feedbackData: FeedbackBasic;\r\n    feedbackVisible: boolean;\r\n    feedbackSubmitDisabled: boolean;\r\n    appName: string;\r\n    portalName: string;\r\n    appVersion: string;\r\n    isBodyCompact: boolean;\r\n    helpDataItem: HelpData;\r\n    helpArticleId: string;\r\n    sideBarColorTheme: string;\r\n    layoutMode: MenuOrientation;\r\n    darkMenu: boolean;\r\n    profileMode: string;\r\n    menuActive: boolean;\r\n    mobileMenuActive: boolean;\r\n    inlineMenuActive: boolean;\r\n    menuClick: boolean;\r\n    inlineMenuClick: boolean;\r\n    staticMenuDesktopInactive: boolean;\r\n    mobileTopbarActive: boolean;\r\n    showMenuButtonTitle: string;\r\n    hideMenuButtonTitle: string;\r\n    topbarItemClick: boolean;\r\n    activeTopbarItem: any;\r\n    resetMenu: boolean;\r\n    menuHoverActive: boolean;\r\n    searchClick: boolean;\r\n    search: boolean;\r\n    documentClickListener: () => void;\r\n    layoutContainerViewChild: ElementRef;\r\n    layoutMenuScrollerViewChild: ScrollPanel;\r\n    feedbackPanel: OverlayPanel;\r\n    preloader: boolean;\r\n    portalMenuItems: MenuItem[];\r\n    lang: string;\r\n    portalHomeMenuItem: MenuItem;\r\n    initError: any;\r\n    mainPortal: Portal;\r\n    get menuButtonTitle(): string;\r\n    constructor(renderer2: Renderer2, zone: NgZone, router: Router, route: ActivatedRoute, helpDataService: HelpPageAPIService, messageService: MessageService, dialogService: DialogService, breakpointObserver: BreakpointObserver, translate: TranslateService, themeService: ThemeService, menuService: MenuService, menuApiService: MenuApiService, configService: ConfigurationService, feedbackApiService: FeedbackApiService, supportTicketApiService: SupportTicketApiService, primeNgConfig: PrimeNGConfig, auth: IAuthService);\r\n    applyPadding(): void;\r\n    setSidebarColorTheme(): void;\r\n    ngOnInit(): void;\r\n    ngAfterViewInit(): void;\r\n    loadMenuItems(): void;\r\n    private toPrimeNGMenuItem;\r\n    validateRequiredInputs(): void;\r\n    loadHelpArticle(): void;\r\n    onHelpArticleEditorClosed(changed: boolean): void;\r\n    onAddToLaunchpadClosed(event: any): void;\r\n    openHelpPage(event: any): void;\r\n    openHelpPageEditor(event: any): void;\r\n    openFeedback(event: any): void;\r\n    openAddToLaunchpad(event: any): void;\r\n    openSupportTicket(event: any): void;\r\n    onSubmitFeedback(feedback: FeedbackBasic): void;\r\n    closeFeedback(): void;\r\n    onSubmitTicket(ticket: SupportTicket): void;\r\n    clearFeedback(): void;\r\n    addClass(element: any, className: any): void;\r\n    removeClass(element: any, className: any): void;\r\n    onMenuButtonClick(event: any): void;\r\n    onMenuClick($event: any): void;\r\n    onInlineMenuClick(event: any): void;\r\n    onTopbarMobileButtonClick(event: any): void;\r\n    onTopbarItemClick(event: any, item: any): void;\r\n    onSearchClick(event: any, val: boolean): void;\r\n    isDesktop(): boolean;\r\n    isMobile(): boolean;\r\n    isStatic(): boolean;\r\n    isOverlay(): boolean;\r\n    isHorizontal(): boolean;\r\n    isSlim(): boolean;\r\n    changeToStaticMenu(): void;\r\n    changeToOverlayMenu(): void;\r\n    changeToHorizontalMenu(): void;\r\n    changeToSlimMenu(): void;\r\n    blockBodyScroll(): void;\r\n    unblockBodyScroll(): void;\r\n    private setCustomTheme;\r\n}\r\nexport {};\r\n"]}