import { ElementRef, EventEmitter, OnInit } from '@angular/core';
import { Observable } from 'rxjs';
import { IAuthService } from '../../../api/iauth.service';
import { AvatarInfo } from '../../../api/model/avatar-info.model';
import { UserProfile } from '../../../api/model/user-profile.model';
import { ConfigurationService } from '../../../api/configuration.service';
import { StateService } from '../../../api/state.service';
import { Router } from '@angular/router';
export declare class HeaderComponent implements OnInit {
    private authService;
    private config;
    private stateService;
    private router;
    defaultAvatarUrl: string;
    menuExpanded: boolean;
    menuItems: any;
    userProfile: UserProfile;
    userDisplayName: string;
    userAvatar: Observable<AvatarInfo>;
    searchUrl: string;
    searchInputViewChild: ElementRef;
    mobileTopbarActive: boolean;
    menuButtonTitle: string;
    menuButtonClick: EventEmitter<any>;
    topbarItemClick: EventEmitter<any>;
    openHelpPage: EventEmitter<any>;
    openHelpPageEditor: EventEmitter<any>;
    openFeedback: EventEmitter<any>;
    openAddToLaunchpad: EventEmitter<any>;
    openSupportTicket: EventEmitter<any>;
    searchClick: EventEmitter<any>;
    profileMode: string;
    isHorizontal: boolean;
    activeTopbarItem: any;
    disableBreadcrumbs: boolean;
    fullPortalLayout: boolean;
    search: boolean;
    homeNavUrl: string;
    homeNavTitle: string;
    constructor(authService: IAuthService, config: ConfigurationService, stateService: StateService, router: Router);
    ngOnInit(): void;
    clickMenu(): void;
    navigateTo(path: string, event: Event): void;
    logout(event: Event): void;
    onMenuButtonClick(e: Event): void;
    onTopbarItemClick(e: Event, arg: any): void;
    onOpenHelpPageEditor(e: Event): void;
    onOpenHelpPage(e: Event): void;
    onOpenFeedback(e: Event): void;
    onAddToFavourites(e: Event): void;
    onOpenSupportTicket(e: Event): void;
    onTopbarMobileButtonClick($event: MouseEvent): void;
    onSearchClick(e: Event, val: boolean): void;
}
