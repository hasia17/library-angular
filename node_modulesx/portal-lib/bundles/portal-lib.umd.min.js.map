{"version":3,"sources":["../../../projects/portal-lib/src/lib/api/injection-tokens.ts","../../../projects/portal-lib/src/lib/mock-auth/mock-auth.service.ts","../../../projects/portal-lib/src/lib/mock-auth/mock-auth.module.ts","../../../projects/portal-lib/src/lib/api/services/portal-api.service.ts","../../../projects/portal-lib/src/lib/api/configuration.service.ts","../../../projects/portal-lib/src/lib/api/services/user-profile.service.ts","../../../projects/portal-lib/src/lib/tkit-portal/constants.ts","../../../projects/portal-lib/src/lib/auth/keycloak-auth.service.ts","../../../projects/portal-lib/src/lib/api/model/person.model.ts","../../../projects/portal-lib/src/lib/auth/auth.module.ts","../../../projects/portal-lib/src/lib/api/services/breadcrumb.service.ts","../../../projects/portal-lib/src/lib/api/state.service.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/action.directive.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/breadcrumbs/breadcrumb.component.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/collapsible.directive.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/footer.component.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/help-edit-dialog.component.ts","../../../projects/portal-lib/src/lib/tkit-portal/http-progress-loader.service.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/http-progress-loader.component.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/inline-profile.component.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/loading/loading.component.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/no-help-info/no-help-info.component.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/panel-header.component.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/portal-header/header.component.ts","../../../projects/portal-lib/src/lib/api/services/menu.service.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/portal-menu/portal-menu.component.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/portal-page/portal-page.component.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/portal-lib/src/lib/api/services/search-template-api.service.ts","../../../projects/portal-lib/src/lib/api/services/help-page-api.service.ts","../../../projects/portal-lib/src/lib/tkit-portal/pages/PortalPage.ts","../../../projects/portal-lib/src/lib/api/services/theme.service.ts","../../../projects/portal-lib/src/lib/api/services/menu-api.service.ts","../../../projects/portal-lib/src/lib/api/services/feedback-api.service.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/portal-viewport/portal-viewport.component.ts","../../../projects/portal-lib/src/lib/api/services/support-ticket-api.service.ts","../../../projects/portal-lib/src/lib/tkit-portal/pages/PortalSearchPage.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/portal-search-page/portal-search-page.component.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/tkifperm.directive.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/toolbar-item.component.ts","../../../projects/portal-lib/src/lib/tkit-portal/http-progress-interceptor.ts","../../../projects/portal-lib/src/lib/tkit-portal/tkitPortalInitilizer.ts","../../../projects/portal-lib/src/lib/api/model/search-item-type.ts","../../../projects/portal-lib/src/lib/api/services/portal-item.service.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/search-bar/search-bar.component.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/result-text.component.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/feedback/feedback.component.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/support-ticket/support-ticket.component.ts","../../../projects/portal-lib/src/lib/api/services/icons.service.ts","../../../projects/portal-lib/src/lib/api/services/launchpad.service.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/add-to-launchpad/add-to-launchpad.component.ts","../../../projects/portal-lib/src/lib/tkit-portal/components/aria/tooltip.directive.ts","../../../projects/portal-lib/src/lib/tkit-portal/tkit-portal.module.ts","../../../projects/portal-lib/src/lib/tkit-portal/functions.ts"],"names":["APP_CONFIG","InjectionToken","AUTH_SERVICE","MockAuthService","this","mockUser","person","displayName","firstName","lastName","email","accountSettings","localeAndTimeSettings","locale","timezone","notificationSettings","preferences","privacySettings","id","identityProvider","identityProviderId","roles","memberships","application","roleMemberships","role","permissions","action","resource","name","key","prototype","currentUser","getAvatar","of","avatar","init","Promise","resolve","reject","hasPermission","permissionKey","logout","Error","getAuthProviderName","hasRole","getRoles","initializer","authService","console","log","then","res","Injectable","NgModule","args","imports","CommonModule","exports","declarations","providers","provide","useClass","APP_INITIALIZER","useFactory","multi","deps","PortalApiService","httpClient","baseUrl","getPortalData","portal","get","withCache","providedIn","HttpClient","ConfigurationService","http","portalService","appConfig","lang$","ReplaySubject","_this","loadConfigPromise","skipRemoteConfigLoad","customEnv","window","remoteConfigURL","toPromise","config","sanitizedEnvValues","sanitizeConfig","Object","assign","portalId","data","portalData","catch","err","JSON","stringify","e","keys","filter","startsWith","reduce","obj","getProperty","setLang","lang","next","Inject","UserProfileService","url","personUrl","avatarUrl","settingsUrl","changePasswordUrl","refreshProfile$","currentAvatar$","currentUser$","pipe","switchMapTo","shareReplay","getCurrentUser","getUpdatedAvatar","updatePersonalInfo","put","setUserAvatar","file","formData","FormData","append","tap","removeAvatar","delete","updateUserSettings","settings","patch","refreshProfile","getUserSettings","getCurrentUserFromBE","changeUserPassword","resetPasswordDTO","DEFAULT_AVATAR_URL","CONFIG_KEY_TKIT_PORTAL_DISABLE_THEME_MANAGEMENT","CONFIG_KEY_TKIT_SEARCH_BASE_URL","CONFIG_KEY_KEYCLOAK_REALM","CONFIG_KEY_KEYCLOAK_ENABLE_SILENT_SSO","CONFIG_KEY_KEYCLOAK_URL","CONFIG_KEY_KEYCLOAK_CLIENT_ID","KC_REFRESH_TOKEN_LS","KC_ID_TOKEN_LS","KC_TOKEN_LS","TKIT_USER_PROFILE_LS","KeycloakAuthService","keycloakService","configService","userProfileService","router","user","userId","userPerson","functions","includes","userProfile","clearKCStateFromLocalstorage","token","localStorage","getItem","idToken","refreshToken","parsedToken","parse","atob","split","exp","sub","Date","getTime","undefined","setupEventListener","kcConfig","clientId","realm","kcOptions","loadUserProfileAtStartUp","initOptions","onLoad","checkLoginIframe","silentCheckSsoRedirectUri","getSilentSSOUrl","enableBearerInterceptor","bearerExcludedUrls","login","loginOk","getToken","tokenString","profileFromCache","removeItem","avatarSubject","handleAvatarUpdate","subscribe","updateUserFromUserProfile","setItem","init2","ok","keycloakEvents$","ke","getKeycloakInstance","type","KeycloakEventType","OnAuthLogout","navigateByUrl","currentBase","document","getElementsByTagName","href","roleString","map","toUpperCase","item","length","profileData","loadFullProfile","avatarInfo","avatarImageUrl","avatarSmallImageUrl","asObservable","principalId","commonName","forEach","m","r","p","push","KeycloakService","Router","PhoneType","KeycloakAngularModule","BreadcrumbService","itemsSource","Subject","itemsHandler","setItems","items","StateService","getUserSettingsActivatedTab","userSettingsActivatedTab","setUserSettingsActivatedTab","tab","ActionDirective","renderer","el","viewContainer","ngOnInit","permission","setAttribute","nativeElement","clear","Directive","selector","Renderer2","ElementRef","ViewContainerRef","Input","BreadcrumbComponent","breadcrumbService","openHelpPage","EventEmitter","openHelpPageEditor","subscription","response","home","icon","routerLink","ngOnDestroy","unsubscribe","onOpenHelpPageEditor","evt","emit","onOpenHelpPage","Component","template","Output","CollapsibleDirective","isCollapsed","collapsed","expanded","classList","add","toggle","show","hide","HelpEditDialogComponent","display","closed","save","close","event","isLoading","BehaviorSubject","HttpProgressLoaderComponent","loaderService","v","loading","HttpProgressLoaderService","AppInlineProfileComponent","defaultAvatarUrl","inlineMenuClick","defineProperty","_a","inlineMenuActive","userAvatar","onClick","preventDefault","animations","trigger","state","style","height","paddingBottom","overflow","opacity","z-index","transition","animate","transform","LoadingComponent","changeDetection","ChangeDetectionStrategy","OnPush","NoHelpInfoComponent","ref","pageId","pageItem","DynamicDialogConfig","DynamicDialogRef","PanelHeaderComponent","HeaderComponent","stateService","menuButtonClick","topbarItemClick","openFeedback","openAddToLaunchpad","openSupportTicket","searchClick","homeNavUrl","homeNavTitle","userDisplayName","searchUrl","clickMenu","menuExpanded","navigateTo","path","location","onMenuButtonClick","onTopbarItemClick","arg","onOpenFeedback","onAddToFavourites","onOpenSupportTicket","onTopbarMobileButtonClick","$event","mobileTopbarActive","onSearchClick","val","ViewChild","MenuService","menuSource","resetSource","menuSource$","resetSource$","onMenuStateChange","reset","AppMenuComponent","menuActiveChange","mobileMenuActiveChange","menuWithRoot","label","AppSubMenuComponent","menuService","active","menuSourceSubscription","indexOf","menuResetSubscription","events","NavigationEnd","params","isSlim","updateActiveStateFromRoute","isHorizontal","parentKey","index","String","isActive","itemClick","disabled","command","originalEvent","menuHoverActive","isStatic","onMouseEnter","root","isDesktop","host","[class.layout-root-menuitem]","[class.active-menuitem]","padding","PortalPageComponent","injectorObj","doSomething","alert","hasAccess","collapse","collapsible2","expand","remove","Injector","ContentChild","read","extendStatics","d","b","setPrototypeOf","__proto__","Array","hasOwnProperty","call","__extends","TypeError","__","constructor","create","__read","o","n","Symbol","iterator","i","ar","done","value","error","__spread","arguments","concat","SearchTemplateAPIService","httpOptions","headers","HttpHeaders","Content-Type","Accept","getSearchTemplatesLegacy","page","includeGlobal","post","getTemplateById","createNewTemplate","updateTemplate","deleteTemplate","HelpPageAPIService","getHelpDataItem","appId","helpItemId","helpItems","getHelpDataItemLegacy","context","encodeURIComponent","saveHelpPage","helpItem","observe","saveHelpPageLegacy","isTkitPage","object","ThemeService","configservice","themeServerUrl","getThemeHref","theme","MenuApiService","messageService","menuUrl","getMenuItems","catchError","handleError","operation","result","message","MessageService","FeedbackApiService","sendFeedback","feedback","MenuOrientation","SupportTicketApiService","createSupportTicket","ticket","request","processId","title","processStep","description","source","sourceDeepLink","PortalViewportComponent","renderer2","zone","route","helpDataService","dialogService","breakpointObserver","translate","themeService","menuApiService","feedbackApiService","supportTicketApiService","primeNgConfig","auth","showProfileInSidebar","enableBreadcrumbs","fullPortalLayout","helpPageEditorDisplayed","addToFavouritesDisplayed","supportTicketDisplayed","feedbackData","comment","rating","anonymous","feedbackVisible","feedbackSubmitDisabled","portalName","layoutMode","STATIC","darkMenu","profileMode","search","preloader","portalHomeMenuItem","menuActive","isMobile","mobileMenuActive","hideMenuButtonTitle","showMenuButtonTitle","applyPadding","isBodyCompact","addClass","body","removeClass","setSidebarColorTheme","sideBarColorTheme","ripple","initError","mainPortal","layoutAndThemeSettings","compactView","sidebarViewMode","validateRequiredInputs","setCustomTheme","loadMenuItems","NavigationStart","ActivationEnd","currentComponent","helpPageIdentifier","helpArticleId","helpDataItem","appName","resourceUrl","loadHelpArticle","NavigationError","severity","summary","detail","text","ngAfterViewInit","documentClickListener","listen","activeTopbarItem","menuClick","isOverlay","unblockBodyScroll","stripForbidden","serverMenuItems","mainMenuItem","find","toPrimeNGMenuItem","children","permissionObject","sort","a","position","portalMenuItems","level","isAbsoluteLink","match","currentHost","i18n","applicationId","substr","substring","origin","badgeIcon","badge","portalExit","open","navigate","routerLinkActiveOptions","exact","child","onHelpArticleEditorClosed","changed","status","onAddToLaunchpadClosed","focus","header","width","isMatched","feedbackPanel","onSubmitFeedback","feedbackDTO","closeFeedback","onSubmitTicket","clearFeedback","element","className","replace","RegExp","join","blockBodyScroll","onMenuClick","onInlineMenuClick","innerWidth","OVERLAY","HORIZONTAL","SLIM","changeToStaticMenu","changeToOverlayMenu","changeToHorizontalMenu","changeToSlimMenu","customTheme","themeName","themeFromEnv","getElementById","themeLink","createElement","onload","onerror","appendChild","NgZone","ActivatedRoute","DialogService","BreakpointObserver","TranslateService","PrimeNGConfig","PortalSearchPage","searchInProgress","resultIntermediate","doSearch","isObservable","results","criteria","getDefaultCriteria","reISO","dateReviver","exec","PortalSearchPageComponent","injectorChild","searchTemplateApi","viewPort","searchPage","_super","searchCriteriaTemplatesEnabled","enableSearchToolbar","onSearch","newTemplateDefaultFlag","validatedInputs","pageName","fetchSearchTemplates","onSearchTemplateSelection","activeSearchTemplateId","activeSearchTemplate","criteriaAsJson","templates","searchTemplateOptions","t","defaultTemplate","warn","triggerSearch","triggerCriteriaTemplateUpdate","savedTemplate","triggerCriteriaTemplateSave","op","newTemplateName","triggerCriteriaTemplateDelete","splice","findIndex","decorators","SkipSelf","Optional","TkIfPermDirective","templateRef","createEmbeddedView","TemplateRef","ToolbarItemComponent","HttpProgressInterceptor","requests","removeRequest","req","intercept","started","now","handle","HttpResponse","elapsed","urlWithParams","tkitPortalInitializer","translateService","startTime","availableLangs","l","trim","_b","getBrowserLang","use","duration","toFixed","SearchItemType","PortalItemService","searchForServices","query","count","HttpParams","set","toString","SearchBarComponent","searchService","OPEN_SEARCH","queryString","FormControl","setTimeout","searchInputViewChild","focusInput","slice","maxResults","openInSearchItem","select","setValue","goToSearch","clickEnter","instant","FeedbackComponent","fb","minLength","submitDisabled","feedbackDataChange","feedbackSubmit","commentRequired","requiredCommentValidator","fg","controls","missingComment","form","patchValue","group","Validators","required","min","max","validators","valueChanges","values","submitFeedback","valid","FormBuilder","SupportTicketComponent","displayChange","submitTicket","formGroup","submit","IconsService","getPrimeicons","responseType","LaunchpadService","getLaunchpads","parameters","options","addToLaunchpad","createTileDTO","AddToLaunchpadComponent","iconsService","launchpadService","confService","launchpads","icons","launchpadForm","appUrl","launchpad","launchpadCriteria","filterIcons","toLowerCase","filteredIcons","TooltipAriaDirective","runOutsideAngular","tooltipEvent","initHoverForTooltipEvent","initFocusForTooltipEvent","mouseEnterListener","bind","mouseLeaveListener","onMouseLeave","clickListener","addEventListener","focusListener","onFocus","blurListener","onBlur","Tooltip","AppFooterComponent","ResultTextComponent","FormsModule","ReactiveFormsModule","AutoCompleteModule","BreadcrumbModule","ButtonModule","CalendarModule","CardModule","CheckboxModule","ConfirmDialogModule","DialogModule","DynamicDialogModule","DropdownModule","InputSwitchModule","InputTextModule","InputTextareaModule","MenuModule","MessageModule","MessagesModule","OverlayPanelModule","PanelModule","PanelMenuModule","RatingModule","RippleModule","ScrollPanelModule","SkeletonModule","TableModule","ToastModule","ToggleButtonModule","TooltipModule","HttpClientModule","HttpCacheInterceptorModule","forRoot","TranslateModule","PaginatorModule","SelectButtonModule","entryComponents","useHttpCacheLocalStorage","HTTP_INTERCEPTORS","ɵ0$1","TranslateHttpLoader","MultiTranslateHttpLoader","prefix","suffix","component","parentType","useExisting","forwardRef"],"mappings":"2/FAeaA,EAAa,IAAIC,EAAAA,eAA0B,cAE3CC,EAAe,IAAID,EAAAA,eAA6B,6BC6B3D,SAAAE,IApCQC,KAAAC,SAAwB,CAC9BC,OAAQ,CACNC,YAAa,gBACbC,UAAW,MACXC,SAAU,aACVC,MAAO,gCAETC,gBAAiB,CACfC,sBAAuB,CAAEC,OAAQ,KAAMC,SAAU,OACjDC,qBAAsB,GACtBC,YAAa,GACbC,gBAAiB,IAEnBC,GAAI,eACJC,iBAAkB,uBAClBC,mBAAoB,UACpBC,MAAO,CAAC,OAAQ,SAChBC,YAAa,CACX,CACEC,YAAa,OACbC,gBAAiB,CACf,CACEC,KAAM,OACNC,YAAa,CACX,CACEC,OAAQ,OACRC,SAAU,OACVC,KAAM,YACNC,IAAK,0BASnB3B,EAAA4B,UAAAC,YAAA,WACE,OAAO5B,KAAKC,UAEdF,EAAA4B,UAAAE,UAAA,WACE,OAAOC,EAAAA,GAAG9B,KAAKC,SAAS8B,SAGnBhC,EAAA4B,UAAAK,KAAA,WACL,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAAW,OAAAD,GAAQ,OAGlDnC,EAAA4B,UAAAS,cAAA,SAAcC,GACZ,OAAO,GAGTtC,EAAA4B,UAAAW,OAAA,WACE,MAAM,IAAIC,MAAM,4BAElBxC,EAAA4B,UAAAa,oBAAA,WACE,MAAO,wBAETzC,EAAA4B,UAAAc,QAAA,SAAQpB,GACN,OAAO,GAETtB,EAAA4B,UAAAe,SAAA,WACE,MAAO,CAAC,oCCnEIC,EAAYC,GAG1B,OAFAC,QAAQC,IAAI,+BAEL,WACL,OAAAF,EAAYZ,OAAOe,MAAK,SAAAC,GAEtB,OADAH,QAAQC,IAAI,sCAAsCE,GAC3CA,0BDHZC,EAAAA,yDC2BD,iCAjBCC,EAAAA,SAAQC,KAAA,CAAC,CACRC,QAAS,CAACC,EAAAA,cACVC,QAAS,GACTC,aAAc,GACdC,UAAW,CACT,CACEC,QAAS3D,EACT4D,SAAU3D,GAEZ,CACE0D,QAASE,EAAAA,gBACTC,WAAYjB,EACZkB,OAAO,EACPC,KAAM,CAAChE,0BCvBX,SAAAiE,EAA6BC,GAAAhE,KAAAgE,WAAAA,EAC7BhE,KAAAiE,QAAU,iCAEVF,EAAApC,UAAAuC,cAAA,SAAcC,GACZ,OAAOnE,KAAKgE,WAAWI,IAClBpE,KAAKiE,QAAO,IAAIE,EACnBE,EAAAA,4JARLpB,EAAAA,WAAUE,KAAA,CAAC,CAAEmB,WAAY,oDAHjBC,EAAAA,cCIT,iBAYE,SAAAC,EACUC,EACAC,EACoBC,GAFpB3E,KAAAyE,KAAAA,EACAzE,KAAA0E,cAAAA,EACoB1E,KAAA2E,UAAAA,EATvB3E,KAAA4E,MAAQ,IAAIC,EAAAA,cAAsB,UAYlCL,EAAA7C,UAAAK,KAAA,WAAA,IAAA8C,EAAA9E,KACL,OAAO,IAAIiC,SAAQ,SAACC,EAASC,GAQ3B,IAAI4C,EAPAD,EAAKH,UAAUK,uBACjBnC,QAAQC,IACN,wHAEFgC,EAAKG,UAAYH,EAAKH,UACtBzC,GAAQ,IAIVW,QAAQC,IAAI,gBAAgBoC,OAAmB,YAC3CA,OAAmB,WACrBH,EAAoB,IAAI9C,SAAQ,SAACC,EAASC,GACxCD,EAAQgD,OAAmB,gBAG7BrC,QAAQC,IAAI,mBAEZiC,EAAoBD,EAAKL,KAAKL,IAAIU,EAAKH,UAAUQ,iBAAmB,mBAAmBC,aAGzFL,EACGhC,MAAK,SAAAsC,GACJ,GAAIA,EAAQ,CACV,IAAMC,EAAqBR,EAAKS,eAAeF,GAC/CP,EAAKG,UAASO,OAAAC,OAAAD,OAAAC,OAAA,GAAQX,EAAKH,WAAcW,OAG5CvC,MAAK,WACJ,IAAM2C,EAAWZ,EAAKG,UAAwB,gBAAK,SAEnDH,EAAKJ,cACFR,cAAcwB,GACdN,YACArC,MAAK,SAAA4C,GACAA,IACFb,EAAKc,WAAaD,GAEpBzD,GAAQ,MAET2D,OAAM,SAAAC,GACLjD,QAAQC,IAAI,+BAA+BiD,KAAKC,UAAUF,IAC1DhB,EAAKc,WAAa,CAAEF,SAAU,UAC9BxD,GAAQ,SAGb2D,OAAM,SAAAI,GACLpD,QAAQC,IAAI,oCACZX,EAAO8D,UAKPzB,EAAA7C,UAAA4D,eAAA,SAAeF,GACrB,OACEG,OAAOU,KAAKb,GAETc,QAAO,SAAAzE,GAAO,OAAE2D,EAAO3D,GAAgB0E,WAAW,SAClDC,QAAO,SAACC,EAAK5E,GAEZ,OADA4E,EAAI5E,GAAO2D,EAAO3D,GACX4E,IACN,KAIF9B,EAAA7C,UAAA4E,YAAA,SAAY7E,GACjB,OAAO1B,KAAKiF,UAAUvD,IAGjB8C,EAAA7C,UAAAuC,cAAA,WACL,OAAOlE,KAAK4F,YAEPpB,EAAA7C,UAAA6E,QAAA,SAAQC,GACb5D,QAAQC,IAAI,kCAAmC2D,GAC/CzG,KAAK4E,MAAM8B,KAAKD,8KA3FnBxD,EAAAA,WAAUE,KAAA,CAAC,CACVmB,WAAY,oDAVLC,EAAAA,kBAGAR,kCAmBJ4C,EAAAA,OAAMxD,KAAA,CAACvD,yBCIV,SAAAgH,EAAoBnC,GAAAzE,KAAAyE,KAAAA,EAdZzE,KAAA6G,IAAM,iCACN7G,KAAA8G,UAAY,4CACZ9G,KAAA+G,UAAY,wCACZ/G,KAAAgH,YAAc,0CACdhH,KAAAiH,kBAAoB,iDAEpBjH,KAAAkH,gBAAkB,IAAIrC,EAAAA,cAAoB,GAC1C7E,KAAAmH,eAAiB,IAAItC,EAAAA,cAA0B,GAE/C7E,KAAAoH,aAAwCpH,KAAKkH,gBAAgBG,KACnEC,EAAAA,YAAYtH,KAAKyE,KAAKL,IAAiBpE,KAAK6G,MAC5CU,EAAAA,YAAY,WAKdX,EAAAjF,UAAA6F,eAAA,WACE,OAAOxH,KAAKoH,cAGdR,EAAAjF,UAAA8F,iBAAA,WACE,OAAOzH,KAAKmH,gBAGdP,EAAAjF,UAAA+F,mBAAA,SAAmBxH,GACjB,OAAOF,KAAKyE,KAAKkD,IAAI3H,KAAK8G,UAAW5G,IAIvC0G,EAAAjF,UAAAiG,cAAA,SAAcC,GAAd,IAAA/C,EAAA9E,KACQ8H,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,OAAQH,GACjB7H,KAAKyE,KAAKkD,IAAgB3H,KAAK+G,UAAWe,GAAUT,KAAKY,EAAAA,KAAI,SAAAlG,GAAU,OAAA+C,EAAKqC,eAAeT,KAAK3E,QAGzG6E,EAAAjF,UAAAuG,aAAA,WAAA,IAAApD,EAAA9E,KACE,OAAOA,KAAKyE,KAAK0D,OAAOnI,KAAK+G,WAAWM,KAAKY,EAAAA,KAAI,WAAM,OAAAnD,EAAKqC,eAAeT,KAAK,WAGlFE,EAAAjF,UAAAyG,mBAAA,SAAmBC,GACjB,OAAOrI,KAAKyE,KAAK6D,MAAMtI,KAAKgH,YAAaqB,IAG3CzB,EAAAjF,UAAA4G,eAAA,WACEvI,KAAKkH,gBAAgBR,QAGvBE,EAAAjF,UAAA6G,gBAAA,WACE,OAAOxI,KAAKyE,KAAKL,IAAgCpE,KAAKgH,cAGxDJ,EAAAjF,UAAA8G,qBAAA,WACE,OAAOzI,KAAKyE,KAAKL,IAAiBpE,KAAK6G,MAGzCD,EAAAjF,UAAA+G,mBAAA,SAAmBC,GACjB,OAAO3I,KAAKyE,KAAKkD,IAAS3H,KAAKiH,kBAAmB0B,kJA1DrD1F,EAAAA,WAAUE,KAAA,CAAC,CAAEmB,WAAY,oDATjBC,EAAAA,kBCDIqE,GAAqB,8CAErBC,GAAkD,uCAKlDC,GAAkC,uBAElCC,GAA4B,iBAC5BC,GAAwC,6BACxCC,GAA0B,eAC1BC,GAAgC,qBCMvCC,GAAsB,kBACtBC,GAAiB,aACjBC,GAAc,WACdC,GAAuB,kCAa3B,SAAAC,EACUC,EACAC,EACAC,EACAC,GAHA3J,KAAAwJ,gBAAAA,EACAxJ,KAAAyJ,cAAAA,EACAzJ,KAAA0J,mBAAAA,EACA1J,KAAA2J,OAAAA,EAXF3J,KAAA4J,KAAa,CACnBC,OAAQ,YACRC,WAAY,CAAE1J,UAAW,SACzB2J,UAAW,GACX9I,MAAO,WAUTsI,EAAA5H,UAAAS,cAAA,SAAcC,GACZ,QAAOrC,KAAK4J,KAAKG,WAAY/J,KAAK4J,KAAKG,UAAUC,SAAS3H,IAE5DkH,EAAA5H,UAAAC,YAAA,WACE,OAAO5B,KAAKiK,aAEdV,EAAA5H,UAAAW,OAAA,WACEtC,KAAKkK,+BACLlK,KAAKwJ,gBAAgBlH,UAEvBiH,EAAA5H,UAAAa,oBAAA,WACE,MAAO,2BAGF+G,EAAA5H,UAAAK,KAAA,WAAA,IAAA8C,EAAA9E,KACL6C,QAAQC,IAAI,gCAEZ,IAAIqH,EAAQC,aAAaC,QAAQhB,IAC7BiB,EAAUF,aAAaC,QAAQjB,IAC/BmB,EAAeH,aAAaC,QAAQlB,IACxC,GAAIgB,EAAO,CACT,IAAMK,EAAczE,KAAK0E,MAAMC,KAAKH,EAAaI,MAAM,KAAK,KAC5D9H,QAAQC,IAAI,oBAAoB0H,EAAYI,IAAG,IAAIJ,EAAYK,KACzC,IAAlBL,EAAYI,KAAa,IAAIE,MAAOC,YAEtClI,QAAQC,IAAI,yBACZqH,OAAQa,EACRT,OAAeS,EACfV,OAAUU,EACVhL,KAAKkK,gCAITlK,KAAKiL,qBAGL,IAAIC,EAAoC,CACtCrE,IAAK7G,KAAKyJ,cAAclD,YAAY0C,IACpCkC,SACEnL,KAAKyJ,cAAclD,YAAY2C,KAAkClJ,KAAKyJ,cAAclD,YAAY,SAClG6E,MAAOpL,KAAKyJ,cAAclD,YAAYwC,KAGnCmC,EAASC,UAAaD,EAASE,OAAUF,EAASrE,MACrDqE,EAAW,0BAGb,IAEMG,EAA6B,CACjCC,0BAA0B,EAC1BjG,OAAQ6F,EACRK,YAAa,CAEXC,OAAQ,YACRC,kBAAkB,EAClBC,0BATmG,SAA1E1L,KAAKyJ,cAAclD,YAAYyC,IASNhJ,KAAK2L,uBAAoBX,EAC3EV,QAAOA,EACPC,aAAYA,EACZJ,MAAKA,GAEPyB,yBAAyB,EACzBC,mBAAoB,CAAC,YAIvB,OAAO7L,KAAKwJ,gBACTxH,KAAKqJ,GACLxF,OAAM,SAAAC,GAEL,OADAjD,QAAQC,IAAI,UAAUgD,EAAG,qBAClBhB,EAAK0E,gBAAgBsC,WAE7B/I,MAAK,SAAAgJ,GAGJ,OADAlJ,QAAQC,IAAI,iCAAiCiJ,GACzCA,EACKjH,EAAK0E,gBAAgBwC,WAGrBlH,EAAK0E,gBAAgBsC,QAAQ/I,MAAK,WAAM,MAAA,cAGlDA,MAAK,SAAAkJ,GACJ,IAAMzB,EAAczE,KAAK0E,MAAMC,KAAKuB,EAAYtB,MAAM,KAAK,KAC3D9H,QAAQC,IAAI,oBAAoBiD,KAAKC,UAAUwE,IAC/C,IAAI0B,EACF9B,aAAaC,QAAQf,KACpBvD,KAAK0E,MAAML,aAAaC,QAAQf,KACnC,GAAI4C,EAAkB,CAEpB,GAAIA,EAAiBhM,OAAOI,QAAUkK,EAAmB,MAIvD,OAFA1F,EAAKyD,iBACL1F,QAAQC,IAAI,8DACLoJ,EAEPrJ,QAAQC,IAAI,oDACZsH,aAAa+B,WAAW7C,IAI5B,OADAzG,QAAQC,IAAI,8BACLgC,EAAK4E,mBAAmBjB,uBAAuBrD,eAEvDrC,MAAK,SAAAkH,GAYJ,OATApH,QAAQC,IAAI,kCAEZgC,EAAKmF,YAAcA,EACnBnF,EAAKsH,cAAgB,IAAIvH,EAAAA,cAA0B,GACnDC,EAAKuH,mBAAmBvH,EAAKmF,YAAYlI,QACzC+C,EAAK4E,mBAAmBjC,mBAAmB6E,WAAU,SAAAvK,GAAU,OAAA+C,EAAKuH,mBAAmBtK,MACvF+C,EAAKyH,0BAA0BzH,EAAKmF,aACpCG,aAAaoC,QAAQlD,GAAsBvD,KAAKC,UAAUiE,IAC1DpH,QAAQC,IAAI,gCACL,KAER+C,OAAM,SAAAC,GAEL,MADAjD,QAAQC,IAAI,YAAYgD,EAAG,YAAYC,KAAKC,UAAUF,IAChDA,MAILyD,EAAA5H,UAAA8K,MAAA,WAAA,IAAA3H,EAAA9E,KACL6C,QAAQC,IAAI,aAEZ,IAAIqH,EAAQC,aAAaC,QAAQhB,IAC7BiB,EAAUF,aAAaC,QAAQjB,IAC/BmB,EAAeH,aAAaC,QAAQlB,IACpCgB,IAEoB,IADFpE,KAAK0E,MAAMC,KAAKH,EAAaI,MAAM,KAAK,KAC5CC,KAAa,IAAIE,MAAOC,YAEtClI,QAAQC,IAAI,yBACZqH,OAAQa,EACRT,OAAeS,EACfV,OAAUU,EACVhL,KAAKkK,iCAITlK,KAAKiL,qBAGL,IAAIC,EAAoC,CACtCrE,IAAK7G,KAAKyJ,cAAclD,YAAY0C,IACpCkC,SACEnL,KAAKyJ,cAAclD,YAAY2C,KAAkClJ,KAAKyJ,cAAclD,YAAY,SAClG6E,MAAOpL,KAAKyJ,cAAclD,YAAYwC,KAGnCmC,EAASC,UAAaD,EAASE,OAAUF,EAASrE,MACrDqE,EAAW,0BAGb,IAEMG,EAA6B,CACjCC,0BAA0B,EAC1BjG,OAAQ6F,EACRK,YAAa,CAEXC,OAAQ,YACRC,kBAAkB,EAClBC,0BATmG,SAA1E1L,KAAKyJ,cAAclD,YAAYyC,IASNhJ,KAAK2L,uBAAoBX,EAC3EV,QAAOA,EACPC,aAAYA,EACZJ,MAAKA,GAEPyB,yBAAyB,EACzBC,mBAAoB,CAAC,YAKvB,OAFAhJ,QAAQC,IAAI,gBAAgBiD,KAAKC,UAAUqF,EAAW,KAAM,IAG1DrL,KAAKwJ,gBACFxH,KAAKqJ,GACLxF,OAAM,SAAAC,GAEL,OADAjD,QAAQC,IAAI,UAAUgD,EAAG,qBAClBhB,EAAK0E,gBAAgBsC,WAE7B/I,MAAK,SAAA2J,GAEJ,OADA7J,QAAQC,IAAI,iBAAiB4J,GACtB5H,EAAK0E,gBAAgBwC,cAE7BjJ,MAAK,SAAAkJ,GACJ,GAAIA,EAAa,CACf,IAAMzB,EAAczE,KAAK0E,MAAMC,KAAKuB,EAAYtB,MAAM,KAAK,KAC3D9H,QAAQC,IAAI,oBACZ,IAAIoJ,EACJ,GAAKA,EAAmB9B,aAAaC,QAAQf,IAAwB,CAGnE,GAFAzG,QAAQC,IAAI,gCAERoJ,EAAwB,QAAM1B,EAAmB,MAGnD,OADA1F,EAAKyD,iBACExC,KAAK0E,MAAMyB,GAElBrJ,QAAQC,IAAI,oCACZsH,aAAa+B,WAAW7C,IAI5B,OADAzG,QAAQC,IAAI,8BACLgC,EAAK4E,mBAAmBjB,uBAAuBrD,YAEtDvC,QAAQC,IAAI,qBAUf+C,OAAM,SAAAC,GAEL,MADAjD,QAAQC,IAAI,YAAYgD,GAClBA,KAEP/C,MAAK,SAAAkH,GAYJ,OATApH,QAAQC,IAAI,4BAEZgC,EAAKmF,YAAcA,EACnBnF,EAAKsH,cAAgB,IAAIvH,EAAAA,cAA0B,GACnDC,EAAKuH,mBAAmBvH,EAAKmF,YAAYlI,QACzC+C,EAAK4E,mBAAmBjC,mBAAmB6E,WAAU,SAAAvK,GAAU,OAAA+C,EAAKuH,mBAAmBtK,MACvF+C,EAAKyH,0BAA0BzH,EAAKmF,aACpCG,aAAaoC,QAAQlD,GAAsBvD,KAAKC,UAAUiE,IAC1DpH,QAAQC,IAAI,+BACL,MAKPyG,EAAA5H,UAAAsJ,mBAAA,WAAA,IAAAnG,EAAA9E,KACNA,KAAKwJ,gBAAgBmD,gBAAgBL,WAAU,SAAAM,GAOzC9H,EAAK0E,gBAAgBqD,sBAAsB1C,MAC7CC,aAAaoC,QAAQnD,GAAavE,EAAK0E,gBAAgBqD,sBAAsB1C,OAE7EC,aAAa+B,WAAW9C,IAEtBvE,EAAK0E,gBAAgBqD,sBAAsBvC,QAC7CF,aAAaoC,QAAQpD,GAAgBtE,EAAK0E,gBAAgBqD,sBAAsBvC,SAEhFF,aAAa+B,WAAW/C,IAEtBtE,EAAK0E,gBAAgBqD,sBAAsBtC,aAC7CH,aAAaoC,QAAQrD,GAAqBrE,EAAK0E,gBAAgBqD,sBAAsBtC,cAErFH,aAAa+B,WAAWhD,IAEtByD,EAAGE,OAASC,EAAAA,kBAAkBC,eAChCnK,QAAQC,IAAI,0BACZgC,EAAKoF,+BACLpF,EAAK6E,OAAOsD,cAAc,UAKxB1D,EAAA5H,UAAAuI,6BAAA,WACNE,aAAa+B,WAAW/C,IACxBgB,aAAa+B,WAAW9C,IACxBe,aAAa+B,WAAWhD,KAGlBI,EAAA5H,UAAAgK,gBAAA,WACN,IAAIuB,EAAcC,SAASC,qBAAqB,QAAQ,GAAGC,KAI3D,MAHoB,MAAhBH,IACFA,EAAc,IAENA,EAAW,iCAGvB3D,EAAA5H,UAAAc,QAAA,SAAQpB,GACN,GAAoB,iBAATA,EAAmB,CAC5B,IAAMiM,EAAajM,EACnB,OAAOrB,KAAK4J,KAAK3I,MAAMsM,KAAI,SAAAtH,GAAK,OAAAA,EAAEuH,iBAAexD,SAASsD,EAAWE,eAErE,OACExN,KAAK4J,KAAK3I,MACPsM,KAAI,SAAAtH,GAAK,OAAAA,EAAEuH,iBACXrH,QAAO,SAAAsH,GAAQ,OAAApM,EAAKkM,KAAI,SAAAtH,GAAK,OAAAA,EAAEuH,iBAAexD,SAASyD,EAAKD,kBAAgBE,OAAS,GAK9FnE,EAAA5H,UAAAe,SAAA,WACE,OAAO1C,KAAK4J,KAAK3I,OAGnBsI,EAAA5H,UAAA4G,eAAA,WAAA,IAAAzD,EAAA9E,KACEA,KAAK0J,mBAAmBjB,uBAAuB6D,WAAU,SAAAqB,GACvD7I,EAAKmF,YAAc0D,EACnBvD,aAAaoC,QAAQlD,GAAsBvD,KAAKC,UAAU2H,IAC1D7I,EAAKyH,0BAA0BzH,EAAKmF,iBAIxCV,EAAA5H,UAAAiM,gBAAA,WACE,OAAO5N,KAAK0J,mBAAmBlC,kBAGzB+B,EAAA5H,UAAA0K,mBAAA,SAAmBwB,IACrBA,MAAAA,OAAU,EAAVA,EAAYC,kBAAkBD,MAAAA,OAAU,EAAVA,EAAYE,qBAC5C/N,KAAKoM,cAAc1F,KAAK,CACtBoH,eAAgB,aAAeD,EAAWC,eAC1CC,oBAAqB,aAAeF,EAAWE,sBAGjD/N,KAAKoM,cAAc1F,KAAK,OAI5B6C,EAAA5H,UAAAE,UAAA,WACE,OAAO7B,KAAKoM,cAAc4B,gBAGpBzE,EAAA5H,UAAA4K,0BAAA,SAA0BtC,GAA1B,IAAAnF,EAAA9E,KACNA,KAAK4J,KAAO,CACV3I,MAAOgJ,EAAYhJ,MACnB4I,OAAQI,EAAYnJ,GACpBmN,YAAahE,EAAYnJ,GACzBoN,WAAYjE,EAAY/J,OAAOC,YAC/B2J,WAAUtE,OAAAC,OAAA,GAAOwE,EAAY/J,QAC7B6J,UAAW,IAET/J,KAAKiK,YAAY/I,aACnBlB,KAAKiK,YAAY/I,YAAYiN,SAAQ,SAAAC,GACnCA,EAAEhN,gBAAgB+M,SAAQ,SAAAE,GACxBA,EAAE/M,YAAY6M,SAAQ,SAAAG,GACpBxJ,EAAK8E,KAAKG,UAAUwE,KAAKD,EAAE5M,yCArWtCuB,EAAAA,uDAtBQuL,EAAAA,uBAEAhK,SAKAoC,SACA6H,EAAAA,cCyBGC,MCbZ,kCAXCxL,EAAAA,SAAQC,KAAA,CAAC,CACRI,aAAc,GACdH,QAAS,CAACC,EAAAA,aAAcsL,EAAAA,uBACxBrL,QAAS,CAACqL,EAAAA,uBACVnL,UAAW,CACT,CACEC,QAAS3D,EACT4D,SAAU6F,UDiBJmF,GAAAA,EAAAA,YAAAA,EAAAA,UAAS,KACnB,OAAA,SACAA,GAAA,SAAA,6BEzBA,SAAAE,IAJQ5O,KAAA6O,YAAc,IAAIC,EAAAA,QAE1B9O,KAAA+O,aAAe/O,KAAK6O,YAAYb,sBAIhCY,EAAAjN,UAAAqN,SAAA,SAASC,GACPjP,KAAK6O,YAAYnI,KAAKuI,4HATzBhM,EAAAA,WAAUE,KAAA,CAAC,CAAEmB,WAAY,oECA1B,SAAA4K,YAGSA,EAAAvN,UAAAwN,4BAAA,WACL,OAAOnP,KAAKoP,0BAEPF,EAAAvN,UAAA0N,4BAAA,SAA4BC,GACjCtP,KAAKoP,yBAA2BE,2HAVnCrM,EAAAA,WAAUE,KAAA,CAAC,CACVmB,WAAY,6BCcZ,SAAAiL,EACUC,EACAC,EAEAC,EACsB9M,GAJtB5C,KAAAwP,SAAAA,EACAxP,KAAAyP,GAAAA,EAEAzP,KAAA0P,cAAAA,EACsB1P,KAAA4C,YAAAA,SAGhC2M,EAAA5N,UAAAgO,SAAA,WACE9M,QAAQC,IAAI,qBAAqB9C,KAAK4P,YACjC5P,KAAK4C,YAAYR,cAAcpC,KAAK4P,cACvC/M,QAAQC,IAAI,+BAA+B9C,KAAK4P,YAChD5P,KAAKwP,SAASK,aAAa7P,KAAKyP,GAAGK,cAAe,WAAY,YAC9D9P,KAAK0P,cAAcK,oCAjBxBC,EAAAA,UAAS7M,KAAA,CAAC,CAAE8M,SAAU,2DAVrBC,EAAAA,iBACAC,EAAAA,kBAEAC,EAAAA,iDAgBGzJ,EAAAA,OAAMxD,KAAA,CAACrD,6CAPTuQ,EAAAA,2BACAA,EAAAA,2BCWD,SAAAC,EAAoBC,GAAAvQ,KAAAuQ,kBAAAA,EAJpBvQ,KAAAwQ,aAAkC,IAAIC,EAAAA,aAEtCzQ,KAAA0Q,mBAAwC,IAAID,EAAAA,oBAI5CH,EAAA3O,UAAAgO,SAAA,WAAA,IAAA7K,EAAA9E,KACEA,KAAK2Q,aAAe3Q,KAAKuQ,kBAAkBxB,aAAazC,WAAU,SAAAsE,GAChE9L,EAAKmK,MAAQ2B,KAGf5Q,KAAK6Q,KAAO,CAAEC,KAAM,aAAcC,WAAY,MAGhDT,EAAA3O,UAAAqP,YAAA,WACMhR,KAAK2Q,cACP3Q,KAAK2Q,aAAaM,eAItBX,EAAA3O,UAAAuP,qBAAA,SAAqBC,GACnBnR,KAAK0Q,mBAAmBU,KAAKD,IAG/Bb,EAAA3O,UAAA0P,eAAA,SAAeF,GACbnR,KAAKwQ,aAAaY,KAAKD,8BA1C1BG,EAAAA,UAASnO,KAAA,CAAC,CACT8M,SAAU,gBACVsB,SAAA,y5DANO3C,mDAgBNyB,EAAAA,gCAEAA,EAAAA,4BAEAmB,EAAAA,mCAEAA,EAAAA,4BCZD,SAAAC,EAAoBhC,GAAAzP,KAAAyP,GAAAA,EAOXzP,KAAA0R,aAAc,EAEb1R,KAAA2R,UAA+B,IAAIlB,EAAAA,aACnCzQ,KAAA4R,SAA8B,IAAInB,EAAAA,aAT1C5N,QAAQC,IACN,qCAAqC2M,EAAGK,cAAc+B,WAExDpC,EAAGK,cAAc+B,UAAUC,IAAI,sBAQjCL,EAAA9P,UAAAoQ,OAAA,WACE/R,KAAK0R,YAAc1R,KAAKgS,OAAShS,KAAKiS,QAGxCR,EAAA9P,UAAAqQ,KAAA,WACEhS,KAAK0R,aAAc,GAGrBD,EAAA9P,UAAAsQ,KAAA,WACEjS,KAAK0R,aAAc,6BAzBtB1B,EAAAA,UAAS7M,KAAA,CAAC,CACT8M,SAAU,gEAPVE,EAAAA,oDAiBCE,EAAAA,yBAEAmB,EAAAA,yBACAA,EAAAA,iBCkCH,kCArDCF,EAAAA,UAASnO,KAAA,CAAC,CACT8M,SAAU,YAuBVsB,SAAU,iuBArBR,2cAmDDlB,EAAAA,2BCwBD,SAAA6B,IAJSlS,KAAAmS,SAAU,EAETnS,KAAAoS,OAAS,IAAI3B,EAAAA,oBAIvByB,EAAAvQ,UAAAgO,SAAA,aAEOuC,EAAAvQ,UAAA0Q,KAAA,WACLrS,KAAKoS,OAAOhB,MAAK,IAEZc,EAAAvQ,UAAA2Q,MAAA,SAAMC,GACXvS,KAAKoS,OAAOhB,MAAK,8BArFpBE,EAAAA,UAASnO,KAAA,CAAC,CACT8M,SAAU,iBACVsB,SAAU,g/DAuETlB,EAAAA,wBACAA,EAAAA,sBACAmB,EAAAA,iBCvED,WADOxR,KAAAwS,UAAY,IAAIC,EAAAA,iBAAgB,uHAJxCxP,EAAAA,WAAUE,KAAA,CAAC,CACVmB,WAAY,oEC8EZ,SAAAoO,EAAoBC,GAApB,IAAA7N,EAAA9E,KAAoBA,KAAA2S,cAAAA,EAClB3S,KAAK2S,cAAcH,UAAUlG,WAAU,SAAAsG,GACrC9N,EAAK+N,QAAUD,YAInBF,EAAA/Q,UAAAgO,SAAA,uCArFD2B,EAAAA,UAASnO,KAAA,CAAC,CACT8M,SAAU,0BACVsB,SAAU,sNAQR,g8CAZKuB,wBC2EP,SAAAC,EACgCnQ,EACtB+G,EACAF,GAFsBzJ,KAAA4C,YAAAA,EACtB5C,KAAA2J,OAAAA,EACA3J,KAAAyJ,cAAAA,EAhCVzJ,KAAAgT,iBAAmBpK,GAQnB5I,KAAAiT,gBAAsC,IAAIxC,EAAAA,oBAE1CjL,OAAA0N,eAAIH,EAAApR,UAAA,cAAW,KAAf,iBACQzB,EAAyB,QAAnBiT,EAAGnT,KAAKiK,mBAAW,IAAAkJ,OAAA,EAAAA,EAAEjT,OACjC,OAAIA,MAAAA,OAAM,EAANA,EAAQC,aACHD,EAAOC,aACLD,MAAAA,OAAM,EAANA,EAAQE,YAAaF,EAAOG,SAC9BH,EAAOE,UAAY,IAAMF,EAAOG,SAEhCL,KAAK4C,YAAYhB,cAAciI,wCAI1CrE,OAAA0N,eAAIH,EAAApR,UAAA,UAAO,KAAX,WACE,OAAO3B,KAAKyJ,cAAcvF,gBAAgBD,yCAG5CuB,OAAA0N,eAAIH,EAAApR,UAAA,WAAQ,KAAZ,WACE,OAAQ3B,KAAKoT,iBAA0B,KAAP,sCASlCL,EAAApR,UAAAgO,SAAA,WAAA,IAAA7K,EAAA9E,KACEA,KAAKiK,YAAcjK,KAAK4C,YAAYhB,cACpC5B,KAAK4C,YACFf,YACAyK,WAAU,SAAAvK,GAAU,OAAC+C,EAAKuO,WAAatR,MAG5CgR,EAAApR,UAAA2R,QAAA,SAAQf,GACNvS,KAAKiT,gBAAgB7B,KAAK,MAC1BmB,EAAMgB,kBAGRR,EAAApR,UAAAW,OAAA,SAAOiQ,GACLA,EAAMgB,iBACNvT,KAAK4C,YAAYN,oCAhFpBgP,EAAAA,UAASnO,KAAA,CAAC,CACT8M,SAAU,oBACVsB,SAAA,64EAEAiC,WAAY,CACVC,EAAAA,QAAQ,OAAQ,CACdC,EAAAA,MAAM,iBAAkBC,EAAAA,MAAM,CAC5BC,OAAQ,MACRC,cAAe,MACfC,SAAU,YAEZJ,EAAAA,MAAM,kBAAmBC,EAAAA,MAAM,CAC7BC,OAAQ,IACRE,SAAU,aAEZJ,EAAAA,MAAM,UAAWC,EAAAA,MAAM,CACrBI,QAAS,EACTC,UAAW,OAEbN,EAAAA,MAAM,SAAUC,EAAAA,MAAM,CACpBI,QAAS,EACTC,UAAW,OAEbC,EAAAA,WAAW,oCAAqCC,EAAAA,QAAQ,yCACxDD,EAAAA,WAAW,oCAAqCC,EAAAA,QAAQ,yCACxDD,EAAAA,WAAW,oBAAqBC,EAAAA,QAAQ,eACxCD,EAAAA,WAAW,oBAAqB,CAACN,EAAAA,MAAM,CAACQ,UAAW,gBAAiBD,EAAAA,QAAQ,4YAmC7EvN,EAAAA,OAAMxD,KAAA,CAACrD,YAhEH2O,EAAAA,cACAjK,gDAqCN6L,EAAAA,+BAGAmB,EAAAA,4BC7CD,SAAA4C,YAEAA,EAAAzS,UAAAgO,SAAA,uCATD2B,EAAAA,UAASnO,KAAA,CAAC,CACT8M,SAAU,aACVsB,SAAA,yiGAEA8C,gBAAiBC,EAAAA,wBAAwBC,2GCmCzC,SAAAC,EACSnP,EACAoP,GADAzU,KAAAqF,OAAAA,EACArF,KAAAyU,IAAAA,EAEPzU,KAAK0U,OAASrP,EAAOM,KAAKgP,gBAG5BH,EAAA7S,UAAAgO,SAAA,aAEA6E,EAAA7S,UAAA2Q,MAAA,WACEtS,KAAKyU,IAAInC,mCAhDZhB,EAAAA,UAASnO,KAAA,CAAC,CACToO,SAAU,ujBAsBR,0PAzBKqD,EAAAA,2BAAqBC,EAAAA,sCC8C5B,SAAAC,YAEAA,EAAAnT,UAAAgO,SAAA,uCA/CD2B,EAAAA,UAASnO,KAAA,CAAC,CACT8M,SAAU,kBACVsB,SAAU,2kBAmBR,0ZAoBDlB,EAAAA,2BACAA,EAAAA,4BACAA,EAAAA,2BC+BD,SAAA0E,EACgCnS,EACtByC,EACA2P,EACArL,GAHsB3J,KAAA4C,YAAAA,EACtB5C,KAAAqF,OAAAA,EACArF,KAAAgV,aAAAA,EACAhV,KAAA2J,OAAAA,EArDV3J,KAAAgT,iBAAmBpK,GAgBnB5I,KAAAiV,gBAAqC,IAAIxE,EAAAA,aAEzCzQ,KAAAkV,gBAAqC,IAAIzE,EAAAA,aAEzCzQ,KAAAwQ,aAAkC,IAAIC,EAAAA,aAEtCzQ,KAAA0Q,mBAAwC,IAAID,EAAAA,aAE5CzQ,KAAAmV,aAAkC,IAAI1E,EAAAA,aAEtCzQ,KAAAoV,mBAAwC,IAAI3E,EAAAA,aAE5CzQ,KAAAqV,kBAAuC,IAAI5E,EAAAA,aAE3CzQ,KAAAsV,YAAiC,IAAI7E,EAAAA,aAerCzQ,KAAAuV,WAAa,IAEbvV,KAAAwV,aAAe,cASfT,EAAApT,UAAAgO,SAAA,WACE3P,KAAKiK,YAAcjK,KAAK4C,YAAYhB,cACpC5B,KAAKqT,WAAarT,KAAK4C,YAAYf,YACnC7B,KAAKyV,gBAAkBzV,KAAK4C,YAAYhB,cAAc1B,OAAOC,YAC7DH,KAAK0V,UAAY1V,KAAKqF,OAAOkB,YAAYuC,KAAoC,0BAG/EiM,EAAApT,UAAAgU,UAAA,WACE9S,QAAQC,IAAI,cACZ9C,KAAK4V,cAAgB5V,KAAK4V,cAG5Bb,EAAApT,UAAAkU,WAAA,SAAWC,EAAcvD,GACvBA,EAAMgB,iBACNuC,EAAO9V,KAAKqF,OAAOnB,gBAAgBD,QAAU6R,EAC7CC,SAAStQ,OAAOqQ,IAGlBf,EAAApT,UAAAW,OAAA,SAAOiQ,GACLA,EAAMgB,iBACNvT,KAAK4C,YAAYN,UAGnByS,EAAApT,UAAAqU,kBAAA,SAAkB/P,GAChBjG,KAAKiV,gBAAgB7D,KAAKnL,IAE5B8O,EAAApT,UAAAsU,kBAAA,SAAkBhQ,EAAUiQ,GAC1BlW,KAAKkV,gBAAgB9D,KAAK,CAAEmB,MAAOtM,EAAGiQ,IAAGA,KAE3CnB,EAAApT,UAAAuP,qBAAA,SAAqBjL,GACnBjG,KAAK0Q,mBAAmBU,KAAKnL,IAE/B8O,EAAApT,UAAA0P,eAAA,SAAepL,GACbjG,KAAKwQ,aAAaY,KAAKnL,IAEzB8O,EAAApT,UAAAwU,eAAA,SAAelQ,GACbjG,KAAKmV,aAAa/D,KAAKnL,IAEzB8O,EAAApT,UAAAyU,kBAAA,SAAkBnQ,GAChBjG,KAAKoV,mBAAmBhE,KAAKnL,IAE/B8O,EAAApT,UAAA0U,oBAAA,SAAoBpQ,GAClBjG,KAAKqV,kBAAkBjE,KAAKnL,IAG9B8O,EAAApT,UAAA2U,0BAAA,SAA0BC,GACxBvW,KAAKwW,oBAAsBxW,KAAKwW,mBAChCD,EAAOhD,kBAGTwB,EAAApT,UAAA8U,cAAA,SAAcxQ,EAAUyQ,GACtB1W,KAAKsV,YAAYlE,KAAK,CAAEmB,MAAOtM,EAAGyQ,IAAGA,+BA1HxCpF,EAAAA,UAASnO,KAAA,CAAC,CACT8M,SAAU,YACVsB,SAAA,ypPAEAiC,WAAY,CACVC,EAAAA,QAAQ,6BAA8B,CACpCQ,EAAAA,WAAW,SAAU,CACnBN,EAAAA,MAAM,CAAEI,QAAS,EAAGI,UAAW,gBAC/BD,EAAAA,QAAQ,kCAAmCP,EAAAA,MAAM,CAAEI,QAAS,EAAGI,UAAW,SAE5EF,EAAAA,WAAW,SAAU,CAACC,EAAAA,QAAQ,aAAcP,EAAAA,MAAM,CAAEI,QAAS,waAuD9DpN,EAAAA,OAAMxD,KAAA,CAACrD,YAtEH0E,SACA0K,UACAT,EAAAA,yDA0BNkI,EAAAA,UAASxT,KAAA,CAAC,wCAKVkN,EAAAA,+BAEAmB,EAAAA,gCAEAA,EAAAA,6BAEAA,EAAAA,mCAEAA,EAAAA,6BAEAA,EAAAA,mCAEAA,EAAAA,kCAEAA,EAAAA,4BAEAA,EAAAA,4BAEAnB,EAAAA,4BAEAA,EAAAA,gCAEAA,EAAAA,kCAEAA,EAAAA,gCAEAA,EAAAA,sBAEAA,EAAAA,0BAGAA,EAAAA,4BAEAA,EAAAA,2BCtEH,SAAAuG,IAKY5W,KAAA6W,WAAa,IAAI/H,EAAAA,QACjB9O,KAAA8W,YAAc,IAAIhI,EAAAA,QAE1B9O,KAAA+W,YAAc/W,KAAK6W,WAAW7I,eAC9BhO,KAAAgX,aAAehX,KAAK8W,YAAY9I,sBAEhC4I,EAAAjV,UAAAsV,kBAAA,SAAkBvV,GACd1B,KAAK6W,WAAWnQ,KAAKhF,IAGzBkV,EAAAjV,UAAAuV,MAAA,WACIlX,KAAK8W,YAAYpQ,gIAhBxBzD,EAAAA,WAAUE,KAAA,CAAC,CACRmB,WAAY,6BC0Cd,SAAA6S,IANAnX,KAAAoX,iBAA0C,IAAI3G,EAAAA,aAE9CzQ,KAAAqX,uBAAgD,IAAI5G,EAAAA,oBAZpDjL,OAAA0N,eACIiE,EAAAxV,UAAA,aAAU,KADd,SACesN,GACbjP,KAAKsX,aAAe,CAClBC,MAAO,OACPzG,KAAM,OACN7B,MAAOA,8DA3BZqC,EAAAA,UAASnO,KAAA,CAAC,CACT8M,SAAU,UACVsB,SAAA,qgBAGClB,EAAAA,wBAEAA,EAAAA,4BAEAA,EAAAA,wBAEAA,EAAAA,yBAEAA,EAAAA,sBAEAA,EAAAA,+BAEAA,EAAAA,gCAEAA,EAAAA,0BAGAA,EAAAA,gCASAmB,EAAAA,uCAEAA,EAAAA,4BA+GD,SAAAgG,EAAoBC,EAAkC9N,GAAlC3J,KAAAyX,YAAAA,EAAkCzX,KAAA2J,OAAAA,EAZtD3J,KAAAoX,iBAA0C,IAAI3G,EAAAA,aAE9CzQ,KAAAqX,uBAAgD,IAAI5G,EAAAA,aAEpDzQ,KAAA0X,QAAS,SAUTF,EAAA7V,UAAAgO,SAAA,WAAA,IAAA7K,EAAA9E,KACEA,KAAK2X,uBAAyB3X,KAAKyX,YAAYV,YAAYzK,WAAU,SAAA5K,GAE/DoD,EAAK4S,QAAU5S,EAAKpD,MAAQA,GAAiC,IAA1BA,EAAIkW,QAAQ9S,EAAKpD,OACtDoD,EAAK4S,QAAS,MAIlB1X,KAAK6X,sBAAwB7X,KAAKyX,YAAYT,aAAa1K,WAAU,WACnExH,EAAK4S,QAAS,KAIhB1X,KAAK2J,OAAOmO,OAAOzQ,KAAKlB,EAAAA,QAAO,SAAAoM,GAAS,OAAAA,aAAiBwF,EAAAA,kBACpDzL,WAAU,SAAA0L,GACLlT,EAAKmT,OACPnT,EAAK4S,QAAS,EAEV5S,EAAK2I,KAAKsD,WACZjM,EAAKoT,6BAELpT,EAAK4S,QAAS,MAKnB1X,KAAKmY,cAAgBnY,KAAKiY,SAAWjY,KAAKyN,KAAKsD,YAClD/Q,KAAKkY,6BAGPlY,KAAK0B,IAAM1B,KAAKoY,UAAYpY,KAAKoY,UAAY,IAAMpY,KAAKqY,MAAQC,OAAOtY,KAAKqY,QAG9Eb,EAAA7V,UAAAqP,YAAA,WACMhR,KAAK2X,wBACP3X,KAAK2X,uBAAuB1G,cAG1BjR,KAAK6X,uBACP7X,KAAK6X,sBAAsB5G,eAI/BuG,EAAA7V,UAAAuW,2BAAA,WACElY,KAAK0X,OAAS1X,KAAK2J,OAAO4O,SAASvY,KAAKyN,KAAKsD,WAAW,IAAK/Q,KAAKyN,KAAKwB,QAIzEuI,EAAA7V,UAAA6W,UAAA,SAAUjG,GAER,GAAIvS,KAAKyN,KAAKgL,SAEZ,OADAlG,EAAMgB,kBACC,EAGTvT,KAAKyX,YAAYR,kBAAkBjX,KAAK0B,KAGpC1B,KAAKyN,KAAKiL,SACZ1Y,KAAKyN,KAAKiL,QAAQ,CAAEC,cAAepG,EAAO9E,KAAMzN,KAAKyN,OAGnDzN,KAAKyN,KAAKwB,MACZjP,KAAK0X,QAAU1X,KAAK0X,QAEpB1X,KAAK0X,QAAS,GAEV1X,KAAKmY,cAAgBnY,KAAKiY,UAC5BjY,KAAKyX,YAAYP,QACjBlX,KAAK4Y,iBAAkB,GAGpB5Y,KAAK6Y,UACR7Y,KAAKoX,iBAAiBhG,MAAK,GAG7BpR,KAAKqX,uBAAuBjG,MAAK,KAI/BpR,KAAKyN,KAAKwB,QAAWjP,KAAKyN,KAAK5G,MAAQ7G,KAAKyN,KAAKsD,aAKnDwB,EAAMgB,kBAIViE,EAAA7V,UAAAmX,aAAA,WAEI9Y,KAAK+Y,MACL/Y,KAAK4Y,kBACJ5Y,KAAKmY,cAAgBnY,KAAKiY,SAC3BjY,KAAKgZ,YAELhZ,KAAKyX,YAAYR,kBAAkBjX,KAAK0B,KACxC1B,KAAK0X,QAAS,8BA1MnBpG,EAAAA,UAASnO,KAAA,CAAC,CAET8M,SAAU,eAEVsB,SAAU,kxDA2BV0H,KAAM,CACJC,+BAAgC,iBAChCC,0BAA2B,YAE7B3F,WAAY,CACVC,EAAAA,QAAQ,WAAY,CAClBC,EAAAA,MAAM,OAAQC,EAAAA,MAAM,CAClBC,OAAQ,MACRwF,QAAS,SAEX1F,EAAAA,MAAM,iBAAkBC,EAAAA,MAAM,CAC5BC,OAAQ,MACRwF,QAAS,SAEX1F,EAAAA,MAAM,kBAAmBC,EAAAA,MAAM,CAC7BC,OAAQ,OAEVF,EAAAA,MAAM,UAAWC,EAAAA,MAAM,CACrBC,OAAQ,OAEVF,EAAAA,MAAM,SAAUC,EAAAA,MAAM,CACpBC,OAAQ,MACRwF,QAAS,SAEXnF,EAAAA,WAAW,oCAAqCC,EAAAA,QAAQ,yCACxDD,EAAAA,WAAW,oCAAqCC,EAAAA,QAAQ,yCACxDD,EAAAA,WAAW,mDACPC,EAAAA,QAAQ,0FAxGV0C,UAEenI,EAAAA,yCA2GpB4B,EAAAA,oBAEAA,EAAAA,uBAEAA,EAAAA,qBAEAA,EAAAA,yBAEAA,EAAAA,0BAEAA,EAAAA,wBAEAA,EAAAA,4BAEAA,EAAAA,wBAEAA,EAAAA,yBAEAA,EAAAA,sBAEAA,EAAAA,+BAEAA,EAAAA,gCAEAA,EAAAA,gCAGAmB,EAAAA,uCAEAA,EAAAA,4BC3GD,SAAA6H,EAAoBC,GAAAtZ,KAAAsZ,YAAAA,EAJpBtZ,KAAA2R,WAAY,EAKV3R,KAAK4C,YAAc5C,KAAKsZ,YAAYlV,IAAItE,UAG1CuZ,EAAA1X,UAAAgO,SAAA,aAEA0J,EAAA1X,UAAA4X,YAAA,WACEC,MAAM,mBAGRH,EAAA1X,UAAA8X,UAAA,WACE,OAAOzZ,KAAK4P,YACR5P,KAAK4C,YAAYR,cAAcpC,KAAK4P,aAI1CyJ,EAAA1X,UAAA+X,SAAA,WACE1Z,KAAK2Z,aAAa7J,cAAc+B,UAAUC,IAAI,UAC9C9R,KAAK2R,WAAY,GAEnB0H,EAAA1X,UAAAiY,OAAA,WACE5Z,KAAK2Z,aAAa7J,cAAc+B,UAAUgI,OAAO,UACjD7Z,KAAK2R,WAAY,6BAzCpBL,EAAAA,UAASnO,KAAA,CAAC,CACT8M,SAAU,iBACVsB,SAAA,unDARAuI,EAAAA,6CAYCzJ,EAAAA,0BACAA,EAAAA,6BACAA,EAAAA,2BACAA,EAAAA,4BACAA,EAAAA,4BAEA0J,EAAAA,aAAY5W,KAAA,CAACsO,GAAsB,CAAEuI,KAAM7J,EAAAA;;;;;;;;;;;;;;;ACX9C,IAAI8J,GAAgB,SAASC,EAAGC,GAI5B,OAHAF,GAAgBzU,OAAO4U,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI7L,KAAK6L,EAAO3U,OAAO7D,UAAU4Y,eAAeC,KAAKL,EAAG7L,KAAI4L,EAAE5L,GAAK6L,EAAE7L,MAC3E4L,EAAGC,aAGZM,GAAUP,EAAGC,GACzB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIO,UAAU,uBAAyBpC,OAAO6B,GAAK,iCAE7D,SAASQ,IAAO3a,KAAK4a,YAAcV,EADnCD,GAAcC,EAAGC,GAEjBD,EAAEvY,UAAkB,OAANwY,EAAa3U,OAAOqV,OAAOV,IAAMQ,EAAGhZ,UAAYwY,EAAExY,UAAW,IAAIgZ,GA+EtDnV,OAAOqV,gBAwBpBC,GAAOC,EAAGC,GACtB,IAAI5M,EAAsB,mBAAX6M,QAAyBF,EAAEE,OAAOC,UACjD,IAAK9M,EAAG,OAAO2M,EACf,IAAmB1M,EAAYpI,EAA3BkV,EAAI/M,EAAEoM,KAAKO,GAAOK,EAAK,GAC3B,IACI,WAAc,IAANJ,GAAgBA,KAAM,MAAQ3M,EAAI8M,EAAEzU,QAAQ2U,MAAMD,EAAG7M,KAAKF,EAAEiN,OAExE,MAAOC,GAAStV,EAAI,CAAEsV,MAAOA,WAEzB,IACQlN,IAAMA,EAAEgN,OAASjN,EAAI+M,EAAU,SAAI/M,EAAEoM,KAAKW,WAExC,GAAIlV,EAAG,MAAMA,EAAEsV,OAE7B,OAAOH,WAIKI,KACZ,IAAK,IAAIJ,EAAK,GAAID,EAAI,EAAGA,EAAIM,UAAU/N,OAAQyN,IAC3CC,EAAKA,EAAGM,OAAOZ,GAAOW,UAAUN,KACpC,OAAOC,EAqDc5V,OAAOqV,yBC7L9B,SAAAc,EAAoB3X,GAAAhE,KAAAgE,WAAAA,EATHhE,KAAAiE,QAAkB,kCAElBjE,KAAA4b,YAAsC,CACrDC,QAAS,IAAIC,EAAAA,YAAY,CACvBC,eAAgB,mBAChBC,OAAQ,6BAMZL,EAAAha,UAAAsa,yBAAA,SACErS,EACAzI,EACA+a,EACAC,GAEA,YAFA,IAAAA,IAAAA,GAAA,GAEOnc,KAAKgE,WAAWoY,KAClBpc,KAAKiE,QAAO,mBACf,CACE9C,YAAWA,EACX+a,KAAIA,EACJtS,KAAIA,EACJuS,cAAaA,GAEfnc,KAAK4b,cAITD,EAAAha,UAAA0a,gBAAA,SAAgBvb,GACd,OAAOd,KAAKgE,WAAWI,IAClBpE,KAAKiE,QAAO,IAAInD,EACnBd,KAAK4b,cAITD,EAAAha,UAAA2a,kBAAA,SAAkB/K,GAChB,OAAOvR,KAAKgE,WAAWoY,KACrB,GAAGpc,KAAKiE,QACRsN,EACAvR,KAAK4b,cAITD,EAAAha,UAAA4a,eAAA,SACEzb,EACAyQ,GAEA,OAAOvR,KAAKgE,WAAW2D,IAClB3H,KAAKiE,QAAO,IAAInD,EACnByQ,EACAvR,KAAK4b,cAITD,EAAAha,UAAA6a,eAAA,SAAe1b,GACb,OAAOd,KAAKgE,WAAWmE,OAAmBnI,KAAKiE,QAAO,IAAInD,sJA1D7DmC,EAAAA,WAAUE,KAAA,CAAC,CAAEmB,WAAY,qDAJjBC,EAAAA,cCMT,IAAMN,GAAU,gDAOd,SAAAwY,EAAoBzY,GAAAhE,KAAAgE,WAAAA,EAHpBhE,KAAA4b,YAAc,CACZC,QAAS,IAAIC,EAAAA,YAAY,CAAEC,eAAgB,6BAI7CU,EAAA9a,UAAA+a,gBAAA,SACEC,EACAC,EACA9P,GAEA,YAFA,IAAAA,IAAAA,EAAA,QAEO9M,KAAKgE,WACTI,IAAmBH,GAAO,IAAI0Y,EAAK,aAAc,CAChD3E,OAAQ,CACN4E,WAAUA,KAGbvV,KAAKkG,EAAAA,KAAI,SAAAsP,GAAa,OAAAA,EAAU,QAGrCJ,EAAA9a,UAAAmb,sBAAA,SACEH,EACAI,EACAjQ,GAOA,YAPA,IAAAA,IAAAA,EAAA,QAEAjK,QAAQC,IACN,kBAAkBmB,GAAO,aAAa0Y,EAAK,IAAIK,mBAC7CD,IAGG/c,KAAKgE,WAAWoY,KAClBnY,GAAO,aAAa0Y,EAAK,IAAIK,mBAAmBD,GACnD,IAAIjQ,EAAI,IACR,CACE+O,QAAS,CACPE,eAAgB,sBAChBC,OAAQ,0BAMhBS,EAAA9a,UAAAsb,aAAA,SACEN,EACAO,GAEA,OAAIA,EAASpc,GACJd,KAAKgE,WAAWsE,MAClBrE,GAAO,IAAI0Y,EAAK,cAAcO,EAASpc,GAC1Coc,EACA,CACEC,QAAS,aAINnd,KAAKgE,WAAWoY,KAAQnY,GAAO,IAAI0Y,EAAK,aAAcO,EAAU,CACrEC,QAAS,cAKfV,EAAA9a,UAAAyb,mBAAA,SAAmBF,GACjB,OAAOld,KAAKgE,WAAWoY,KAAQnY,GAAO,YAAaiZ,EAAU,CAC3DrB,QAAS,CACPE,eAAgB,sBAChBC,OAAQ,uBAEVmB,QAAS,4BCzECE,GAAWC,GACzB,MAAO,kBAAmBA,+IDI3Bra,EAAAA,WAAUE,KAAA,CAAC,CAAEmB,WAAY,qDARjBC,EAAAA,cEET,kBAME,SAAAgZ,EAAoBC,GAAAxd,KAAAwd,cAAAA,EAClBxd,KAAKyd,eACHzd,KAAKwd,cAAcjX,YAAY,iCARP,6CAY5BgX,EAAA5b,UAAA+b,aAAA,SAAaC,GACX,OAAU3d,KAAKyd,eAAc,WAAWE,EAAK,IAAIA,EAAK,mJAXzD1a,EAAAA,WAAUE,KAAA,CAAC,CAAEmB,WAAY,qDAJjBE,uBCiBP,SAAAoZ,EAAoBnZ,EAA0BoZ,GAA1B7d,KAAAyE,KAAAA,EAA0BzE,KAAA6d,eAAAA,EANtC7d,KAAA8d,QAAU,oCAElB9d,KAAA4b,YAAc,CACZC,QAAS,IAAIC,EAAAA,YAAY,CAAEC,eAAgB,6BAK7C6B,EAAAjc,UAAAoc,aAAA,SAAarY,GACX,OAAO1F,KAAKyE,KACTL,IAAyBpE,KAAK8d,QAAO,IAAIpY,EAAYrB,EAAAA,aACrDgD,KAAK2W,EAAAA,WAAWhe,KAAKie,YAA8B,eAAgB,OAShEL,EAAAjc,UAAAsc,YAAA,SAAeC,EAAyBC,GAAxC,IAAArZ,EAAA9E,KACN,YADqB,IAAAke,IAAAA,EAAA,aACd,SAAC3C,GAQN,OANA1Y,QAAQ0Y,MAAMA,GAGdzW,EAAKhC,IAAOob,EAAS,YAAY3C,EAAM6C,QAAO,iBAAiBrY,KAAKC,UAAUmY,IAGvErc,EAAAA,GAAGqc,KAKNP,EAAAjc,UAAAmB,IAAA,SAAIsb,GACVvb,QAAQC,IAAIsb,mLAvCfnb,EAAAA,WAAUE,KAAA,CAAC,CACVmB,WAAY,qDARLC,EAAAA,kBAIA8Z,EAAAA,oCCGP,SAAAC,EAAoB7Z,GAAAzE,KAAAyE,KAAAA,EAFpBzE,KAAA6G,IAAM,uCAICyX,EAAA3c,UAAA4c,aAAA,SAAaC,GAClB,OAAOxe,KAAKyE,KAAK2X,KAAKpc,KAAK6G,IAAK2X,sJAPnCvb,EAAAA,WAAUE,KAAA,CAAC,CAAEmB,WAAY,qDAFjBC,EAAAA,kBCyCJka,iBC7BH,SAAAC,EAAoBja,GAAAzE,KAAAyE,KAAAA,EAFZzE,KAAAiE,QAAU,4CAIlBya,EAAA/c,UAAAgd,oBAAA,SAAoBC,EAAuBjC,GACzC,IAAMkC,EAA8B,CAClCC,UAAWF,EAAOG,MAClBC,YAAaJ,EAAOK,YACpBC,OAAQvC,EACRwC,eAAgBja,OAAO6Q,SAAS1I,MAGlC,OAAOrN,KAAKyE,KAAK2X,KAAKpc,KAAKiE,QAAS4a,sJAhBvC5b,EAAAA,WAAUE,KAAA,CAAC,CACVmB,WAAY,qDARLC,EAAAA,cD0CT,SAAKka,GACHA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,WAAA,GAAA,aAJF,CAAKA,KAAAA,GAAe,KAMpB,kBA6GE,SAAAW,EACSC,EACAC,EACC3V,EACA4V,EACAC,EACA3B,EACA4B,EACAC,EACAC,EACAC,EACAnI,EACAoI,EACApW,EACAqW,EACAC,EACAC,EACsBC,GAhBvBjgB,KAAAqf,UAAAA,EACArf,KAAAsf,KAAAA,EACCtf,KAAA2J,OAAAA,EACA3J,KAAAuf,MAAAA,EACAvf,KAAAwf,gBAAAA,EACAxf,KAAA6d,eAAAA,EACA7d,KAAAyf,cAAAA,EACAzf,KAAA0f,mBAAAA,EACA1f,KAAA2f,UAAAA,EACA3f,KAAA4f,aAAAA,EACA5f,KAAAyX,YAAAA,EACAzX,KAAA6f,eAAAA,EACA7f,KAAAyJ,cAAAA,EACAzJ,KAAA8f,mBAAAA,EACA9f,KAAA+f,wBAAAA,EACA/f,KAAAggB,cAAAA,EACsBhgB,KAAAigB,KAAAA,EA9GhCjgB,KAAAkgB,sBAAuB,EAGvBlgB,KAAAmgB,mBAAoB,EAGpBngB,KAAAogB,kBAAmB,EAGnBpgB,KAAAqgB,yBAA0B,EAC1BrgB,KAAAsgB,0BAA2B,EAC3BtgB,KAAAugB,wBAAyB,EAEzBvgB,KAAAwgB,aAA8B,CAAEC,QAAS,GAAIC,OAAQ,EAAGC,WAAW,GACnE3gB,KAAA4gB,iBAAkB,EAClB5gB,KAAA6gB,wBAAyB,EAMzB7gB,KAAA8gB,WAAa,SAUb9gB,KAAA+gB,WAA8BtC,GAAgBuC,OAG9ChhB,KAAAihB,UAAW,EAEXjhB,KAAAkhB,YAAc,MA4BdlhB,KAAAsV,aAAc,EAEdtV,KAAAmhB,QAAS,EAaTnhB,KAAAohB,WAAY,EAGZphB,KAAAqhB,mBAA+B,CAAExa,IAAK,IAAK0Q,MAAO,eAKlD/R,OAAA0N,eAAIkM,EAAAzd,UAAA,kBAAe,KAAnB,WACE,OACI3B,KAAKgZ,aAAehZ,KAAKshB,YAActhB,KAAKuhB,YAAcvhB,KAAKwhB,iBAC/DxhB,KAAKyhB,oBAAsBzhB,KAAK0hB,qDAuBtCtC,EAAAzd,UAAAggB,aAAA,WACM3hB,KAAK4hB,cACP5hB,KAAK6hB,SAAS1U,SAAS2U,KAAM,WAE7B9hB,KAAK+hB,YAAY5U,SAAS2U,KAAM,YAIpC1C,EAAAzd,UAAAqgB,qBAAA,WACiC,SAA3BhiB,KAAKiiB,kBACPjiB,KAAKihB,UAAW,EACoB,UAA3BjhB,KAAKiiB,oBACdjiB,KAAKihB,UAAW,IAIpB7B,EAAAzd,UAAAgO,SAAA,WAAA,MAAA7K,EAAA9E,KACEA,KAAKggB,cAAckC,QAAS,EAC5BliB,KAAKmiB,UAAYniB,KAAKyJ,cAAc8R,MAChCvb,KAAKmiB,UACPniB,KAAKohB,WAAY,GAGnBphB,KAAKoiB,WAAapiB,KAAKyJ,cAAcvF,gBACjClE,KAAKigB,KAAKre,cAAcrB,gBAAgB8hB,yBAC1CriB,KAAK4hB,cAA0F,QAA7EzO,EAAGnT,KAAKigB,KAAKre,cAAcrB,gBAAgB8hB,uBAAuBC,mBAAW,IAAAnP,GAAAA,EAC/FnT,KAAK2hB,eAED3hB,KAAKigB,KAAKre,cAAcrB,gBAAgB8hB,uBAAuBE,gBACjEviB,KAAK+gB,WACHtC,GAAgBze,KAAKigB,KAAKre,cAAcrB,gBAAgB8hB,uBAAuBE,iBAEjFviB,KAAK+gB,WAAatC,GAAwB,QAI9Cze,KAAKshB,WAAathB,KAAK6Y,aAAe7Y,KAAKuhB,YAAcvhB,KAAKogB,iBAE9DpgB,KAAKwiB,yBAELxiB,KAAKgiB,uBACLhiB,KAAKyiB,iBAEDziB,KAAKogB,kBACPpgB,KAAK0iB,gBAGP1iB,KAAK2J,OAAOmO,OAAOxL,WAAU,SAACiG,GAa5B,GAXqBoQ,EAAAA,gBAIAC,EAAAA,cAOjBrQ,aAAiBwF,EAAAA,eAAiBjT,EAAKsb,kBAGrCtb,EAAK+d,iBAAkB,CACzB,IAAIC,OAAkB,EAClBzF,GAAWvY,EAAK+d,kBAClBC,EAAqBhe,EAAK+d,iBAAiBE,eAE3CD,EAAqBvQ,EAAM1L,KAAO/B,EAAK+d,iBAAiBjI,YAAYnZ,KACpEoB,QAAQC,IAAI,oDAAoDggB,IAElEhe,EAAKie,cAAgBD,EACrBhe,EAAKke,aAAe,CAClBpG,WAAYkG,EACZnG,MAAO7X,EAAKme,QACZhf,QA3Ma,6DA4Mbif,YAAa,IAEfpe,EAAKqe,kBAIL5Q,aAAiB6Q,EAAAA,iBAInBte,EAAK+Y,eAAe/L,IAAI,CACtBuR,SAAU,QACVC,QAAS,mBACTC,OAAQ,SAAShR,EAAM1L,IAAG,oBAI9B/B,EAAKkd,0BAGPhiB,KAAK2f,UAAUvb,IAAI,CAAC,oBAAqB,sBAAsBkI,WAAU,SAAAkX,GACrE1e,EAAK2c,oBAAsB+B,EAAK,qBAChC1e,EAAK4c,oBAAsB8B,EAAK,0BAItCpE,EAAAzd,UAAA8hB,gBAAA,WAAA,IAAA3e,EAAA9E,KACEA,KAAK0jB,sBAAwB1jB,KAAKqf,UAAUsE,OAAO,OAAQ,SAAS,WAC7D7e,EAAKoQ,kBACRpQ,EAAK8e,iBAAmB,MAGrB9e,EAAK+e,YAAc/e,EAAKqT,iBAAkBrT,EAAKmT,UAClDnT,EAAK2S,YAAYP,QAGdpS,EAAK+e,YACJ/e,EAAK0c,mBACP1c,EAAK0c,kBAAmB,GAGtB1c,EAAKgf,cACPhf,EAAKwc,YAAa,GAGpBxc,EAAK8T,iBAAkB,EACvB9T,EAAKif,qBAGFjf,EAAKwQ,cACRxQ,EAAKqc,QAAS,GAGZrc,EAAKsO,mBAAqBtO,EAAKmO,kBACjCnO,EAAKsO,kBAAmB,GAG1BtO,EAAKmO,iBAAkB,EACvBnO,EAAKwQ,aAAc,EACnBxQ,EAAKoQ,iBAAkB,EACvBpQ,EAAK+e,WAAY,MAIrBzE,EAAAzd,UAAA+gB,cAAA,WAAA,IAAA5d,EAAA9E,KACQ0F,EAAW1F,KAAKyJ,cAAclD,YAAY,kBAE1Cyd,EAAuC,SADnBhkB,KAAKyJ,cAAclD,YAAY,wCAEzDvG,KAAKyJ,cAAc7E,MAAM0H,WAAU,SAAA3G,GAAQ,OAACb,EAAK2B,KAAOd,KAAOsL,cAE1DvL,EAEM1F,KAAKogB,kBACdpgB,KAAK6f,eAAe9B,aAAarY,GAAU4G,WAAU,SAAA3G,GACnD,IAAIse,EAA8B,GAC5BC,EAAeve,EAAKwe,MAAK,SAAA1W,GAAQ,MAAa,qBAAbA,EAAK/L,OAC5CoD,EAAKuc,mBAAqBvc,EAAKsf,kBAAkBze,EAAKwe,MAAK,SAAA1W,GAAQ,MAAa,qBAAbA,EAAK/L,QACnEoD,EAAKuc,qBACRvc,EAAKuc,mBAAqB,CAAExa,IAAK,IAAK0Q,MAAO,SAE3C2M,IACFD,EAAkBC,EAAaG,SAC5Ble,QACC,SAAAsH,GAAQ,QAAEuW,GAAkBlf,EAAKmb,KAAK7d,cAAiBqL,EAAK6W,iBAAgB,YAAc7W,EAAKgL,YAEhG8L,MAAK,SAACC,EAAmBrK,GAAsB,OAAAqK,EAAEC,SAAWtK,EAAEsK,YAC9DlX,KAAI,SAAAE,GAAQ,OAAA3I,EAAKsf,kBAAkB3W,OAExC3I,EAAK4f,gBAAelJ,GAEfyI,MAnBPjkB,KAAK0kB,gBAAkB,CAAC,CAAEnN,MAAO,sBAAuBzG,KAAM,YAAaC,WAAY,CAAC,QAyBpFqO,EAAAzd,UAAAyiB,kBAAA,SAAkB3W,EAAsBkX,GAAxC,IAAA7f,EAAA9E,KACN,QAD8C,IAAA2kB,IAAAA,EAAA,GACzClX,EAAL,CAGA,IAAImX,EAAiBnX,EAAK5G,KAA4C,OAArC4G,EAAK5G,IAAIge,MAAM,kBAC1CC,EAAc3X,SAASC,qBAAqB,QAAQ,GAAGC,KACzD0D,OAAa/F,EACXuM,EAAQ9J,EAAKsX,KAAK/kB,KAAKyG,OAASgH,EAAKhM,KAC3C,GAAIzB,KAAKijB,UAAYxV,EAAKuX,cAExB,GAAIJ,GAAkBnX,EAAK5G,IAAImD,SAAS8a,GACtC/T,EAAa,CAACtD,EAAK5G,IAAIoe,OAAOH,EAAYpX,OAAS,IACnDkX,GAAiB,MACZ,CACL,IAAM9O,EAAOgP,EAAYI,UAAUhgB,OAAO6Q,SAASoP,OAAOzX,QACtDoI,EAAKpI,QAAU,GAAKD,EAAK5G,IAAIT,WAAW0P,KAE1C/E,EAAa,CAACtD,EAAK5G,IAAIoe,OAAOnP,EAAKpI,OAAS,IAC5CkX,GAAiB,GAIvB,IAAIQ,EAAsB,IAAVT,EAAc,OAAS,UAIvC,MAHmB,KAAflX,EAAK4X,OAAgB5X,EAAK4X,QAC5BD,EAAY3X,EAAK4X,OAEZ,CACL9N,MAAKA,EAELzG,KAAMsU,EACN1M,QAAS,SAAAzS,GACPA,EAAE0S,cAAcpF,iBACa,IAAzB9F,EAAK4W,SAAS3W,SAChBD,EAAK6X,WACDpgB,OAAOqgB,KAAK9X,EAAK5G,IAAK,UACtBkK,EACAjM,EAAK6E,OAAO6b,SAASzU,GACrB7L,OAAO6Q,SAAStQ,OAAOgI,EAAK5G,OAGpCA,IAAK4G,EAAK5G,IACV4e,wBAAyB,CAAC,CAAEC,OAAO,IACnCzW,MACExB,EAAK4W,SAAS3W,OAAS,EACnBD,EAAK4W,SACFle,QAAO,SAAAwf,GAAS,OAACA,EAAMlN,YACvB8L,MAAK,SAACC,EAAmBrK,GAAsB,OAAAqK,EAAEC,SAAWtK,EAAEsK,YAC9DlX,KAAI,SAAAoY,GAAS,OAAA7gB,EAAKsf,kBAAkBuB,EAAOhB,EAAQ,WACtD3Z,KAIVoU,EAAAzd,UAAA6gB,uBAAA,WACE,IAAKxiB,KAAKijB,QACR,MAAM,IAAI1gB,MAAM,4EAIpB6c,EAAAzd,UAAAwhB,gBAAA,WAAA,IAAAre,EAAA9E,KACEA,KAAKwf,gBAAgB9C,gBAAgB1c,KAAKijB,QAASjjB,KAAK+iB,eAAezW,WACrE,SAAA3G,GACMA,IACFb,EAAKke,aAAerd,MAGxB,SAAA4V,GAAS,OAAA1Y,QAAQC,IAAI,mCAIlBsc,EAAAzd,UAAAikB,0BAAA,SAA0BC,GAA1B,IAAA/gB,EAAA9E,KACD6lB,EACF7lB,KAAKwf,gBAAgBvC,aAAajd,KAAKijB,QAASjjB,KAAKgjB,cAAc1W,WACjE,SAAAtJ,GACEH,QAAQC,IAAI,oBAAoBE,EAAI8iB,QACpChhB,EAAKub,yBAA0B,EAE/Bvb,EAAK+Y,eAAe/L,IAAI,CACtBuR,SAAU,OACVC,QAAS,iCAEXxe,EAAKqe,qBAEP,SAAA5H,GACE1Y,QAAQC,IAAI,4BACZgC,EAAK+Y,eAAe/L,IAAI,CACtBuR,SAAU,QACVC,QAAS,qCACTC,OAAQ,iBAAiBhI,EAAMuK,YAKrC9lB,KAAKqgB,yBAA0B,GAI5BjB,EAAAzd,UAAAokB,uBAAA,SAAuBxT,GAC5BvS,KAAKsgB,0BAA2B,GAG3BlB,EAAAzd,UAAA6O,aAAA,SAAa+B,GAClB,GAAIvS,KAAKgjB,aAAaliB,GAAI,CACxB,IAAM+F,EAAM7G,KAAKgjB,aAAa/e,QACvBjE,KAAKgjB,aAAa/e,QAAO,IAAIjE,KAAKgjB,aAAaE,YAClDljB,KAAKgjB,aAAaE,YACtBrgB,QAAQC,IAAI,0BAA0B+D,GAC1B3B,OAAOqgB,KAAK1e,EAAK,UACzBmf,aAEJhmB,KAAKyf,cAAc8F,KAAK/Q,GAAqB,CAC3CyR,OAAQ,qCACRC,MAAO,QACPvgB,KAAM,CACJgP,SAAU3U,KAAK+iB,iBAIrBxQ,EAAMgB,kBAGD6L,EAAAzd,UAAA+O,mBAAA,SAAmB6B,GACxBvS,KAAKqgB,yBAA0B,EAC/B9N,EAAMgB,kBAGD6L,EAAAzd,UAAAwT,aAAA,SAAa5C,GACdvS,KAAK0f,mBAAmByG,UAAU,uBACpCnmB,KAAK4gB,iBAAkB,EAEvB5gB,KAAKomB,cAAcrU,OAAOQ,GAE5BA,EAAMgB,kBAGD6L,EAAAzd,UAAAyT,mBAAA,SAAmB7C,GACxBvS,KAAKsgB,0BAA2B,EAChC/N,EAAMgB,kBAGD6L,EAAAzd,UAAA0T,kBAAA,SAAkB9C,GACvBvS,KAAKugB,wBAAyB,EAC9BhO,EAAMgB,kBAGD6L,EAAAzd,UAAA0kB,iBAAA,SAAiB7H,GAAjB,IAAA1Z,EAAA9E,KACLA,KAAK6gB,wBAAyB,EAC9B,IAAMyF,EAA2B,CAC/B5F,OAAQlC,EAASkC,OACjBD,QAASjC,EAASiC,QAClB9D,MAAO3c,KAAKijB,QACZpZ,OAAQ2U,EAASmC,UAAY,YAAc3gB,KAAKigB,KAAKre,cAAciI,QAErE7J,KAAK8f,mBAAmBvB,aAAa+H,GAAaha,WAChD,WACExH,EAAKyhB,gBACLzhB,EAAK+Y,eAAe/L,IAAI,CACtBuR,SAAU,UACVC,QAAS,kCAGb,WACExe,EAAKyhB,gBACLzhB,EAAK+Y,eAAe/L,IAAI,CACtBuR,SAAU,QACVC,QAAS,0BACTC,OAAQ,+BAMhBnE,EAAAzd,UAAA4kB,cAAA,WACEvmB,KAAK6gB,wBAAyB,EAC9B7gB,KAAK4gB,iBAAkB,EACvB5gB,KAAKomB,cAAcnU,QAGdmN,EAAAzd,UAAA6kB,eAAA,SAAe5H,GAAf,IAAA9Z,EAAA9E,KACLA,KAAK+f,wBAAwBpB,oBAAoBC,EAAQ5e,KAAKijB,SAAS3W,WACrE,WACExH,EAAK+Y,eAAe/L,IAAI,CACtBuR,SAAU,UACVC,QAAS,WACTC,OAAQ,qCAGZ,WACE,OAAAze,EAAK+Y,eAAe/L,IAAI,CACtBuR,SAAU,QACVC,QAAS,SACTC,OAAQ,gDAKTnE,EAAAzd,UAAA8kB,cAAA,WACLzmB,KAAKwgB,aAAe,CAAEC,QAAS,GAAIC,OAAQ,EAAGC,WAAW,IAG3DvB,EAAAzd,UAAAkgB,SAAA,SAAS6E,EAASC,GACZD,EAAQ7U,UACV6U,EAAQ7U,UAAUC,IAAI6U,GAEtBD,EAAQC,WAAa,IAAMA,GAI/BvH,EAAAzd,UAAAogB,YAAA,SAAY2E,EAASC,GACfD,EAAQ7U,UACV6U,EAAQ7U,UAAUgI,OAAO8M,GAEzBD,EAAQC,UAAYD,EAAQC,UAAUC,QAClC,IAAIC,OAAO,UAAYF,EAAUhc,MAAM,KAAKmc,KAAK,KAAO,UAAW,MACnE,MAKR1H,EAAAzd,UAAAqU,kBAAA,SAAkBzD,GAChBvS,KAAKshB,YAActhB,KAAKshB,WACxBthB,KAAK6jB,WAAY,EAEZ7jB,KAAKgZ,cACRhZ,KAAKwhB,kBAAoBxhB,KAAKwhB,iBAC1BxhB,KAAKwhB,iBACPxhB,KAAK+mB,kBAEL/mB,KAAK+jB,qBAITxR,EAAMgB,kBAGR6L,EAAAzd,UAAAqlB,YAAA,SAAYzQ,GACVvW,KAAK6jB,WAAY,EAEb7jB,KAAKoT,mBAAqBpT,KAAKiT,kBACjCjT,KAAKoT,kBAAmB,IAI5BgM,EAAAzd,UAAAslB,kBAAA,SAAkB1U,GAChBvS,KAAKoT,kBAAoBpT,KAAKoT,iBAC9BpT,KAAKiT,iBAAkB,GAGzBmM,EAAAzd,UAAA2U,0BAAA,SAA0B/D,GACxBvS,KAAKwW,oBAAsBxW,KAAKwW,mBAChCjE,EAAMgB,kBAGR6L,EAAAzd,UAAAsU,kBAAA,SAAkB1D,EAAO9E,GACvBzN,KAAKkV,iBAAkB,EAEnBlV,KAAK4jB,mBAAqBnW,EAC5BzN,KAAK4jB,iBAAmB,KAExB5jB,KAAK4jB,iBAAmBnW,EAGb,WAATA,IACFzN,KAAKmhB,QAAUnhB,KAAKmhB,OACpBnhB,KAAKsV,aAAetV,KAAKsV,aAG3B/C,EAAMgB,kBAGR6L,EAAAzd,UAAA8U,cAAA,SAAclE,EAAOmE,GACnB1W,KAAKsV,YAAcoB,EACnB1W,KAAKmhB,OAASzK,EACdnE,EAAMgB,kBAGR6L,EAAAzd,UAAAqX,UAAA,WACE,OAAO9T,OAAOgiB,WAAa,KAG7B9H,EAAAzd,UAAA4f,SAAA,WACE,OAAOrc,OAAOgiB,YAAc,KAG9B9H,EAAAzd,UAAAkX,SAAA,WACE,OAAO7Y,KAAK+gB,aAAetC,GAAgBuC,QAG7C5B,EAAAzd,UAAAmiB,UAAA,WACE,OAAO9jB,KAAK+gB,aAAetC,GAAgB0I,SAG7C/H,EAAAzd,UAAAwW,aAAA,WACE,OAAOnY,KAAK+gB,aAAetC,GAAgB2I,YAG7ChI,EAAAzd,UAAAsW,OAAA,WACE,OAAOjY,KAAK+gB,aAAetC,GAAgB4I,MAG7CjI,EAAAzd,UAAA2lB,mBAAA,WACEtnB,KAAK+gB,WAAatC,GAAgBuC,QAGpC5B,EAAAzd,UAAA4lB,oBAAA,WACEvnB,KAAK+gB,WAAatC,GAAgB0I,SAGpC/H,EAAAzd,UAAA6lB,uBAAA,WACExnB,KAAK+gB,WAAatC,GAAgB2I,YAGpChI,EAAAzd,UAAA8lB,iBAAA,WACEznB,KAAK+gB,WAAatC,GAAgB4I,MAGpCjI,EAAAzd,UAAAolB,gBAAA,WACM5Z,SAAS2U,KAAKjQ,UAChB1E,SAAS2U,KAAKjQ,UAAUC,IAAI,kBAE5B3E,SAAS2U,KAAK6E,WAAa,mBAI/BvH,EAAAzd,UAAAoiB,kBAAA,WACM5W,SAAS2U,KAAKjQ,UAChB1E,SAAS2U,KAAKjQ,UAAUgI,OAAO,kBAE/B1M,SAAS2U,KAAK6E,UAAYxZ,SAAS2U,KAAK6E,UAAUC,QAAQ,IAAIC,OAAO,UACjE,iBAAiBlc,MAAM,KAAKmc,KAAK,KAAO,UAAW,MAAO,MAI1D1H,EAAAzd,UAAA8gB,eAAA,WAAA,IAAA3d,EAAA9E,KAGN,GADsF,SAApFA,KAAKyJ,cAAclD,YAAYsC,IAM/B,OAJAhG,QAAQC,IACN,0GAEF9C,KAAKohB,WAAY,GAGnBve,QAAQC,IAAI,6BACZ,IAAI4kB,EAAc1nB,KAAKyJ,cAAcvF,iBAAmBlE,KAAKyJ,cAAcvF,gBAAgByjB,UAE3F,IAAKD,EAAa,CAChB,IAAME,EAAe5nB,KAAKyJ,cAAclD,YAAY,6BAC/CqhB,GAIH/kB,QAAQC,IACN,+GAA+G8kB,EAAY,KAE7HF,EAAcE,IANd/kB,QAAQC,IAAI,oFACZ4kB,EAAc,MASdva,SAAS0a,eAAe,cACa1a,SAAS0a,eAAe,aAC7ChO,SAEpB,IAAMiO,EAAY3a,SAAS4a,cAAc,QACzCD,EAAUjY,aAAa,KAAM,aAC7BiY,EAAUjY,aAAa,MAAO,cAC9BiY,EAAUjY,aAAa,OAAQ,YAC/BiY,EAAUE,OAAS,WACjBnlB,QAAQC,IAAI,mBACZgC,EAAKsc,WAAY,GAEnB0G,EAAUG,QAAU,WAClBplB,QAAQC,IAAI,oCAAoC4kB,EAAW,KAC3DI,EAAUjY,aAAa,OAjqBF,uDAkqBrB/K,EAAKsc,WAAY,GAEnB0G,EAAUjY,aAAa,OAAQ7P,KAAK4f,aAAalC,aAAagK,IAC9Dva,SAASC,qBAAqB,QAAQ,GAAG8a,YAAYJ,8BAlqBxDxW,EAAAA,UAASnO,KAAA,CAAC,CACT8M,SAAU,qBACVsB,SAAA,+0LAEE,yFAlDFrB,EAAAA,iBACAiY,EAAAA,cASA1Z,EAAAA,cAEA2Z,EAAAA,sBAGO3L,UACA4B,EAAAA,sBACAgK,EAAAA,qBAaAC,EAAAA,0BATAC,EAAAA,wBAEAhL,UAYA3G,UAXAgH,UAFApZ,SAUA8Z,UAEAI,UAlB0B8J,EAAAA,8CAyJ9B7hB,EAAAA,OAAMxD,KAAA,CAACrD,uDA/GTuQ,EAAAA,iCAGAA,EAAAA,gCAGAA,EAAAA,uBAYAA,EAAAA,0BAGAA,EAAAA,wCAkDAsG,EAAAA,UAASxT,KAAA,CAAC,wDAGVwT,EAAAA,UAASxT,KAAA,CAAC,sCAGVwT,EAAAA,UAASxT,KAAA,CAAC,sCEzIb,SAAAslB,YAQEA,EAAA9mB,UAAAwf,OAAA,WAAA,IAAArc,EAAA9E,KACEA,KAAK0oB,kBAAmB,EACxB,IAAMC,EAAqB3oB,KAAK4oB,WAC5BC,EAAAA,aAAaF,GACfA,EAAmBrc,WAAU,SAAA3G,GAC3Bb,EAAKgkB,QAAUnjB,EACfb,EAAK4jB,kBAAmB,MAG1B1oB,KAAK8oB,QAAUH,EACf3oB,KAAK0oB,kBAAmB,IAI5BD,EAAA9mB,UAAAuV,MAAA,WACElX,KAAK8oB,QAAU,GACf9oB,KAAK+oB,SAAW/oB,KAAKgpB,sBAGvBP,EAAA9mB,UAAAgO,SAAA,WACE3P,KAAKkX,mCA7BRjU,EAAAA,aCiBD,IAAMgmB,GAAQ,mFACRC,GAAc,SAASxnB,EAAK4Z,GAChC,GAAqB,iBAAVA,GACC2N,GAAME,KAAK7N,GAEnB,OAAO,IAAIxQ,KAAKwQ,GAGpB,OAAOA,kBAsBP,SAAA8N,EACEC,EACQxL,EACAyL,EACsBrJ,EACtBsJ,EACuBC,GANjC,IAAA1kB,EAQE2kB,EAAAjP,KAAAxa,KAAMqpB,IAAcrpB,YANZ8E,EAAA+Y,eAAAA,EACA/Y,EAAAwkB,kBAAAA,EACsBxkB,EAAAmb,KAAAA,EACtBnb,EAAAykB,SAAAA,EACuBzkB,EAAA0kB,WAAAA,EApBxB1kB,EAAA4kB,gCAAiC,EACjC5kB,EAAA6kB,qBAAsB,EACrB7kB,EAAA8kB,SAA8B,IAAInZ,EAAAA,aAU5C3L,EAAA+kB,wBAAyB,WAboBpP,GAAA2O,EAAAK,GA0B7CL,EAAAznB,UAAAgO,SAAA,WACE8Z,EAAA9nB,UAAMgO,SAAQ6K,KAAAxa,MACdA,KAAK8pB,kBACD9pB,KAAK+pB,UACP/pB,KAAKgqB,wBAITZ,EAAAznB,UAAAsoB,0BAAA,SAA0B1X,GAA1B,IAAAzN,EAAA9E,KACMuS,EAAM+I,OACRtb,KAAKkqB,uBAAyB3X,EAAM+I,MACpCtb,KAAKspB,kBACFjN,gBAAgBrc,KAAKkqB,wBACrB5d,WAAU,SAAAiF,GACTzM,EAAKqlB,qBAAuB5Y,EAE5BzM,EAAK0kB,WAAWT,SAAWhjB,KAAK0E,MAC9B8G,EAAS6Y,eACTlB,SAINlpB,KAAKkqB,uBAAyB,KAC9BlqB,KAAKmqB,qBAAuB,OAIxBf,EAAAznB,UAAAqoB,qBAAA,WAAA,IAAAllB,EAAA9E,KACNA,KAAKspB,kBACFrN,yBACCjc,KAAKigB,KAAKre,cAAciI,OACxB7J,KAAKupB,SAAStG,QACdjjB,KAAK+pB,UAENzd,WAAU,SAAA+d,GACTvlB,EAAKwlB,sBAAqB9O,GAAA,CACxB,CAAEF,MAAO,KAAM/D,MAAO,wBACnB8S,EAAU9c,KAAI,SAAAgd,GAAK,MAAA,CAAGhT,MAAOgT,EAAE9oB,KAAM6Z,MAAOiP,EAAEzpB,QAInD,IAAM0pB,EAAkBH,EAAUlG,MAAK,SAAAoG,GAAK,OAAAA,EAAEC,mBAC1CA,GACF1lB,EAAKmlB,0BAA0B,CAAE3O,MAAOkP,EAAgB1pB,SAKhEsoB,EAAAznB,UAAAmoB,gBAAA,WACO9pB,KAAKwpB,YACR3mB,QAAQ0Y,MACN,gIAGCvb,KAAK+pB,UACRlnB,QAAQ4nB,KACN,iHAKNrB,EAAAznB,UAAA+oB,cAAA,WACE7nB,QAAQC,IAAI,gBACZ9C,KAAK4pB,SAASxY,KAAK,IAGrBgY,EAAAznB,UAAAgpB,8BAAA,WAAA,IAAA7lB,EAAA9E,KACE6C,QAAQC,IAAI,mBACZ9C,KAAKmqB,qBAAqBC,eAAiBrkB,KAAKC,UAC9ChG,KAAKwpB,WAAWT,UAElB/oB,KAAKspB,kBACF/M,eAAevc,KAAKkqB,uBAAwBlqB,KAAKmqB,sBACjD7d,WAAU,SAAAse,GACT9lB,EAAKqlB,qBAAuBS,EAC5B9lB,EAAK+Y,eAAe/L,IAAI,CACtBuR,SAAU,UACVC,QAAS,gCAKjB8F,EAAAznB,UAAAkpB,4BAAA,SAA4BtY,EAAcuY,GAA1C,IAAAhmB,EAAA9E,KACEA,KAAKspB,kBACFhN,kBAAkB,CACjBnb,YAAanB,KAAKupB,SAAStG,QAC3B/G,KAAMlc,KAAK+pB,SACXngB,KAAM5J,KAAKigB,KAAKre,cAAciI,OAC9BpI,KAAMzB,KAAK+qB,gBACXP,gBAAiBxqB,KAAK6pB,uBACtBO,eAAgBrkB,KAAKC,UAAUhG,KAAKwpB,WAAWT,YAEhDzc,WAAU,SAAAse,GACT9lB,EAAKqlB,qBAAuBS,EAC5B9lB,EAAKwlB,sBAAsB/b,KAAK,CAC9BgJ,MAAOqT,EAAcnpB,KACrB6Z,MAAOsP,EAAc9pB,KAEvBgE,EAAKolB,uBAAyBU,EAAc9pB,GAC5CgqB,EAAG7Y,OACHnN,EAAK+kB,wBAAyB,EAC9B/kB,EAAKimB,qBAAkB/f,EACvBlG,EAAK+Y,eAAe/L,IAAI,CACtBuR,SAAU,UACVC,QAAS,8BAIjB8F,EAAAznB,UAAAqpB,8BAAA,WAAA,IAAAlmB,EAAA9E,KACEA,KAAKspB,kBACF9M,eAAexc,KAAKkqB,wBACpB5d,WAAU,SAAAI,GACT5H,EAAK+Y,eAAe/L,IAAI,CACtBuR,SAAU,OACVC,QAAS,4BAGXxe,EAAKwlB,sBAAsBW,OACzBnmB,EAAKwlB,sBAAsBY,WACzB,SAAA/P,GAAK,OAAAA,EAAEG,OAASxW,EAAKolB,0BAEvB,GAEFplB,EAAKolB,4BAAyBlf,EAC9BlG,EAAKqlB,0BAAuBnf,SAtJWqO,yBAL9C/H,EAAAA,UAASnO,KAAA,CAAC,CACT8M,SAAU,wBACVsB,SAAA,02GA7BAuI,EAAAA,gBAQOuE,EAAAA,sBAGA1C,mCAwCJhV,EAAAA,OAAMxD,KAAA,CAACrD,YArCHsf,UACAqJ,GAAgB0C,WAAA,CAAA,CAAAre,KAsCpBse,EAAAA,UAAQ,CAAAte,KAAIue,EAAAA,uEApBdhb,EAAAA,mCACAA,EAAAA,wBACAmB,EAAAA,yBAIAnB,EAAAA,2BClCD,SAAAib,EACUC,EACA7b,EACsB9M,GAFtB5C,KAAAurB,YAAAA,EACAvrB,KAAA0P,cAAAA,EACsB1P,KAAA4C,YAAAA,SAGhC4C,OAAA0N,eACIoY,EAAA3pB,UAAA,WAAQ,KADZ,SACaiO,GACX5P,KAAK4P,WAAaA,mCAGpB0b,EAAA3pB,UAAAgO,SAAA,WACO3P,KAAK4C,YAAYR,cAAcpC,KAAK4P,YAIvC5P,KAAK0P,cAAc8b,mBAAmBxrB,KAAKurB,cAH3C1oB,QAAQC,IAAI,gCAAgC9C,KAAK4P,YACjD5P,KAAK0P,cAAcK,oCAlBxBC,EAAAA,UAAS7M,KAAA,CAAC,CAAE8M,SAAU,2DAJqDwb,EAAAA,mBAAlBrb,EAAAA,iDAWrDzJ,EAAAA,OAAMxD,KAAA,CAACrD,8CAJTuQ,EAAAA,wBAOAA,EAAAA,2BCqDD,SAAAqb,YAEAA,EAAA/pB,UAAAgO,SAAA,uCAnED2B,EAAAA,UAASnO,KAAA,CAAC,CACT8M,SAAU,kBACVsB,SAAU,0cAuBR,wiBAyBDlB,EAAAA,0BAGAA,EAAAA,oBAGAA,EAAAA,0BACAA,EAAAA,uBACAA,EAAAA,sBACAA,EAAAA,oBAGAA,EAAAA,2BCvDD,SAAAsb,EAAoBhZ,GAAA3S,KAAA2S,cAAAA,EADZ3S,KAAA4rB,SAA+B,UAGvCD,EAAAhqB,UAAAkqB,cAAA,SAAcC,GACZ,IAAM3Q,EAAInb,KAAK4rB,SAAShU,QAAQkU,GAC5B3Q,GAAK,GACPnb,KAAK4rB,SAASX,OAAO9P,EAAG,GAE1Bnb,KAAK2S,cAAcH,UAAU9L,KAAK1G,KAAK4rB,SAASle,OAAS,IAE3Die,EAAAhqB,UAAAoqB,UAAA,SAAUD,EAAuBplB,GAAjC,IAAA5B,EAAA9E,KACQgsB,EAAUlhB,KAAKmhB,MAGrB,OAFAjsB,KAAK4rB,SAASrd,KAAKud,GACnB9rB,KAAK2S,cAAcH,UAAU9L,MAAK,GAC3BA,EAAKwlB,OAAOJ,GAAKzkB,KACtBY,EAAAA,KACE,SAAAsK,GACE,GAAIA,aAAiB4Z,EAAAA,aAAc,CACjC,IAAMC,EAAUthB,KAAKmhB,MAAQD,EAC7BnpB,QAAQC,IACN,eAAegpB,EAAIO,cAAa,SAASD,EAAO,mBAAmB7Z,EAAMuT,OAAM,KAAKhhB,EAAK8mB,SAASle,QAEpG5I,EAAK+mB,cAAcC,OAGvB,SAAAvQ,GACE1Y,QAAQC,IAAI,oBAAoByY,EAAMuK,OAAM,IAAI/f,KAAKC,UAAUuV,IAC/DzW,EAAK+mB,cAAcC,sBC/BbQ,GACd7iB,EACA8iB,EACA3pB,GAEA,IAAM4pB,GAAY,IAAI1hB,MAAOC,UAE7B,OADAlI,QAAQC,IAAI,wCACL,WACL,OAAA2G,EACGzH,OACAe,MAAK,WAAM,OAAAF,QAAQC,IAAI,0CACvBC,MAAK,WAAM,OAAAH,EAAYZ,UACvBe,MAAK,SAAAC,WACJH,QAAQC,IAAI,8BAA8BE,EAAG,4BAC7C,IACMypB,GADgBhjB,EAAclD,YAAY,wBAA0B,SACrCoE,MAAM,KAAK4C,KAAI,SAAAmf,GAAK,OAAAA,EAAEC,UACvDlmB,GAC8D,QAAhEmmB,EAAyC,QAAzCzZ,EAAAvQ,EAAYhB,cAAcrB,uBAAe,IAAA4S,OAAA,EAAAA,EAAE3S,6BAAqB,IAAAosB,OAAA,EAAAA,EAAEnsB,SAAU8rB,EAAiBM,iBAC/FpmB,EAAOgmB,EAAeziB,SAASvD,GAAQA,EAAO,KAC9C8lB,EAAiBO,IAAIrmB,GACrBgD,EAAcjD,QAAQC,GACtB,IAAMsmB,GAAW,IAAIjiB,MAAOC,UAAYyhB,EAGxC,OAFA3pB,QAAQC,IAAI,+CAA+CiqB,EAAW,KAAMC,QAAQ,GAAE,MAE/E,KAERnnB,OAAM,SAAAC,GACLjD,QAAQC,IAAI,mJAKZ2G,EAAc8R,MAAQzV,yID9B7B7C,EAAAA,WAAUE,KAAA,CAAC,CAAEmB,WAAY,qDAHjBwO,UEHGma,iBCQV,SAAAC,EAA6BzoB,GAAAzE,KAAAyE,KAAAA,EADZzE,KAAA6G,IAAM,0CAGvBqmB,EAAAvrB,UAAAwrB,kBAAA,SAAkBC,EAAe1nB,EAAkB2nB,GACjD,IAAIrV,EAAS,IAAIsV,EAAAA,WAUjB,OATIF,IACFpV,EAASA,EAAOuV,IAAI,QAASH,IAE3B1nB,IACFsS,EAASA,EAAOuV,IAAI,YAAa7nB,IAE/B2nB,IACFrV,EAASA,EAAOuV,IAAI,QAASF,EAAMG,aAE9BxtB,KAAKyE,KAAKL,IAAqBpE,KAAK6G,IAAK,CAC9CmR,OAAMA,uJAjBX/U,EAAAA,WAAUE,KAAA,CAAC,CAAEmB,WAAY,qDAJjBC,EAAAA,cDDT,SAAY0oB,GACVA,EAAA,YAAA,cACAA,EAAA,YAAA,cAFF,CAAYA,KAAAA,GAAc,uBEqCxB,SAAAQ,EACUC,EACAroB,EACSknB,EACA1O,GAHT7d,KAAA0tB,cAAAA,EACA1tB,KAAAqF,OAAAA,EACSrF,KAAAusB,iBAAAA,EACAvsB,KAAA6d,eAAAA,EAtBnB7d,KAAAitB,eAAiBA,GAOjBjtB,KAAAsV,YAAiC,IAAI7E,EAAAA,oBAErCjL,OAAA0N,eAAIua,EAAA9rB,UAAA,mBAAgB,KAApB,WACE,MAAO,CACLmL,KAAMmgB,GAAeU,YACrBlsB,KAAM,sBACNoF,IAAK,GAAG7G,KAAK0V,UAAY1V,KAAKotB,MAAM9R,MACpCsS,YAAa5tB,KAAKotB,MAAM9R,wCAW5BmS,EAAA9rB,UAAAgO,SAAA,WACE3P,KAAKotB,MAAQ,IAAIS,EAAAA,YAAY,IAC7B,IAAMnY,EAAY1V,KAAKqF,OAAOkB,YAAYuC,KAAoC,yBAC9E9I,KAAK0V,UAAeA,EAAS,kBAG/B+X,EAAA9rB,UAAA8hB,gBAAA,WAAA,IAAA3e,EAAA9E,KACE8tB,YAAW,WAAM,OAAAhpB,EAAKipB,qBAAqBC,eAAc,IAG3DP,EAAA9rB,UAAAwf,OAAA,SAAO5O,GAAP,IAAAzN,EAAA9E,KACEA,KAAK0tB,cAAcP,kBAAkB5a,EAAM6a,MAAO,MAAM9gB,WAAU,SAAA3G,IAChEA,EAAOA,EAAKsoB,MAAM,EAAGnpB,EAAKopB,aACrB3f,KAAKzJ,EAAKqpB,kBACfrpB,EAAKgkB,QAAUnjB,MAInB8nB,EAAA9rB,UAAAysB,OAAA,SAAO7b,GACDA,EAAMzF,OAASmgB,GAAeU,YAChC3tB,KAAKotB,MAAMiB,SAAS9b,EAAMqb,aAE1B5tB,KAAKotB,MAAMiB,SAAS9b,EAAM9Q,MAE5ByD,OAAOqgB,KAAKhT,EAAM1L,MAGpB4mB,EAAA9rB,UAAA2sB,WAAA,SAAWC,GACLvuB,KAAKotB,MAAM9R,MACbpW,OAAOqgB,KAAK,GAAGvlB,KAAK0V,UAAY1V,KAAKotB,MAAM9R,QAExB,IAAfiT,GACFvuB,KAAK6d,eAAe/L,IAAI,CAEtBwR,QAAStjB,KAAKusB,iBAAiBiC,QAAQ,gCACvCnL,SAAU,WAMlBoK,EAAA9rB,UAAA8U,cAAA,SAAclE,EAAOmE,GACnB1W,KAAKsV,YAAYlE,KAAK,CAAEmB,MAAKA,EAAEmE,IAAGA,+BA3ErCpF,EAAAA,UAASnO,KAAA,CAAC,CACT8M,SAAU,gBACVsB,SAAA,krCAZO2b,UAIA1oB,SAEA+jB,EAAAA,wBACAlK,EAAAA,iEAeN1H,EAAAA,UAASxT,KAAA,CAAC,oCAEVqO,EAAAA,iBCFD,kCArBDF,EAAAA,UAASnO,KAAA,CAAC,CACT8M,SAAU,iBACVsB,SAAU,2jBAgBTlB,EAAAA,qBACAA,EAAAA,SAKH,kBCmBE,SAAAoe,EAAoBC,GAApB,IAAA5pB,EAAA9E,KAAoBA,KAAA0uB,GAAAA,EA7BpB1uB,KAAA2uB,UAAY,EAGZ3uB,KAAA4uB,gBAAiB,EASjB5uB,KAAA6uB,mBAAkD,IAAIpe,EAAAA,aAEtDzQ,KAAA8uB,eAA8C,IAAIre,EAAAA,aAClDzQ,KAAA+uB,iBAAkB,EAElB/uB,KAAAgvB,yBAAwC,SAACC,GACvC,IAAMvO,EAASuO,EAAGC,SAASxO,OAAOpF,MAC5BmF,EAAUwO,EAAGC,SAASzO,QAAQnF,MACpC,OAAIoF,EAAS,GAAKA,EAAS,GACzB5b,EAAKiqB,iBAAkB,EAChBtO,EAAQ/S,QAAU5I,EAAK6pB,UAAY,KAAO,CAAEQ,gBAAgB,KAEnErqB,EAAKiqB,iBAAkB,EAChB,cArBXvpB,OAAA0N,eACIub,EAAA9sB,UAAA,eAAY,KADhB,SACiB6c,GACXxe,KAAKovB,MACPpvB,KAAKovB,KAAKC,WAAW7Q,oCAwBzBiQ,EAAA9sB,UAAAgO,SAAA,WAAA,IAAA7K,EAAA9E,KACEA,KAAKovB,KAAOpvB,KAAK0uB,GAAGY,MAAM,CACxB5O,OAAQ,CAAC,EAAG,CAAC6O,EAAAA,WAAWC,SAAUD,EAAAA,WAAWE,IAAI,GAAIF,EAAAA,WAAWG,IAAI,KACpEjP,QAAS,CAAC,GAAI8O,EAAAA,WAAWZ,UAAU3uB,KAAK2uB,YACxChO,WAAW,GACV,CAAEgP,WAAY3vB,KAAKgvB,2BACtBhvB,KAAKovB,KAAKQ,aAAatjB,WAAU,SAAAujB,GAC/B/qB,EAAK+pB,mBAAmBzd,KAAKye,OAIjCpB,EAAA9sB,UAAAmuB,eAAA,WACM9vB,KAAKovB,KAAKW,QAAU/vB,KAAK4uB,iBAC3B5uB,KAAK4uB,gBAAiB,EACtB5uB,KAAK8uB,eAAe1d,KAAKpR,KAAKovB,KAAK9T,mCApDxChK,EAAAA,UAASnO,KAAA,CAAC,CACT8M,SAAU,cACVsB,SAAA,knCATAye,EAAAA,wDAgBC3f,EAAAA,4BAEAA,EAAAA,kCAOAmB,EAAAA,+BAEAA,EAAAA,4BCTD,SAAAye,EAAoBvB,GAAA1uB,KAAA0uB,GAAAA,EAPpB1uB,KAAAmS,SAAU,EAEVnS,KAAAkwB,cAAuC,IAAIzf,EAAAA,aAG3CzQ,KAAAmwB,aAA4C,IAAI1f,EAAAA,oBAIhDwf,EAAAtuB,UAAAgO,SAAA,WACE3P,KAAKowB,UAAYpwB,KAAK0uB,GAAGY,MAAM,CAC7BvQ,MAAO,CAAC,GAAIwQ,EAAAA,WAAWC,UACvBvQ,YAAa,CAAC,GAAIsQ,EAAAA,WAAWC,aAIjCS,EAAAtuB,UAAA2Q,MAAA,WACEtS,KAAKkwB,cAAc9e,MAAK,IAG1B6e,EAAAtuB,UAAA0uB,OAAA,WACErwB,KAAKmwB,aAAa/e,KAAKpR,KAAKowB,UAAU9U,kCA9BzChK,EAAAA,UAASnO,KAAA,CAAC,CACT8M,SAAU,oBACVsB,SAAA,snCAJOye,EAAAA,iDAUN3f,EAAAA,6BAEAmB,EAAAA,6BAGAA,EAAAA,4BCVD,SAAA8e,EAAoB7rB,GAAAzE,KAAAyE,KAAAA,SAEb6rB,EAAA3uB,UAAA4uB,cAAA,WACL,OAAOvwB,KAAKyE,KACTL,IAAI,qCAAsC,CAAEosB,aAAc,SAC1DnpB,KAAKkG,EAAAA,KAAI,SAAA5H,GAAQ,OAAAA,EAAKgF,MAAM,6JAPlC1H,EAAAA,WAAUE,KAAA,CAAC,CAAEmB,WAAY,qDAJjBC,EAAAA,gCCoBP,SAAAksB,EAAoBzsB,GAAAhE,KAAAgE,WAAAA,EAFpBhE,KAAA6G,IAAM,mCAIC4pB,EAAA9uB,UAAA+uB,cAAA,SACL3H,GAEA,IAAM4H,EAAa,IAAIrD,EAAAA,WACvB9nB,OAAOU,KAAK6iB,GAAU5a,SAAQ,SAAAzM,GAAO,OAAAivB,EAAWpD,IAAI7rB,EAAKqnB,EAASrnB,OAClE,IAAMkvB,EAAU,CAAE5Y,OAAQ2Y,GAC1B,OAAO3wB,KAAKgE,WAAWI,IAAoBpE,KAAK6G,IAAK+pB,IAGhDH,EAAA9uB,UAAAkvB,eAAA,SACL/vB,EACAgwB,GAEA,IAAMlV,EAAc,CAClBC,QAAS,IAAIC,EAAAA,YAAY,CACvBC,eAAgB,sBAIpB,OAAO/b,KAAKgE,WAAWoY,KAClBpc,KAAK6G,IAAG,IAAI/F,EAAE,SACjBgwB,EACAlV,sJA5BL3Y,EAAAA,WAAUE,KAAA,CAAC,CAAEmB,WAAY,qDAfjBC,EAAAA,gCC4BP,SAAAwsB,EACUC,EACAtC,EACAuC,EAC+BhR,EACtBpC,EACAqT,GALTlxB,KAAAgxB,aAAAA,EACAhxB,KAAA0uB,GAAAA,EACA1uB,KAAAixB,iBAAAA,EAC+BjxB,KAAAigB,KAAAA,EACtBjgB,KAAA6d,eAAAA,EACA7d,KAAAkxB,YAAAA,EAbZlxB,KAAAoS,OAAS,IAAI3B,EAAAA,aAEbzQ,KAAAmxB,WAA6B,UAc7BJ,EAAApvB,UAAAgO,SAAA,WAAA,IAAA7K,EAAA9E,KACLA,KAAKgxB,aAAaT,gBAAgBjkB,WAChC,SAAA8kB,GAAS,OAACtsB,EAAKssB,MAAQA,EAAMjrB,QAAO,SAAAgV,GAAK,QAAEA,QAC3C,SAAAI,GAAS,OAAA1Y,QAAQC,IAAIyY,MAEvBvb,KAAKqxB,cAAgBrxB,KAAK0uB,GAAGY,MAAM,CACjCxe,KAAM,CAAC,GAAIye,EAAAA,WAAWC,UACtB1iB,KAAM,CAAC,CAAEwO,MAAO,YAAa7C,UAAU,IACvChX,KAAM,CAAC,GAAI8tB,EAAAA,WAAWC,UACtB7S,MAAO,CAAC,CAAErB,MAAOtb,KAAK2c,MAAOlE,UAAU,IACvC6Y,OAAQ,CACN,CACEhW,MAAOpW,OAAO6Q,SAAS1I,KAAKuZ,QAAQ1hB,OAAO6Q,SAASoP,OAAQ,IAC5D1M,UAAU,IAGd8Y,UAAW,CAAC,GAAIhC,EAAAA,WAAWC,YAG7B,IAAMgC,EAA2D,CAC/D9rB,SAAU1F,KAAKkxB,YAAY3qB,YAAY,mBAEzCvG,KAAKixB,iBAAiBP,cAAcc,GAAmBllB,WACrD,SAAA3G,GAAQ,OAACb,EAAKqsB,WAAaxrB,KAC3B,SAAA4V,GAAS,OAAA1Y,QAAQC,IAAIyY,OAIlBwV,EAAApvB,UAAAkvB,eAAA,WAAA,IAAA/rB,EAAA9E,KACC8wB,EAAwC,CAC5CnU,MAAO3c,KAAKqxB,cAAcjtB,IAAI,SAASkX,MACvCgW,OAAQtxB,KAAKqxB,cAAcjtB,IAAI,UAAUkX,MACzC7Z,KAAMzB,KAAKqxB,cAAcjtB,IAAI,QAAQkX,MACrCxO,KAAM9M,KAAKqxB,cAAcjtB,IAAI,QAAQkX,MACrCxK,KAAM9Q,KAAKqxB,cAAcjtB,IAAI,QAAQkX,OAEvCtb,KAAKixB,iBAAiBJ,eAAe7wB,KAAKqxB,cAAcjtB,IAAI,aAAakX,MAAMxa,GAAIgwB,GAAexkB,WAChG,WACExH,EAAK+Y,eAAe/L,IAAI,CACtBwR,QAAS,uCACTD,SAAU,YAEZve,EAAKwN,WAEP,WACExN,EAAK+Y,eAAe/L,IAAI,CACtBwR,QAAS,kCACTD,SAAU,cAMX0N,EAAApvB,UAAA8vB,YAAA,SAAYlf,GACjB,IAAM6a,EAAQ7a,EAAM6a,MAAMsE,cAC1B1xB,KAAK2xB,cAAgB3xB,KAAKoxB,MAAMjrB,QAAO,SAAA2K,GAAQ,OAAAA,EAAK4gB,cAAc1nB,SAASojB,OAGtE2D,EAAApvB,UAAA2Q,MAAA,SAAMC,GACXvS,KAAKoS,OAAOhB,MAAK,8BAtFpBE,EAAAA,UAASnO,KAAA,CAAC,CACT8M,SAAU,sBACVsB,SAAA,27GAbO+e,UACAN,EAAAA,mBACuCS,mCA+B3C9pB,EAAAA,OAAMxD,KAAA,CAACrD,YAzBHue,EAAAA,sBACA7Z,uCAQN6L,EAAAA,qBAEAA,EAAAA,sBAEAmB,EAAAA,6BCVD,SAAAogB,EAAmBniB,EAAuB6P,GAA1C,IAAAxa,EACE2kB,EAAAjP,KAAAxa,KAAMyP,EAAI6P,IAAKtf,YADE8E,EAAA2K,GAAAA,EAAuB3K,EAAAwa,KAAAA,WADF7E,GAAAmX,EAAAnI,GAKjCmI,EAAAjwB,UAAA8hB,gBAAA,WAAA,IAAA3e,EAAA9E,KACLA,KAAKsf,KAAKuS,mBAAkB,WAC1B,OAAQ/sB,EAAKgtB,cACX,IAAK,QACHhtB,EAAKitB,2BACL,MACF,IAAK,QACHjtB,EAAKktB,2BACL,MACF,IAAK,cAIL,IAAK,cACHltB,EAAKitB,2BACLjtB,EAAKktB,gCAMLJ,EAAAjwB,UAAAowB,yBAAA,WACN/xB,KAAKiyB,mBAAqBjyB,KAAK8Y,aAAaoZ,KAAKlyB,MACjDA,KAAKmyB,mBAAqBnyB,KAAKoyB,aAAaF,KAAKlyB,MACjDA,KAAKqyB,cAAgBryB,KAAKsT,QAAQ4e,KAAKlyB,MACvCA,KAAKyP,GAAGK,cAAcwiB,iBAAiB,aAActyB,KAAKiyB,oBAC1DjyB,KAAKyP,GAAGK,cAAcwiB,iBAAiB,aAActyB,KAAKmyB,oBAC1DnyB,KAAKyP,GAAGK,cAAcwiB,iBAAiB,QAAStyB,KAAKqyB,gBAG/CT,EAAAjwB,UAAAqwB,yBAAA,WACNhyB,KAAKuyB,cAAgBvyB,KAAKwyB,QAAQN,KAAKlyB,MACvCA,KAAKyyB,aAAezyB,KAAK0yB,OAAOR,KAAKlyB,MACrCA,KAAKyP,GAAGK,cAAcwiB,iBAAiB,QAAStyB,KAAKuyB,eACrDvyB,KAAKyP,GAAGK,cAAcwiB,iBAAiB,OAAQtyB,KAAKyyB,eAGtDjtB,OAAA0N,eAA4B0e,EAAAjwB,UAAA,eAAY,KAAxC,SAAyC6hB,GACvCxjB,KAAKwjB,KAAOA,sCA3C0BmP,EAAAA,8BAFzC3iB,EAAAA,UAAS7M,KAAA,CAAC,CAAE8M,SAAU,gEANrBE,EAAAA,kBACAgY,EAAAA,iDAiDC9X,EAAAA,MAAKlN,KAAA,CAAC,2BC2JSmpB,MAMlB,kCAzICppB,EAAAA,SAAQC,KAAA,CAAC,CACRI,aAAc,CACZ6b,GACAsM,GACAvU,GACAK,GACAzC,GACA6d,GACA1gB,GACA5B,GACAyC,GACAL,GACA2G,GACAvE,GACArD,GACAlC,GACAqiB,GACApd,GACA4U,GACAhV,GACAkX,GACAmC,GACAoF,GACApE,GACAsC,GACAd,IAEF7sB,QAAS,CACPC,EAAAA,aACAyvB,EAAAA,YACAC,EAAAA,oBAMAC,EAAAA,mBACAC,EAAAA,iBACAC,EAAAA,aACAC,EAAAA,eACAC,EAAAA,WACAC,EAAAA,eACAC,EAAAA,oBACAC,EAAAA,aACAC,EAAAA,oBACAC,EAAAA,eACAC,EAAAA,kBACAC,EAAAA,gBACAC,EAAAA,oBACAC,EAAAA,WACAC,EAAAA,cACAC,EAAAA,eACAC,EAAAA,mBACAC,EAAAA,YACAC,EAAAA,gBACAC,EAAAA,aACAC,EAAAA,aACAC,EAAAA,kBACAC,EAAAA,eACAC,EAAAA,YACAC,EAAAA,YACAC,EAAAA,mBACAC,EAAAA,cAEAC,EAAAA,iBACAC,EAAAA,2BAA2BC,UAE3BC,EAAAA,iBAEFxxB,QAAS,CACPwvB,EAAAA,YAGAE,EAAAA,mBACAC,EAAAA,iBACAC,EAAAA,aACAC,EAAAA,eACAC,EAAAA,WACAC,EAAAA,eACAC,EAAAA,oBACAC,EAAAA,aACAC,EAAAA,oBACAC,EAAAA,eACAC,EAAAA,kBACAC,EAAAA,gBACAC,EAAAA,oBACAC,EAAAA,WACAC,EAAAA,cACAC,EAAAA,eACAC,EAAAA,mBACAe,EAAAA,gBACAd,EAAAA,YACAC,EAAAA,gBACAC,EAAAA,aACAC,EAAAA,aACAY,EAAAA,mBACAV,EAAAA,eACAC,EAAAA,YACAC,EAAAA,YACAC,EAAAA,mBACAC,EAAAA,cAGAC,EAAAA,iBACAC,EAAAA,2BAGAxV,GACA/F,GACA+P,GACAtU,GACA4W,GACAtX,GACA3C,GACAlC,GACAqiB,GACAtG,GACAuH,IAEFoC,gBAAiB,CAACzgB,IAClBhR,UAAW,CACT0xB,EAAAA,yBAEA7M,EAAAA,cACA,CACE5kB,QAAS0xB,EAAAA,kBACTzxB,SAAUioB,GACV9nB,OAAO,GAET,CACEJ,QAASE,EAAAA,gBACTC,WAAUwxB,GACVvxB,OAAO,EACPC,KAAM,CAACU,EAAsB+jB,EAAAA,iBAAkBzoB,8MAhJlB2E,GACjC,OAAO,IAAI4wB,EAAAA,oBAAoB5wB,EAAM,4QAGKA,GAC1C,OAAO,IAAI6wB,EAAAA,yBAAyB7wB,EAAM,CACxC,CAAE8wB,OAAQ,iBAAkBC,OAAQ,SACpC,CAAED,OAAQ,4BAA6BC,OAAQ,+MCtErBC,EAAgBC,GAC5C,MAAO,CACLjyB,QAASiyB,GAAcjN,GACvBkN,YAAaC,EAAAA,YAAW,WAAM,OAAAH","sourcesContent":["import { InjectionToken } from '@angular/core';\r\nimport { IAuthService } from './iauth.service';\r\n\r\nexport interface LibConfig {\r\n  appId: string;\r\n  portalId: string;\r\n  /**\r\n   * If true, the tkit-module will not try to load remote env values from server(GET /assets/env.json)\r\n   */\r\n  skipRemoteConfigLoad: boolean;\r\n  /**\r\n   * URL from which the remote config will be loaded, default: '/assets/env.json'\r\n   */\r\n  remoteConfigURL: string;\r\n}\r\nexport const APP_CONFIG = new InjectionToken<LibConfig>('APP_CONFIG');\r\n\r\nexport const AUTH_SERVICE = new InjectionToken<IAuthService>('AUTH_SERVICE');\r\n","import { Injectable } from '@angular/core';\nimport { IAuthService } from '../api/iauth.service';\nimport { User } from '../api/model';\nimport { UserProfile } from '../api/model/user-profile.model';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { sampleUser } from './sample';\nimport { AvatarInfo } from '../api/model/avatar-info.model';\n\n@Injectable()\nexport class MockAuthService implements IAuthService {\n  private mockUser: UserProfile = {\n    person: {\n      displayName: 'Max Musterman',\n      firstName: 'Max',\n      lastName: 'Mustermann',\n      email: 'max.mustermann@capgemini.com'\n    },\n    accountSettings: {\n      localeAndTimeSettings: { locale: 'de', timezone: 'GMT' },\n      notificationSettings: {},\n      preferences: [],\n      privacySettings: {}\n    },\n    id: 'ID_MOCK_USER',\n    identityProvider: 'MOCK_TKIT_PORTAL_LIB',\n    identityProviderId: 'MOCK_ID',\n    roles: ['user', 'admin'],\n    memberships: [\n      {\n        application: 'APP1',\n        roleMemberships: [\n          {\n            role: 'user',\n            permissions: [\n              {\n                action: 'EDIT',\n                resource: 'ITEM',\n                name: 'Edit item',\n                key: 'ITEM#EDIT'\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  constructor() {}\n  currentUser(): UserProfile {\n    return this.mockUser;\n  }\n  getAvatar(): Observable<AvatarInfo> {\n    return of(this.mockUser.avatar);\n  }\n\n  public init(): Promise<boolean> {\n    return new Promise((resolve, reject) => resolve(true));\n  }\n\n  hasPermission(permissionKey: string): boolean {\n    return true;\n  }\n\n  logout() {\n    throw new Error('Method not implemented.');\n  }\n  getAuthProviderName() {\n    return 'MOCK_TKIT_PORTAL_LIB';\n  }\n  hasRole(role: string | string[]): boolean {\n    return true;\n  }\n  getRoles(): string[] {\n    return ['tkit-portal-admin'];\n  }\n}\n","import { NgModule, APP_INITIALIZER } from '@angular/core'\nimport { AUTH_SERVICE } from '../api/injection-tokens'\nimport { MockAuthService } from '../mock-auth/mock-auth.service'\nimport { CommonModule } from '@angular/common'\n\nexport function initializer(authService: MockAuthService): () => Promise<any> {\n  console.log(`Start Mock auth initializer`)\n\n  return (): Promise<any> =>\n    authService.init().then(res => {\n      console.log(`mock auth app_initializer resolved ${res}`)\n      return res\n    })\n}\n\n/**\n * Mock auth module providing mocked user profile and authnetication. For dev use only.\n */\n@NgModule({\n  imports: [CommonModule],\n  exports: [],\n  declarations: [],\n  providers: [\n    {\n      provide: AUTH_SERVICE,\n      useClass: MockAuthService,\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initializer,\n      multi: true,\n      deps: [AUTH_SERVICE],\n    },\n  ],\n})\nexport class MockAuthModule {}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Portal } from \"../model/portal\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { withCache } from \"@ngneat/cashew\";\n\n@Injectable({ providedIn: \"root\" })\nexport class PortalApiService {\n  constructor(private readonly httpClient: HttpClient) {}\n  baseUrl = \"./portal-api/v1/portals\";\n\n  getPortalData(portal: string): Observable<Portal> {\n    return this.httpClient.get<Portal>(\n      `${this.baseUrl}/${portal}`,\n      withCache()\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Injectable, Inject } from '@angular/core'\nimport { APP_CONFIG, LibConfig } from './injection-tokens'\nimport { PortalApiService } from './services/portal-api.service'\nimport { Portal } from './model/portal'\nimport { ReplaySubject } from 'rxjs'\n\nconst TKIT_PORTAL_ID = 'TKIT_PORTAL_ID'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigurationService {\n  public lang$ = new ReplaySubject<string>(1)\n\n  private customEnv: any\n  private portalData: Portal\n  error: any\n\n  constructor(\n    private http: HttpClient,\n    private portalService: PortalApiService,\n    @Inject(APP_CONFIG) private appConfig: LibConfig\n  ) {}\n\n  public init(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      if (this.appConfig.skipRemoteConfigLoad) {\n        console.log(\n          'TKA001: Remote config load is disabled. To enable it, remove the \"skipRemoteConfigLoad\" key in your environemnt.json'\n        )\n        this.customEnv = this.appConfig\n        resolve(false)\n      }\n      let loadConfigPromise: Promise<any>\n      // if we have Backend env vars injected in HTML, use it\n      console.log(`ENV resolved ${window['APP_CONFIG']}`)\n      if (window['APP_CONFIG']) {\n        loadConfigPromise = new Promise((resolve, reject) => {\n          resolve(window['APP_CONFIG'])\n        })\n      } else {\n        console.log('noooo moar http')\n        //otherwise fetch them from env.json\n        loadConfigPromise = this.http.get(this.appConfig.remoteConfigURL || 'assets/env.json').toPromise()\n      }\n\n      loadConfigPromise\n        .then(config => {\n          if (config) {\n            const sanitizedEnvValues = this.sanitizeConfig(config)\n            this.customEnv = { ...this.appConfig, ...sanitizedEnvValues }\n          }\n        })\n        .then(() => {\n          const portalId = this.customEnv[TKIT_PORTAL_ID] || 'PORTAL'\n\n          this.portalService\n            .getPortalData(portalId)\n            .toPromise()\n            .then(data => {\n              if (data) {\n                this.portalData = data\n              }\n              resolve(true)\n            })\n            .catch(err => {\n              console.log(`Failed to load portal data! ${JSON.stringify(err)}`)\n              this.portalData = { portalId: 'PORTAL' }\n              resolve(true)\n            })\n        })\n        .catch(e => {\n          console.log(`Failed to load env configuration`)\n          reject(e)\n        })\n    })\n  }\n\n  private sanitizeConfig(config: Object) {\n    return (\n      Object.keys(config)\n        // only take values that are interpolated/set\n        .filter(key => !(config[key] as string).startsWith('${'))\n        .reduce((obj, key) => {\n          obj[key] = config[key]\n          return obj\n        }, {})\n    )\n  }\n\n  public getProperty(key: string): string {\n    return this.customEnv[key]\n  }\n\n  public getPortalData(): Portal {\n    return this.portalData\n  }\n  public setLang(lang: string) {\n    console.log('[CONFIG SERVICE] SETTING LANG: ', lang)\n    this.lang$.next(lang)\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { Observable, ReplaySubject } from 'rxjs'\nimport { UserProfile, UserProfileAccountSettings } from '../model/user-profile.model'\nimport { UserPerson } from '../model/person.model'\nimport { shareReplay, switchMapTo, tap } from 'rxjs/operators'\nimport { AvatarInfo } from '../model/avatar-info.model'\nimport { ResetPasswordDTO } from '../model/resetPasswordDTO'\nimport { withCache } from '@ngneat/cashew'\n\n@Injectable({ providedIn: 'root' })\nexport class UserProfileService {\n  private url = './portal-api/v1/userProfile/me'\n  private personUrl = './portal-api/v1/userProfile/me/userPerson'\n  private avatarUrl = './portal-api/v1/userProfile/me/avatar'\n  private settingsUrl = './portal-api/v1/userProfile/me/settings'\n  private changePasswordUrl = './portal-api/v1/userProfile/me/change-password'\n\n  private refreshProfile$ = new ReplaySubject<void>(1)\n  private currentAvatar$ = new ReplaySubject<AvatarInfo>(1)\n\n  private currentUser$: Observable<UserProfile> = this.refreshProfile$.pipe(\n    switchMapTo(this.http.get<UserProfile>(this.url)),\n    shareReplay(1)\n  )\n\n  constructor(private http: HttpClient) {}\n\n  getCurrentUser(): Observable<UserProfile> {\n    return this.currentUser$\n  }\n\n  getUpdatedAvatar(): Observable<AvatarInfo> {\n    return this.currentAvatar$\n  }\n\n  updatePersonalInfo(person: UserPerson): Observable<UserPerson> {\n    return this.http.put(this.personUrl, person)\n    // .pipe(tap(() => this.refreshProfile()));\n  }\n\n  setUserAvatar(file: File): Observable<AvatarInfo> {\n    const formData = new FormData()\n    formData.append('file', file)\n    return this.http.put<AvatarInfo>(this.avatarUrl, formData).pipe(tap(avatar => this.currentAvatar$.next(avatar)))\n  }\n\n  removeAvatar() {\n    return this.http.delete(this.avatarUrl).pipe(tap(() => this.currentAvatar$.next(null)))\n  }\n\n  updateUserSettings(settings: UserProfileAccountSettings): Observable<UserPerson> {\n    return this.http.patch(this.settingsUrl, settings)\n  }\n\n  refreshProfile() {\n    this.refreshProfile$.next()\n  }\n\n  getUserSettings(): Observable<UserProfileAccountSettings> {\n    return this.http.get<UserProfileAccountSettings>(this.settingsUrl)\n  }\n\n  getCurrentUserFromBE(): Observable<UserProfile> {\n    return this.http.get<UserProfile>(this.url)\n  }\n\n  changeUserPassword(resetPasswordDTO: ResetPasswordDTO): Observable<any> {\n    return this.http.put<any>(this.changePasswordUrl, resetPasswordDTO)\n  }\n}\n","export const DEFAULT_AVATAR_URL = 'portal-lib/assets/images/default_avatar.png';\nexport const CONFIG_KEY_TKIT_PORTAL_DEFAULT_THEME = \"TKIT_PORTAL_DEFAULT_THEME\";\nexport const CONFIG_KEY_TKIT_PORTAL_DISABLE_THEME_MANAGEMENT = \"TKIT_PORTAL_DISABLE_THEME_MANAGEMENT\";\nexport const CONFIG_KEY_TKIT_PORTAL_THEME_SERVER_URL = \"TKIT_PORTAL_THEME_SERVER_URL\";\nexport const CONFIG_KEY_TKIT_TOKEN_ROLE_CLAIM_NAME = \"TKIT_TOKEN_ROLE_CLAIM_NAME\";\nexport const CONFIG_KEY_TKIT_PORTAL_ID= \"TKIT_PORTAL_ID\";\nexport const CONFIG_KEY_TKIT_SUPPORTED_LANGUAGES= \"TKIT_SUPPORTED_LANGUAGES\";\nexport const CONFIG_KEY_TKIT_SEARCH_BASE_URL = \"TKIT_SEARCH_BASE_URL\";\nexport const CONFIG_KEY_APP_BASE_HREF = \"APP_BASE_HREF\";\nexport const CONFIG_KEY_KEYCLOAK_REALM = \"KEYCLOAK_REALM\";\nexport const CONFIG_KEY_KEYCLOAK_ENABLE_SILENT_SSO = \"KEYCLOAK_ENABLE_SILENT_SSO\";\nexport const CONFIG_KEY_KEYCLOAK_URL = \"KEYCLOAK_URL\";\nexport const CONFIG_KEY_KEYCLOAK_CLIENT_ID = \"KEYCLOAK_CLIENT_ID\"\n","import { Injectable, NgZone } from '@angular/core'\nimport { KeycloakService, KeycloakEventType, KeycloakOptions } from 'keycloak-angular'\nimport { Observable, of, ReplaySubject } from 'rxjs'\nimport { ConfigurationService } from '../api/configuration.service'\nimport { IAuthService } from '../api/iauth.service'\nimport { User } from '../api/model'\nimport { AvatarInfo } from '../api/model/avatar-info.model'\nimport { UserProfile } from '../api/model/user-profile.model'\nimport { UserProfileService } from '../api/services/user-profile.service'\nimport { Router } from '@angular/router'\nimport {\n  CONFIG_KEY_KEYCLOAK_URL,\n  CONFIG_KEY_KEYCLOAK_CLIENT_ID,\n  CONFIG_KEY_KEYCLOAK_REALM,\n  CONFIG_KEY_KEYCLOAK_ENABLE_SILENT_SSO,\n} from '../tkit-portal/constants'\nimport { KeycloakConfig } from 'keycloak-js'\n\nconst KC_REFRESH_TOKEN_LS = 'kc_refreshToken'\nconst KC_ID_TOKEN_LS = 'kc_idToken'\nconst KC_TOKEN_LS = 'kc_token'\nconst TKIT_USER_PROFILE_LS = 'tkit_user_profile'\n\n@Injectable()\nexport class KeycloakAuthService implements IAuthService {\n  userProfile: UserProfile\n  avatarSubject: ReplaySubject<AvatarInfo>\n  private user: User = {\n    userId: 'anonymous',\n    userPerson: { firstName: 'Guest' },\n    functions: [],\n    roles: [],\n  }\n\n  constructor(\n    private keycloakService: KeycloakService,\n    private configService: ConfigurationService,\n    private userProfileService: UserProfileService,\n    private router: Router\n  ) {}\n\n  hasPermission(permissionKey: string): boolean {\n    return this.user.functions ? this.user.functions.includes(permissionKey) : false\n  }\n  currentUser(): UserProfile {\n    return this.userProfile\n  }\n  logout() {\n    this.clearKCStateFromLocalstorage()\n    this.keycloakService.logout()\n  }\n  getAuthProviderName() {\n    return 'Keycloak based Security'\n  }\n\n  public init(): Promise<boolean> {\n    console.log('Keycloak Auth initialization')\n    // load previous tokens, saved after successful login of keycloak success callback\n    let token = localStorage.getItem(KC_TOKEN_LS)\n    let idToken = localStorage.getItem(KC_ID_TOKEN_LS)\n    let refreshToken = localStorage.getItem(KC_REFRESH_TOKEN_LS)\n    if (token) {\n      const parsedToken = JSON.parse(atob(refreshToken.split('.')[1]))\n      console.log(`Got tokens in LC ${parsedToken.exp} ${parsedToken.sub}`)\n      if (parsedToken.exp * 1000 < new Date().getTime()) {\n        //refresh expired, drop everything\n        console.log(`Refresh token expired`)\n        token = undefined\n        refreshToken = undefined\n        idToken = undefined\n        this.clearKCStateFromLocalstorage()\n      }\n    }\n\n    this.setupEventListener()\n\n    // try constructing the KC config from values in env\n    let kcConfig: KeycloakConfig | string = {\n      url: this.configService.getProperty(CONFIG_KEY_KEYCLOAK_URL),\n      clientId:\n        this.configService.getProperty(CONFIG_KEY_KEYCLOAK_CLIENT_ID) || this.configService.getProperty('appId'),\n      realm: this.configService.getProperty(CONFIG_KEY_KEYCLOAK_REALM),\n    }\n    // If any of the required props is missing, fallback to loading KC conf from file\n    if (!kcConfig.clientId || !kcConfig.realm || !kcConfig.url) {\n      kcConfig = './assets/keycloak.json'\n    }\n\n    const enableSilentSSOCheck = this.configService.getProperty(CONFIG_KEY_KEYCLOAK_ENABLE_SILENT_SSO) === 'true'\n\n    const kcOptions: KeycloakOptions = {\n      loadUserProfileAtStartUp: false,\n      config: kcConfig,\n      initOptions: {\n        // onLoad: \"login-required\",\n        onLoad: 'check-sso',\n        checkLoginIframe: false,\n        silentCheckSsoRedirectUri: enableSilentSSOCheck ? this.getSilentSSOUrl() : undefined,\n        idToken,\n        refreshToken,\n        token,\n      },\n      enableBearerInterceptor: true,\n      bearerExcludedUrls: ['/assets'],\n    }\n\n    // console.log(`INit KC with ${JSON.stringify(kcOptions, null, 2)}`)\n    return this.keycloakService\n      .init(kcOptions)\n      .catch(err => {\n        console.log(`kc err ${err}, try force login`)\n        return this.keycloakService.login()\n      })\n      .then(loginOk => {\n        // this will be false if our silent login did not work\n        console.log(`Keycloak init done, loginOk?: ${loginOk}`)\n        if (loginOk) {\n          return this.keycloakService.getToken()\n        } else {\n          // we want to block bootstrap process now\n          return this.keycloakService.login().then(() => 'login')\n        }\n      })\n      .then(tokenString => {\n        const parsedToken = JSON.parse(atob(tokenString.split('.')[1]))\n        console.log(`fetching profile ${JSON.stringify(parsedToken)}`)\n        let profileFromCache =\n          localStorage.getItem(TKIT_USER_PROFILE_LS) &&\n          (JSON.parse(localStorage.getItem(TKIT_USER_PROFILE_LS)) as UserProfile)\n        if (profileFromCache) {\n          //if we have already a profile in LS, check if it is the smae user\n          if (profileFromCache.person.email === parsedToken['email']) {\n            //same user, take from LS and load async to refresh\n            this.refreshProfile()\n            console.log(`load user profile from cache(and reloading asynchronously)`)\n            return profileFromCache\n          } else {\n            console.log(`User profile in LS does not match Keycloak token`)\n            localStorage.removeItem(TKIT_USER_PROFILE_LS)\n          }\n        }\n        console.log(`load user profile from API`)\n        return this.userProfileService.getCurrentUserFromBE().toPromise()\n      })\n      .then(userProfile => {\n        // const parsedToken = JSON.parse(atob(results[1].split(\".\")[1]));\n\n        console.log(`Got user profile, update state`)\n        // this.updateUserFromKeycloak(results[0], parsedToken);\n        this.userProfile = userProfile\n        this.avatarSubject = new ReplaySubject<AvatarInfo>(1)\n        this.handleAvatarUpdate(this.userProfile.avatar)\n        this.userProfileService.getUpdatedAvatar().subscribe(avatar => this.handleAvatarUpdate(avatar))\n        this.updateUserFromUserProfile(this.userProfile)\n        localStorage.setItem(TKIT_USER_PROFILE_LS, JSON.stringify(userProfile))\n        console.log(`Keycloak auth init complete`)\n        return true\n      })\n      .catch(err => {\n        console.log(`KC ERROR ${err} as json ${JSON.stringify(err)}`)\n        throw err\n      })\n  }\n\n  public init2(): Promise<boolean> {\n    console.log('kc init 4')\n    // load previous tokens, saved after successful login of keycloak success callback\n    let token = localStorage.getItem(KC_TOKEN_LS)\n    let idToken = localStorage.getItem(KC_ID_TOKEN_LS)\n    let refreshToken = localStorage.getItem(KC_REFRESH_TOKEN_LS)\n    if (token) {\n      const parsedToken = JSON.parse(atob(refreshToken.split('.')[1]))\n      if (parsedToken.exp * 1000 < new Date().getTime()) {\n        //refresh expired, drop everything\n        console.log(`Refresh token expired`)\n        token = undefined\n        refreshToken = undefined\n        idToken = undefined\n        this.clearKCStateFromLocalstorage()\n      }\n    }\n\n    this.setupEventListener()\n\n    // try constructing the KC config from values in env\n    let kcConfig: KeycloakConfig | string = {\n      url: this.configService.getProperty(CONFIG_KEY_KEYCLOAK_URL),\n      clientId:\n        this.configService.getProperty(CONFIG_KEY_KEYCLOAK_CLIENT_ID) || this.configService.getProperty('appId'),\n      realm: this.configService.getProperty(CONFIG_KEY_KEYCLOAK_REALM),\n    }\n    // If any of the required props is missing, fallback to loading KC conf from file\n    if (!kcConfig.clientId || !kcConfig.realm || !kcConfig.url) {\n      kcConfig = './assets/keycloak.json'\n    }\n\n    const enableSilentSSOCheck = this.configService.getProperty(CONFIG_KEY_KEYCLOAK_ENABLE_SILENT_SSO) === 'true'\n\n    const kcOptions: KeycloakOptions = {\n      loadUserProfileAtStartUp: false,\n      config: kcConfig,\n      initOptions: {\n        // onLoad: \"login-required\",\n        onLoad: 'check-sso',\n        checkLoginIframe: false,\n        silentCheckSsoRedirectUri: enableSilentSSOCheck ? this.getSilentSSOUrl() : undefined,\n        idToken,\n        refreshToken,\n        token,\n      },\n      enableBearerInterceptor: true,\n      bearerExcludedUrls: ['/assets'],\n    }\n\n    console.log(`INit KC with ${JSON.stringify(kcOptions, null, 2)}`)\n\n    return (\n      this.keycloakService\n        .init(kcOptions)\n        .catch(err => {\n          console.log(`kc err ${err}, try force login`)\n          return this.keycloakService.login()\n        })\n        .then(ok => {\n          console.log(`After KC init ${ok}`)\n          return this.keycloakService.getToken()\n        })\n        .then(tokenString => {\n          if (tokenString) {\n            const parsedToken = JSON.parse(atob(tokenString.split('.')[1]))\n            console.log('fetching profile')\n            let profileFromCache\n            if ((profileFromCache = localStorage.getItem(TKIT_USER_PROFILE_LS))) {\n              console.log(`load user profile from cache`)\n              //if we have already a profile in LS, check if it is the smae user\n              if (profileFromCache['email'] === parsedToken['email']) {\n                //same user, take from LS and load async to refresh\n                this.refreshProfile()\n                return JSON.parse(profileFromCache) as UserProfile\n              } else {\n                console.log(`USer in LS does tno match. clear`)\n                localStorage.removeItem(TKIT_USER_PROFILE_LS)\n              }\n            }\n            console.log(`load user profile from API`)\n            return this.userProfileService.getCurrentUserFromBE().toPromise()\n          } else {\n            console.log(`no TOKEN AAAAA`)\n          }\n        })\n        // .then(ok => {\n        //   // return Promise.all([\n        //   //   this.keycloakService.loadUserProfile(),\n        //   //   this.keycloakService.getToken(),\n        //   //   this.userProfileService.getCurrentUserFromBE().toPromise()\n        //   // ]);\n        // })\n        .catch(err => {\n          console.log(`KC ERROR ${err}`)\n          throw err\n        })\n        .then(userProfile => {\n          // const parsedToken = JSON.parse(atob(results[1].split(\".\")[1]));\n\n          console.log(`Got user profile, update`)\n          // this.updateUserFromKeycloak(results[0], parsedToken);\n          this.userProfile = userProfile\n          this.avatarSubject = new ReplaySubject<AvatarInfo>(1)\n          this.handleAvatarUpdate(this.userProfile.avatar)\n          this.userProfileService.getUpdatedAvatar().subscribe(avatar => this.handleAvatarUpdate(avatar))\n          this.updateUserFromUserProfile(this.userProfile)\n          localStorage.setItem(TKIT_USER_PROFILE_LS, JSON.stringify(userProfile))\n          console.log(`KC init complete returnint`)\n          return true\n        })\n    )\n  }\n\n  private setupEventListener() {\n    this.keycloakService.keycloakEvents$.subscribe(ke => {\n      // console.log(\n      //   `KC Event ${ke.type} token: ${\n      //     this.keycloakService.getKeycloakInstance().token\n      //   }`\n      // );\n      // we are logged in, get tokens and store them in localstorage\n      if (this.keycloakService.getKeycloakInstance().token) {\n        localStorage.setItem(KC_TOKEN_LS, this.keycloakService.getKeycloakInstance().token)\n      } else {\n        localStorage.removeItem(KC_TOKEN_LS)\n      }\n      if (this.keycloakService.getKeycloakInstance().idToken) {\n        localStorage.setItem(KC_ID_TOKEN_LS, this.keycloakService.getKeycloakInstance().idToken)\n      } else {\n        localStorage.removeItem(KC_ID_TOKEN_LS)\n      }\n      if (this.keycloakService.getKeycloakInstance().refreshToken) {\n        localStorage.setItem(KC_REFRESH_TOKEN_LS, this.keycloakService.getKeycloakInstance().refreshToken)\n      } else {\n        localStorage.removeItem(KC_REFRESH_TOKEN_LS)\n      }\n      if (ke.type === KeycloakEventType.OnAuthLogout) {\n        console.log('SSO logout nav to root')\n        this.clearKCStateFromLocalstorage()\n        this.router.navigateByUrl('/')\n      }\n    })\n  }\n\n  private clearKCStateFromLocalstorage() {\n    localStorage.removeItem(KC_ID_TOKEN_LS)\n    localStorage.removeItem(KC_TOKEN_LS)\n    localStorage.removeItem(KC_REFRESH_TOKEN_LS)\n  }\n\n  private getSilentSSOUrl() {\n    let currentBase = document.getElementsByTagName('base')[0].href\n    if (currentBase === '/') {\n      currentBase = ''\n    }\n    return `${currentBase}/assets/silent-check-sso.html`\n  }\n\n  hasRole(role: string | string[]): boolean {\n    if (typeof role === 'string') {\n      const roleString = role as string\n      return this.user.roles.map(e => e.toUpperCase()).includes(roleString.toUpperCase())\n    } else {\n      return (\n        this.user.roles\n          .map(e => e.toUpperCase())\n          .filter(item => role.map(e => e.toUpperCase()).includes(item.toUpperCase())).length > 0\n      )\n    }\n  }\n\n  getRoles(): string[] {\n    return this.user.roles\n  }\n\n  refreshProfile() {\n    this.userProfileService.getCurrentUserFromBE().subscribe(profileData => {\n      this.userProfile = profileData\n      localStorage.setItem(TKIT_USER_PROFILE_LS, JSON.stringify(profileData))\n      this.updateUserFromUserProfile(this.userProfile)\n    })\n  }\n\n  loadFullProfile(): Observable<UserProfile> {\n    return this.userProfileService.getCurrentUser()\n  }\n\n  private handleAvatarUpdate(avatarInfo: AvatarInfo) {\n    if (avatarInfo?.avatarImageUrl && avatarInfo?.avatarSmallImageUrl) {\n      this.avatarSubject.next({\n        avatarImageUrl: 'portal-api' + avatarInfo.avatarImageUrl,\n        avatarSmallImageUrl: 'portal-api' + avatarInfo.avatarSmallImageUrl\n      });\n    } else {\n      this.avatarSubject.next(null)\n    }\n  }\n\n  getAvatar(): Observable<AvatarInfo> {\n    return this.avatarSubject.asObservable()\n  }\n\n  private updateUserFromUserProfile(userProfile: UserProfile) {\n    this.user = {\n      roles: userProfile.roles,\n      userId: userProfile.id,\n      principalId: userProfile.id,\n      commonName: userProfile.person.displayName,\n      userPerson: { ...userProfile.person },\n      functions: [],\n    }\n    if (this.userProfile.memberships) {\n      this.userProfile.memberships.forEach(m => {\n        m.roleMemberships.forEach(r => {\n          r.permissions.forEach(p => {\n            this.user.functions.push(p.key)\n          })\n        })\n      })\n    }\n  }\n}\n","/**\r\n * 1000kit internal api\r\n * API for portal\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport interface UserPerson {\r\n  firstName?: string;\r\n  lastName?: string;\r\n  displayName?: string;\r\n  email?: string;\r\n  address?: UserPersonAddress;\r\n  phone?: UserPersonPhone;\r\n}\r\n\r\nexport interface UserPersonAddress {\r\n  street?: string;\r\n  streetNo?: string;\r\n  city?: string;\r\n  postalCode?: string;\r\n  country?: string;\r\n}\r\n\r\nexport interface UserPersonPhone {\r\n  type?: PhoneType;\r\n  number?: string;\r\n}\r\n\r\nexport enum PhoneType {\r\n  MOBILE = 'MOBILE',\r\n  LANDLINE = 'LANDLINE'\r\n}\r\n","import { NgModule, APP_INITIALIZER } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { AUTH_SERVICE } from \"../api/injection-tokens\";\nimport { KeycloakAuthService } from \"./keycloak-auth.service\";\nimport { KeycloakAngularModule } from \"keycloak-angular\";\nimport {\n  HttpCacheInterceptorModule,\n  useHttpCacheLocalStorage\n} from \"@ngneat/cashew\";\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, KeycloakAngularModule],\n  exports: [KeycloakAngularModule],\n  providers: [\n    {\n      provide: AUTH_SERVICE,\n      useClass: KeycloakAuthService\n    }\n  ]\n})\nexport class AuthModule {}\n","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { MenuItem } from 'primeng/api';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BreadcrumbService {\r\n  private itemsSource = new Subject<MenuItem[]>();\r\n\r\n  itemsHandler = this.itemsSource.asObservable();\r\n\r\n  constructor() {}\r\n\r\n  setItems(items: MenuItem[]) {\r\n    this.itemsSource.next(items);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StateService {\n  private userSettingsActivatedTab: number;\n\n  public getUserSettingsActivatedTab(): number {\n    return this.userSettingsActivatedTab;\n  }\n  public setUserSettingsActivatedTab(tab: number): void {\n    this.userSettingsActivatedTab = tab;\n  }\n}\n","import {\r\n  Directive,\r\n  Input,\r\n  Renderer2,\r\n  ElementRef,\r\n  Inject,\r\n  ViewContainerRef,\r\n  TemplateRef,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { IAuthService } from '../../api/iauth.service';\r\nimport { AUTH_SERVICE } from '../../api/injection-tokens';\r\n\r\n@Directive({ selector: '[tkAction]' })\r\nexport class ActionDirective implements OnInit {\r\n  @Input() permission: string;\r\n  @Input() loaderState: boolean;\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private el: ElementRef,\r\n    // private templateRef: TemplateRef<any>,\r\n    private viewContainer: ViewContainerRef,\r\n    @Inject(AUTH_SERVICE) private authService: IAuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    console.log(`Action permission ${this.permission}`);\r\n    if (!this.authService.hasPermission(this.permission)) {\r\n      console.log(`Disable btn because no perm ${this.permission}`);\r\n      this.renderer.setAttribute(this.el.nativeElement, 'disabled', 'disabled');\r\n      this.viewContainer.clear();\r\n    }\r\n  }\r\n}\r\n","import { Component, HostBinding, Input, OnDestroy, OnInit, Output } from '@angular/core'\nimport { Subscription } from 'rxjs'\nimport { BreadcrumbService } from '../../../api/services/breadcrumb.service'\nimport { EventEmitter } from '@angular/core'\nimport { MenuItem } from 'primeng/api'\n\n@Component({\n  selector: 'tk-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss'],\n})\nexport class BreadcrumbComponent implements OnInit, OnDestroy {\n  subscription: Subscription\n\n  items: any[]\n\n  home: MenuItem\n\n  @Input()\n  disableBreadcrumbs: boolean\n  @Input()\n  fullPortalLayout: boolean\n  @Output()\n  openHelpPage: EventEmitter<any> = new EventEmitter()\n  @Output()\n  openHelpPageEditor: EventEmitter<any> = new EventEmitter()\n\n  constructor(private breadcrumbService: BreadcrumbService) {}\n\n  ngOnInit() {\n    this.subscription = this.breadcrumbService.itemsHandler.subscribe(response => {\n      this.items = response\n    })\n\n    this.home = { icon: 'pi pi-home', routerLink: '/' }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe()\n    }\n  }\n\n  onOpenHelpPageEditor(evt: any) {\n    this.openHelpPageEditor.emit(evt)\n  }\n\n  onOpenHelpPage(evt: any) {\n    this.openHelpPage.emit(evt)\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter\n} from \"@angular/core\";\n\n@Directive({\n  selector: \"[tkCollapsible]\"\n})\nexport class CollapsibleDirective {\n  constructor(private el: ElementRef) {\n    console.log(\n      `collapsible directive constructor ${el.nativeElement.classList}`\n    );\n    el.nativeElement.classList.add(\"collapsible\");\n  }\n\n  @Input() isCollapsed = true;\n\n  @Output() collapsed: EventEmitter<any> = new EventEmitter();\n  @Output() expanded: EventEmitter<any> = new EventEmitter();\n\n  toggle() {\n    this.isCollapsed ? this.show() : this.hide();\n  }\n\n  show() {\n    this.isCollapsed = false;\n  }\n\n  hide() {\n    this.isCollapsed = true;\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { Portal } from \"../../api/model/portal\";\n\n@Component({\n  selector: \"tk-footer\",\n  styles: [\n    `\n      .footer span {\n        vertical-align: middle;\n      }\n      .footer-right-segment a {\n        margin-left: 5px;\n        margin-right: 5px;\n      }\n      .footer-right-segment {\n        margin-right: 10px;\n        float: right;\n      }\n      .footer-left-segment {\n        margin-left: 15px;\n        float: left;\n      }\n      .footer-left-segment a {\n        color: #000000;\n      }\n    `\n  ],\n  template: `\n    <div \n      class=\"footer\"\n      id=\"footer\"\n      role=\"contentinfo\"\n    >\n      <span class=\"footer-left-segment\">\n        <a\n          *ngIf=\"homePortal.homePage; else withoutHref\"\n          [href]=\"homePortal.homePage\"\n        >\n          {{ homePortal.footerLabel }}\n        </a>\n        <ng-template #withoutHref>\n          <a>\n            {{ homePortal.footerLabel }}\n          </a>\n        </ng-template>\n        -\n        <span>&copy; All Rights Reserved</span>\n      </span>\n      <div class=\"footer-right-segment\">\n        <span class=\"links\" *ngFor=\"let link of homePortal.subjectLinks\">\n          <a [href]=\"link.url\">{{ link.label }}</a>\n        </span>\n      </div>\n    </div>\n  `\n})\nexport class AppFooterComponent {\n  @Input() homePortal: Portal;\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { HelpData } from '../../api/model';\n\n\n@Component({\n  selector: 'tk-help-editor',\n  template: `\n    <p-dialog\n      header=\"Edit help item for this page\"\n      [contentStyle]=\"{ overflow: 'visible' }\"\n      [style]=\"{ width: '500px', 'max-height': '400px' }\"\n      [(visible)]=\"display\"\n      (onHide)=\"close($event)\"\n    >\n      <div class=\"modal-content\">\n        <form class=\"p-grid p-fluid\">\n          <div class=\"p-col-12\">\n            <span class=\"p-float-label\">\n              <input\n                id=\"page\"\n                type=\"text\"\n                pInputText\n                name=\"page\"\n                disabled=\"true\"\n                [(ngModel)]=\"helpItem.helpItemId\"\n              />\n              <label for=\"page\">Page Item</label>\n            </span>\n          </div>\n          <div class=\"p-col-12\">\n            <span class=\"p-float-label\">\n              <input\n                id=\"baseUrl\"\n                type=\"text\"\n                pInputText\n                name=\"baseUrl\"\n                [(ngModel)]=\"helpItem.baseUrl\"\n              />\n              <label for=\"baseUrl\">Base Url</label>\n            </span>\n          </div>\n          <div class=\"p-col-12\">\n            <span class=\"p-float-label\">\n              <input\n                id=\"relUrl\"\n                type=\"text\"\n                pInputText\n                name=\"relUrl\"\n                [(ngModel)]=\"helpItem.resourceUrl\"\n              />\n              <label for=\"relUrl\">Relative Url</label>\n            </span>\n          </div>\n        </form>\n      </div>\n      <p-footer>\n        <button\n          pButton\n          class=\"primary\"\n          value=\"Save\"\n          label=\"Save\"\n          icon=\"pi pi-check\"\n          (click)=\"save()\"\n        ></button>\n        <button\n          pButton\n          icon=\"pi pi-times\"\n          class=\"flat\"\n          value=\"Cancel\"\n          label=\"Cancel\"\n          (click)=\"display = false\"\n        ></button>\n      </p-footer>\n    </p-dialog>\n  `\n})\nexport class HelpEditDialogComponent implements OnInit {\n  @Input() display = false;\n  @Input() helpItem: HelpData;\n  @Output() closed = new EventEmitter<boolean>();\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  public save() {\n    this.closed.emit(true);\n  }\n  public close(event: any) {\n    this.closed.emit(false);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpProgressLoaderService {\r\n  public isLoading = new BehaviorSubject(false);\r\n  constructor() {}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpProgressLoaderService } from '../http-progress-loader.service';\n\n@Component({\n  selector: 'tk-http-progress-loader',\n  template: `\n    <div class=\"wrapper\" [ngClass]=\"{ noshow: !loading }\">\n      <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"50\" cy=\"50\" r=\"45\" />\n      </svg>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n        height: 36px;\n      }\n      .wrapper {\n        position: absolute;\n        opacity: 1;\n      }\n      .wrapper.noshow {\n        -webkit-transition: opacity 1s linear;\n        -moz-transition: opacity 1s linear;\n        -o-transition: opacity 1s linear;\n        transition: opacity 1s linear;\n        opacity: 0;\n      }\n      svg {\n        animation: 2s linear infinite svg-animation;\n        width: 36px;\n      }\n\n      .noshow svg {\n        animation: none;\n      }\n\n      @keyframes svg-animation {\n        0% {\n          transform: rotateZ(0deg);\n        }\n        100% {\n          transform: rotateZ(360deg);\n        }\n      }\n\n      circle {\n        animation: 1.4s ease-in-out infinite both circle-animation;\n        display: block;\n        fill: transparent;\n        stroke: #ffffff;\n        stroke-linecap: round;\n        stroke-dasharray: 283;\n        stroke-dashoffset: 280;\n        stroke-width: 10px;\n        transform-origin: 50% 50%;\n      }\n\n      @keyframes circle-animation {\n        0%,\n        25% {\n          stroke-dashoffset: 280;\n          transform: rotate(0);\n        }\n\n        50%,\n        75% {\n          stroke-dashoffset: 75;\n          transform: rotate(45deg);\n        }\n\n        100% {\n          stroke-dashoffset: 280;\n          transform: rotate(360deg);\n        }\n      }\n    `\n  ]\n})\nexport class HttpProgressLoaderComponent implements OnInit {\n  loading: boolean;\n  constructor(private loaderService: HttpProgressLoaderService) {\n    this.loaderService.isLoading.subscribe(v => {\n      this.loading = v;\n    });\n  }\n\n  ngOnInit() {}\n}\n","import {Component, EventEmitter, Inject, Input, OnInit, Output} from '@angular/core';\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger\n} from '@angular/animations';\nimport { AUTH_SERVICE } from '../../api/injection-tokens';\nimport { IAuthService } from '../../api/iauth.service';\nimport { UserProfile } from '../../api/model/user-profile.model';\nimport { DEFAULT_AVATAR_URL } from '../constants';\nimport { AvatarInfo } from '../../api/model/avatar-info.model';\nimport { Router } from '@angular/router';\nimport { ConfigurationService } from '../../api/configuration.service';\n\n@Component({\n  selector: 'tk-inline-profile',\n  templateUrl: 'inline-profile.component.html',\n  styleUrls: ['./inline-profile.component.scss'],\n  animations: [\n    trigger('menu', [\n      state('hiddenAnimated', style({\n        height: '0px',\n        paddingBottom: '0px',\n        overflow: 'hidden'\n      })),\n      state('visibleAnimated', style({\n        height: '*',\n        overflow: 'visible'\n      })),\n      state('visible', style({\n        opacity: 1,\n        'z-index': 100\n      })),\n      state('hidden', style({\n        opacity: 0,\n        'z-index': '*'\n      })),\n      transition('visibleAnimated => hiddenAnimated', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),\n      transition('hiddenAnimated => visibleAnimated', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),\n      transition('visible => hidden', animate('.1s linear')),\n      transition('hidden => visible', [style({transform: 'scaleY(0.8)'}), animate('.12s cubic-bezier(0, 0, 0.2, 1)')])\n    ])\n  ]\n})\nexport class AppInlineProfileComponent implements OnInit {\n  defaultAvatarUrl = DEFAULT_AVATAR_URL;\n  userProfile: UserProfile;\n  userAvatar: AvatarInfo;\n\n  @Input()\n  inlineMenuActive: boolean\n\n  @Output()\n  inlineMenuClick: EventEmitter<null> = new EventEmitter();\n\n  get displayName() {\n    const person = this.userProfile?.person;\n    if (person?.displayName) {\n      return person.displayName;\n    } else if (person?.firstName && person.lastName) {\n      return person.firstName + ' ' + person.lastName;\n    } else {\n      return this.authService.currentUser().userId;\n    }\n  }\n\n  get baseUrl() {\n    return this.configService.getPortalData().baseUrl;\n  }\n\n  get tabIndex() {\n    return !this.inlineMenuActive ? '-1' : null;\n  }\n\n  constructor(\n    @Inject(AUTH_SERVICE) private authService: IAuthService,\n    private router: Router,\n    private configService: ConfigurationService\n  ) {}\n\n  ngOnInit() {\n    this.userProfile = this.authService.currentUser();\n    this.authService\n      .getAvatar()\n      .subscribe(avatar => (this.userAvatar = avatar));\n  }\n\n  onClick(event) {\n    this.inlineMenuClick.emit(null);\n    event.preventDefault();\n  }\n\n  logout(event: Event) {\n    event.preventDefault();\n    this.authService.logout();\n  }\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'tk-loading',\r\n  templateUrl: './loading.component.html',\r\n  styleUrls: ['./loading.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LoadingComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog/';\n\n@Component({\n  template: `\n    <div>\n      <div class=\"dialog-content\">\n        <span\n          >No help was found for this item. Please ask your system administrator\n          to add it. The context ID for this page is below:</span\n        >\n        <span class=\"code p-my-2\">{{ pageId }}</span>\n      </div>\n      <div class=\"dialog-footer\">\n        <div class=\"p-col p-fluid\">\n          <button\n            type=\"button\"\n            pButton\n            label=\"Close\"\n            (click)=\"close()\"\n          ></button>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .code {\n        display: block;\n        clear: both;\n        padding: 0.5em;\n        font-family: monospace;\n        background-color: #ececec;\n        border-radius: 4px;\n      }\n    `\n  ]\n})\nexport class NoHelpInfoComponent implements OnInit {\n  pageId: string;\n\n  constructor(\n    public config: DynamicDialogConfig,\n    public ref: DynamicDialogRef\n  ) {\n    this.pageId = config.data.pageItem;\n  }\n\n  ngOnInit() {}\n\n  close() {\n    this.ref.close();\n  }\n}\n","import { Component, OnInit, Input, TemplateRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'tk-panel-header',\r\n  template: `\r\n    <div class=\"panel-header\">\r\n      <div class=\"panel-toolbar-left\">\r\n        <ng-container\r\n          *ngTemplateOutlet=\"leftToolbar ? leftToolbar : defaultLeftToolbar\"\r\n        ></ng-container>\r\n      </div>\r\n      <h1 class=\"panel-heading\">{{ header }}</h1>\r\n      <div class=\"panel-toolbar-right\">\r\n        <ng-container\r\n          *ngTemplateOutlet=\"rightToolbar ? rightToolbar : defaultRightToolbar\"\r\n        ></ng-container>\r\n      </div>\r\n    </div>\r\n\r\n    <ng-template #defaultLeftToolbar> </ng-template>\r\n    <ng-template #defaultRightToolbar> </ng-template>\r\n  `,\r\n  styles: [\r\n    `\r\n      .panel-header {\r\n        display: flex;\r\n      }\r\n      .panel-heading {\r\n        margin: 0px;\r\n        line-height: 30px;\r\n        font-weight: 100;\r\n      }\r\n      .panel-toolbar-right {\r\n        margin-left: auto;\r\n      }\r\n      .panel-toolbar-left,\r\n      .panel-toolbar-right {\r\n        display: flex;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class PanelHeaderComponent implements OnInit {\r\n  @Input() header: string;\r\n  @Input() leftToolbar: TemplateRef<any>;\r\n  @Input() rightToolbar: TemplateRef<any>;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { Component, ElementRef, EventEmitter, Inject, Input, OnInit, Output, ViewChild } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { IAuthService } from '../../../api/iauth.service'\nimport { AUTH_SERVICE } from '../../../api/injection-tokens'\nimport { AvatarInfo } from '../../../api/model/avatar-info.model'\nimport { UserProfile } from '../../../api/model/user-profile.model'\nimport { CONFIG_KEY_TKIT_SEARCH_BASE_URL, DEFAULT_AVATAR_URL } from '../../constants'\nimport { ConfigurationService } from '../../../api/configuration.service'\nimport { StateService } from '../../../api/state.service'\nimport { Router } from '@angular/router'\nimport { animate, AnimationEvent, style, transition, trigger } from '@angular/animations'\n\n@Component({\n  selector: 'tk-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  animations: [\n    trigger('topbarActionPanelAnimation', [\n      transition(':enter', [\n        style({ opacity: 0, transform: 'scaleY(0.8)' }),\n        animate('.12s cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 1, transform: '*' })),\n      ]),\n      transition(':leave', [animate('.1s linear', style({ opacity: 0 }))]),\n    ]),\n  ],\n})\nexport class HeaderComponent implements OnInit {\n  defaultAvatarUrl = DEFAULT_AVATAR_URL\n  menuExpanded: boolean\n  menuItems: any\n  userProfile: UserProfile\n  userDisplayName: string\n  userAvatar: Observable<AvatarInfo>\n  searchUrl: string\n\n  @ViewChild('searchInput') searchInputViewChild: ElementRef\n\n  mobileTopbarActive: boolean\n\n  // TODO doesn't always work (cd related?)\n  @Input()\n  menuButtonTitle: string\n  @Output()\n  menuButtonClick: EventEmitter<any> = new EventEmitter()\n  @Output()\n  topbarItemClick: EventEmitter<any> = new EventEmitter()\n  @Output()\n  openHelpPage: EventEmitter<any> = new EventEmitter()\n  @Output()\n  openHelpPageEditor: EventEmitter<any> = new EventEmitter()\n  @Output()\n  openFeedback: EventEmitter<any> = new EventEmitter()\n  @Output()\n  openAddToLaunchpad: EventEmitter<any> = new EventEmitter()\n  @Output()\n  openSupportTicket: EventEmitter<any> = new EventEmitter()\n  @Output()\n  searchClick: EventEmitter<any> = new EventEmitter()\n  @Input()\n  profileMode: string\n  @Input()\n  isHorizontal: boolean\n  @Input()\n  activeTopbarItem: any\n  @Input()\n  disableBreadcrumbs: boolean\n  @Input()\n  fullPortalLayout: boolean\n  @Input()\n  search: boolean\n\n  @Input()\n  homeNavUrl = '/'\n  @Input()\n  homeNavTitle = 'Home'\n\n  constructor(\n    @Inject(AUTH_SERVICE) private authService: IAuthService,\n    private config: ConfigurationService,\n    private stateService: StateService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.userProfile = this.authService.currentUser()\n    this.userAvatar = this.authService.getAvatar()\n    this.userDisplayName = this.authService.currentUser().person.displayName\n    this.searchUrl = this.config.getProperty(CONFIG_KEY_TKIT_SEARCH_BASE_URL) || '/ops/enterprise-search'\n  }\n\n  clickMenu() {\n    console.log('Menu click')\n    this.menuExpanded = !this.menuExpanded\n  }\n\n  navigateTo(path: string, event: Event) {\n    event.preventDefault()\n    path = this.config.getPortalData().baseUrl + path\n    location.assign(path)\n  }\n\n  logout(event: Event) {\n    event.preventDefault()\n    this.authService.logout()\n  }\n\n  onMenuButtonClick(e: Event) {\n    this.menuButtonClick.emit(e)\n  }\n  onTopbarItemClick(e: Event, arg: any) {\n    this.topbarItemClick.emit({ event: e, arg })\n  }\n  onOpenHelpPageEditor(e: Event) {\n    this.openHelpPageEditor.emit(e)\n  }\n  onOpenHelpPage(e: Event) {\n    this.openHelpPage.emit(e)\n  }\n  onOpenFeedback(e: Event) {\n    this.openFeedback.emit(e)\n  }\n  onAddToFavourites(e: Event) {\n    this.openAddToLaunchpad.emit(e)\n  }\n  onOpenSupportTicket(e: Event) {\n    this.openSupportTicket.emit(e)\n  }\n\n  onTopbarMobileButtonClick($event: MouseEvent) {\n    this.mobileTopbarActive = !this.mobileTopbarActive\n    $event.preventDefault()\n  }\n\n  onSearchClick(e: Event, val: boolean) {\n    this.searchClick.emit({ event: e, val })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MenuService {\n\n    private menuSource = new Subject<string>();\n    private resetSource = new Subject();\n\n    menuSource$ = this.menuSource.asObservable();\n    resetSource$ = this.resetSource.asObservable();\n\n    onMenuStateChange(key: string) {\n        this.menuSource.next(key);\n    }\n\n    reset() {\n        this.resetSource.next();\n    }\n}\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {MenuItem} from 'primeng/api';\nimport {MenuService} from '../../../api/services/menu.service'\nimport {Subscription} from \"rxjs\";\nimport {NavigationEnd, Router} from \"@angular/router\";\nimport {filter} from \"rxjs/operators\";\n\n@Component({\n  selector: 'tk-menu',\n  templateUrl: 'portal-menu.component.html',\n})\nexport class AppMenuComponent {\n  @Input()\n  menuActive: boolean;\n  @Input()\n  isStatic: boolean;\n  @Input()\n  isHorizontal: boolean;\n  @Input()\n  isMobile: boolean;\n  @Input()\n  isDesktop: boolean;\n  @Input()\n  isSlim: boolean;\n  @Input()\n  menuHoverActive: boolean;\n  @Input()\n  mobileMenuActive: boolean;\n\n  @Input()\n  set portalMenu(items: MenuItem[]) {\n    this.menuWithRoot = {\n      label: 'Menu',\n      icon: 'list',\n      items: items\n    }\n  }\n\n  @Output()\n  menuActiveChange: EventEmitter<boolean> = new EventEmitter();\n  @Output()\n  mobileMenuActiveChange: EventEmitter<boolean> = new EventEmitter();\n\n  menuWithRoot: MenuItem;\n\n  constructor() {}\n}\n\n@Component({\n  /* eslint-disable @angular-eslint/component-selector */\n  selector: '[tk-submenu]',\n  /* eslint-enable @angular-eslint/component-selector */\n  template: `\n    <ng-container>\n        <div *ngIf=\"root\">\n          <span class=\"layout-menuitem-text\">{{item.label}}</span>\n        </div>\n        <a [attr.href]=\"item.url\" (click)=\"itemClick($event)\" *ngIf=\"!item.routerLink || item.items\" (keydown.enter)=\"itemClick($event)\"\n           [attr.target]=\"item.target\" [attr.tabindex]=\"0\" (mouseenter)=\"onMouseEnter()\" pRipple>\n          <i [ngClass]=\"'pi-' + item.icon\" class=\"layout-menuitem-icon pi pi-fw\"></i>\n          <span class=\"layout-menuitem-text\">{{item.label}}</span>\n          <span class=\"p-badge p-component p-badge-no-gutter\" *ngIf=\"item.badge && !root\">{{item.badge}}</span>\n          <i class=\"pi pi-fw pi-angle-down layout-submenu-toggler\" *ngIf=\"item.items\"></i>\n        </a>\n        <a (click)=\"itemClick($event)\" *ngIf=\"item.routerLink && !item.items\"\n           [routerLink]=\"item.routerLink\" routerLinkActive=\"active-menuitem-routerlink\" [routerLinkActiveOptions]=\"{exact: true}\"\n           [attr.target]=\"item.target\" [attr.tabindex]=\"0\" (mouseenter)=\"onMouseEnter()\" pRipple>\n          <i [ngClass]=\"'pi-' + item.icon\" class=\"layout-menuitem-icon pi pi-fw\"></i>\n          <span class=\"layout-menuitem-text\">{{item.label}}</span>\n          <span class=\"p-badge p-component p-badge-no-gutter\" *ngIf=\"item.badge && !root\">{{item.badge}}</span>\n          <i class=\"pi pi-fw pi-angle-down layout-submenu-toggler\" *ngIf=\"item.items\"></i>\n        </a>\n        <ul *ngIf=\"(item.items && root) || (item.items && active)\" [@children]=\"root ? 'visible' : active ? 'visibleAnimated' : 'hiddenAnimated'\">\n          <ng-template ngFor let-child let-i=\"index\" [ngForOf]=\"item.items\">\n            <li tk-submenu [item]=\"child\" [index]=\"i\" [parentKey]=\"key\"></li>\n          </ng-template>\n        </ul>\n    </ng-container>\n  `,\n  host: {\n    '[class.layout-root-menuitem]': 'root || active',\n    '[class.active-menuitem]': '(active)'\n  },\n  animations: [\n    trigger('children', [\n      state('void', style({\n        height: '0px',\n        padding: '0px'\n      })),\n      state('hiddenAnimated', style({\n        height: '0px',\n        padding: '0px'\n      })),\n      state('visibleAnimated', style({\n        height: '*'\n      })),\n      state('visible', style({\n        height: '*'\n      })),\n      state('hidden', style({\n        height: '0px',\n        padding: '0px'\n      })),\n      transition('visibleAnimated => hiddenAnimated', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),\n      transition('hiddenAnimated => visibleAnimated', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),\n      transition('void => visibleAnimated, visibleAnimated => void',\n          animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n    ])\n  ]\n})\nexport class AppSubMenuComponent implements OnInit, OnDestroy {\n  @Input() item: MenuItem;\n\n  @Input() root: boolean;\n\n  @Input() visible: boolean;\n\n  @Input() index: number;\n\n  @Input() parentKey: string;\n\n  @Input()\n  menuActive: boolean;\n  @Input()\n  isStatic: boolean;\n  @Input()\n  isHorizontal: boolean;\n  @Input()\n  isMobile: boolean;\n  @Input()\n  isDesktop: boolean;\n  @Input()\n  isSlim: boolean;\n  @Input()\n  menuHoverActive: boolean;\n  @Input()\n  mobileMenuActive: boolean;\n\n  @Output()\n  menuActiveChange: EventEmitter<boolean> = new EventEmitter();\n  @Output()\n  mobileMenuActiveChange: EventEmitter<boolean> = new EventEmitter();\n\n  active = false;\n\n  menuSourceSubscription: Subscription;\n\n  menuResetSubscription: Subscription;\n\n  key: string;\n\n  constructor(private menuService: MenuService, private router: Router) {}\n\n  ngOnInit() {\n    this.menuSourceSubscription = this.menuService.menuSource$.subscribe(key => {\n      // deactivate current active menu\n      if (this.active && this.key !== key && key.indexOf(this.key) !== 0) {\n        this.active = false;\n      }\n    });\n\n    this.menuResetSubscription = this.menuService.resetSource$.subscribe(() => {\n      this.active = false;\n    })\n\n    // TODO Ultima11: Verify if this logic works with our setup\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd))\n        .subscribe(params => {\n          if (this.isSlim) {\n            this.active = false;\n          } else {\n            if (this.item.routerLink) {\n              this.updateActiveStateFromRoute();\n            } else {\n              this.active = false;\n            }\n          }\n        });\n\n    if ((this.isHorizontal || this.isSlim) && this.item.routerLink) {\n      this.updateActiveStateFromRoute()\n    }\n\n    this.key = this.parentKey ? this.parentKey + '-' + this.index : String(this.index);\n  }\n\n  ngOnDestroy() {\n    if (this.menuSourceSubscription) {\n      this.menuSourceSubscription.unsubscribe();\n    }\n\n    if (this.menuResetSubscription) {\n      this.menuResetSubscription.unsubscribe();\n    }\n  }\n\n  updateActiveStateFromRoute() {\n    this.active = this.router.isActive(this.item.routerLink[0], !this.item.items);\n  }\n\n\n  itemClick(event: Event) {\n    // avoid processing disabled items\n    if (this.item.disabled) {\n      event.preventDefault();\n      return true;\n    }\n\n    this.menuService.onMenuStateChange(this.key)\n\n    // execute command\n    if (this.item.command) {\n      this.item.command({ originalEvent: event, item: this.item });\n    }\n\n    if (this.item.items) {\n      this.active = !this.active;\n    } else {\n      this.active = true;\n\n      if (this.isHorizontal || this.isSlim) {\n        this.menuService.reset();\n        this.menuHoverActive = false;\n      }\n\n      if (!this.isStatic) {\n        this.menuActiveChange.emit(false);\n      }\n\n      this.mobileMenuActiveChange.emit(false);\n    }\n\n    // prevent hash change\n    if (this.item.items || (!this.item.url && !this.item.routerLink)) {\n      // TODO https://github.com/primefaces/primeng/issues/8751\n      // setTimeout(() => {\n      //   this.app.layoutMenuScrollerViewChild.moveBar();\n      // }, 450);\n      event.preventDefault();\n    }\n  }\n\n  onMouseEnter() {\n    if (\n      this.root &&\n      this.menuHoverActive &&\n      (this.isHorizontal || this.isSlim) &&\n      this.isDesktop\n    ) {\n      this.menuService.onMenuStateChange(this.key);\n      this.active = true;\n    }\n  }\n\n}\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ElementRef,\r\n  ContentChild,\r\n  Inject,\r\n  Injector\r\n} from '@angular/core';\r\nimport { CollapsibleDirective } from '../collapsible.directive';\r\nimport { IAuthService } from '../../../api/iauth.service';\r\nimport { AUTH_SERVICE } from '../../../api/injection-tokens';\r\n\r\n@Component({\r\n  selector: 'tk-portal-page',\r\n  templateUrl: './portal-page.component.html',\r\n  styleUrls: ['./portal-page.component.css']\r\n})\r\nexport class PortalPageComponent implements OnInit {\r\n  @Input() header: string;\r\n  @Input() permission: string;\r\n  @Input() helpArticleId: string;\r\n  @Input() leftToolbar: TemplateRef<any>;\r\n  @Input() rightToolbar: TemplateRef<any>;\r\n\r\n  @ContentChild(CollapsibleDirective, { read: ElementRef })\r\n  collapsible2: ElementRef;\r\n\r\n  collapsed = false;\r\n\r\n  authService: IAuthService;\r\n\r\n  constructor(private injectorObj: Injector) {\r\n    this.authService = this.injectorObj.get(AUTH_SERVICE);\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  doSomething() {\r\n    alert('Hey it worked!');\r\n  }\r\n\r\n  hasAccess() {\r\n    return this.permission\r\n      ? this.authService.hasPermission(this.permission)\r\n      : true;\r\n  }\r\n\r\n  collapse() {\r\n    this.collapsible2.nativeElement.classList.add('hidden');\r\n    this.collapsed = true;\r\n  }\r\n  expand() {\r\n    this.collapsible2.nativeElement.classList.remove('hidden');\r\n    this.collapsed = false;\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { SearchTemplate } from '../model/search-template.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SearchTemplateAPIService {\r\n  private readonly baseUrl: string = './portal-api/v1/searchTemplates';\r\n\r\n  private readonly httpOptions: { [key: string]: any } = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json'\r\n    })\r\n  };\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getSearchTemplatesLegacy(\r\n    user: string,\r\n    application: string,\r\n    page: string,\r\n    includeGlobal = true\r\n  ): Observable<SearchTemplate[]> {\r\n    return this.httpClient.post<SearchTemplate[]>(\r\n      `${this.baseUrl}/search/criteria`,\r\n      {\r\n        application,\r\n        page,\r\n        user,\r\n        includeGlobal\r\n      },\r\n      this.httpOptions\r\n    );\r\n  }\r\n\r\n  getTemplateById(id: string): Observable<SearchTemplate> {\r\n    return this.httpClient.get<SearchTemplate>(\r\n      `${this.baseUrl}/${id}`,\r\n      this.httpOptions\r\n    );\r\n  }\r\n\r\n  createNewTemplate(template: SearchTemplate): Observable<SearchTemplate> {\r\n    return this.httpClient.post<SearchTemplate>(\r\n      `${this.baseUrl}`,\r\n      template,\r\n      this.httpOptions\r\n    );\r\n  }\r\n\r\n  updateTemplate(\r\n    id: string,\r\n    template: SearchTemplate\r\n  ): Observable<SearchTemplate> {\r\n    return this.httpClient.put<SearchTemplate>(\r\n      `${this.baseUrl}/${id}`,\r\n      template,\r\n      this.httpOptions\r\n    );\r\n  }\r\n\r\n  deleteTemplate(id: string): Observable<boolean> {\r\n    return this.httpClient.delete<boolean>(`${this.baseUrl}/${id}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { stringify } from 'querystring';\nimport { HelpData } from '../model/help-data.model';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nconst baseUrl = './ahm-api/internal/applications';\n\n@Injectable({ providedIn: 'root' })\nexport class HelpPageAPIService {\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n  constructor(private httpClient: HttpClient) {}\n\n  getHelpDataItem(\n    appId: string,\n    helpItemId: string,\n    type = 'PAGE'\n  ): Observable<HelpData> {\n    return this.httpClient\n      .get<HelpData[]>(`${baseUrl}/${appId}/helpItems`, {\n        params: {\n          helpItemId\n        }\n      })\n      .pipe(map(helpItems => helpItems[0]));\n  }\n\n  getHelpDataItemLegacy(\n    appId: string,\n    context: string,\n    type = 'PAGE'\n  ): Observable<HelpData> {\n    console.log(\n      `About to go to ${baseUrl}/helpdata/${appId}/${encodeURIComponent(\n        context\n      )}`\n    );\n    return this.httpClient.post<HelpData>(\n      `${baseUrl}/helpdata/${appId}/${encodeURIComponent(context)}`,\n      `\"${type}\"`,\n      {\n        headers: {\n          'Content-Type': 'application/v1+json',\n          Accept: 'application/v1+json'\n        }\n      }\n    );\n  }\n\n  saveHelpPage(\n    appId: string,\n    helpItem: HelpData\n  ): Observable<HttpResponse<any>> {\n    if (helpItem.id) {\n      return this.httpClient.patch(\n        `${baseUrl}/${appId}/helpItems/${helpItem.id}`,\n        helpItem,\n        {\n          observe: 'response'\n        }\n      );\n    } else {\n      return this.httpClient.post(`${baseUrl}/${appId}/helpItems`, helpItem, {\n        observe: 'response'\n      });\n    }\n  }\n\n  saveHelpPageLegacy(helpItem: HelpData): Observable<HttpResponse<any>> {\n    return this.httpClient.post(`${baseUrl}/helpdata`, helpItem, {\n      headers: {\n        'Content-Type': 'application/v1+json',\n        Accept: 'application/v1+json'\n      },\n      observe: 'response'\n    });\n  }\n}\n","export interface PortalPage {\r\n  helpArticleId: string;\r\n}\r\n\r\nexport function isTkitPage(object: any): object is PortalPage {\r\n  return 'helpArticleId' in object;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ConfigurationService } from '../configuration.service';\r\n\r\nconst defaultThemeServerUrl = 'http://portal-theme-management:8080';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ThemeService {\r\n  themeServerUrl: string;\r\n\r\n  constructor(private configservice: ConfigurationService) {\r\n    this.themeServerUrl =\r\n      this.configservice.getProperty('TKIT_PORTAL_THEME_SERVER_URL') ||\r\n      defaultThemeServerUrl;\r\n  }\r\n\r\n  getThemeHref(theme: string): string {\r\n    return `${this.themeServerUrl}/themes/${theme}/${theme}.min.css`;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable, of } from 'rxjs'\nimport { catchError, tap } from 'rxjs/operators'\nimport { PortalMenuItem } from '../model/menu-item.model'\nimport { MessageService } from 'primeng/api'\nimport { withCache } from '@ngneat/cashew'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MenuApiService {\n  private menuUrl = './portal-api/legacy/menustructure' // URL to web api\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  }\n\n  constructor(private http: HttpClient, private messageService: MessageService) {}\n\n  getMenuItems(portalId: String): Observable<PortalMenuItem[]> {\n    return this.http\n      .get<PortalMenuItem[]>(`${this.menuUrl}/${portalId}`, withCache())\n      .pipe(catchError(this.handleError<PortalMenuItem[]>('getMenuItems', [])))\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error) // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}, will return ${JSON.stringify(result)}`)\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T)\n    }\n  }\n\n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    console.log(message)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FeedbackDTO } from '../model/feedback.model';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({ providedIn: 'root' })\nexport class FeedbackApiService {\n  url = './portal-api/v1/feedback/send';\n\n  constructor(private http: HttpClient) {}\n\n  public sendFeedback(feedback: FeedbackDTO) {\n    return this.http.post(this.url, feedback);\n  }\n}\n","import {\n  Component,\n  AfterViewInit,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  Renderer2,\n  NgZone,\n  Input,\n  Inject,\n} from '@angular/core'\nimport { ScrollPanel } from 'primeng/scrollpanel'\nimport {\n  NavigationStart,\n  NavigationEnd,\n  NavigationError,\n  Router,\n  Event,\n  ActivatedRoute,\n  ActivationEnd,\n} from '@angular/router'\nimport { HelpPageAPIService } from '../../../api/services/help-page-api.service'\nimport { MessageService, MenuItem, PrimeNGConfig } from 'primeng/api'\nimport { DialogService } from 'primeng/dynamicdialog'\nimport { HelpData, PortalMenuItem } from '../../../api/model'\nimport { NoHelpInfoComponent } from '../no-help-info/no-help-info.component'\nimport { isTkitPage } from '../../pages/PortalPage'\nimport { TranslateService } from '@ngx-translate/core'\nimport { ConfigurationService } from '../../../api/configuration.service'\nimport { ThemeService } from '../../../api/services/theme.service'\nimport { MenuApiService } from '../../../api/services/menu-api.service'\nimport { AUTH_SERVICE } from '../../../api/injection-tokens'\nimport { IAuthService } from '../../../api/iauth.service'\nimport { CONFIG_KEY_TKIT_PORTAL_DISABLE_THEME_MANAGEMENT } from '../../constants'\nimport { Portal } from '../../../api/model/portal'\nimport { OverlayPanel } from 'primeng/overlaypanel'\nimport { BreakpointObserver } from '@angular/cdk/layout'\nimport { FeedbackBasic, FeedbackDTO } from '../../../api/model/feedback.model'\nimport { FeedbackApiService } from '../../../api/services/feedback-api.service'\nimport { SupportTicket } from '../../../api/model/support-ticket.model'\nimport { SupportTicketApiService } from '../../../api/services/support-ticket-api.service'\nimport { MenuService } from \"../../../api/services/menu.service\";\n\nenum MenuOrientation {\n  STATIC,\n  OVERLAY,\n  SLIM,\n  HORIZONTAL,\n}\nconst FALLBACK_THEME_URL = './portal-lib/assets/css/fallback-theme/fallback.css'\nconst DEFAULT_BASE_URL = 'https://1000kit.atlassian.net/wiki/spaces/1000KIT/overview'\n\n@Component({\n  selector: 'tk-portal-viewport',\n  templateUrl: './portal-viewport.component.html',\n  styles: [\n    `\n      .loading-block {\n      }\n    `,\n  ],\n})\nexport class PortalViewportComponent implements AfterViewInit, OnInit {\n\n  @Input()\n  showProfileInSidebar = true\n\n  @Input()\n  enableBreadcrumbs = false\n\n  @Input()\n  fullPortalLayout = true\n\n  // TKIT\n  helpPageEditorDisplayed = false\n  addToFavouritesDisplayed = false\n  supportTicketDisplayed = false\n  currentComponent: any\n  feedbackData: FeedbackBasic = { comment: '', rating: 0, anonymous: false }\n  feedbackVisible = false\n  feedbackSubmitDisabled = false\n\n  @Input()\n  appName: string\n\n  @Input()\n  portalName = 'PORTAL'\n\n  appVersion: string\n\n  isBodyCompact: boolean\n  helpDataItem: HelpData\n  helpArticleId: string\n  sideBarColorTheme: string\n\n  // PRIMENG STUFF\n  layoutMode: MenuOrientation = MenuOrientation.STATIC\n\n  // TODO Ultima11: dark menu\n  darkMenu = false\n\n  profileMode = 'top'\n\n  menuActive: boolean\n\n  mobileMenuActive: boolean\n\n  inlineMenuActive: boolean\n\n  menuClick: boolean\n\n  inlineMenuClick: boolean\n\n  staticMenuDesktopInactive: boolean\n\n  mobileTopbarActive: boolean\n\n  showMenuButtonTitle: string\n\n  hideMenuButtonTitle: string\n\n  topbarItemClick: boolean\n\n  activeTopbarItem: any\n\n  resetMenu: boolean\n\n  menuHoverActive: boolean\n\n  searchClick = false;\n\n  search = false;\n\n  documentClickListener: () => void\n\n  @ViewChild('layoutContainer')\n  layoutContainerViewChild: ElementRef\n\n  @ViewChild('scrollPanel')\n  layoutMenuScrollerViewChild: ScrollPanel\n\n  @ViewChild('feedbackPanel')\n  feedbackPanel: OverlayPanel\n\n  preloader = true\n  portalMenuItems: MenuItem[]\n  lang: string\n  portalHomeMenuItem: MenuItem = { url: '/', label: 'Home' }\n  initError: any\n\n  mainPortal: Portal\n\n  get menuButtonTitle(): string {\n    return (\n        this.isDesktop() && this.menuActive || this.isMobile() && this.mobileMenuActive\n    ) ? this.hideMenuButtonTitle : this.showMenuButtonTitle;\n  }\n\n  constructor(\n    public renderer2: Renderer2,\n    public zone: NgZone,\n    private router: Router,\n    private route: ActivatedRoute,\n    private helpDataService: HelpPageAPIService,\n    private messageService: MessageService,\n    private dialogService: DialogService,\n    private breakpointObserver: BreakpointObserver,\n    private translate: TranslateService,\n    private themeService: ThemeService,\n    private menuService: MenuService,\n    private menuApiService: MenuApiService,\n    private configService: ConfigurationService,\n    private feedbackApiService: FeedbackApiService,\n    private supportTicketApiService: SupportTicketApiService,\n    private primeNgConfig: PrimeNGConfig,\n    @Inject(AUTH_SERVICE) private auth: IAuthService\n  ) {}\n\n  applyPadding() {\n    if (this.isBodyCompact) {\n      this.addClass(document.body, 'compact')\n    } else {\n      this.removeClass(document.body, 'compact')\n    }\n  }\n\n  setSidebarColorTheme() {\n    if (this.sideBarColorTheme === 'DARK') {\n      this.darkMenu = true\n    } else if (this.sideBarColorTheme === 'LIGHT') {\n      this.darkMenu = false\n    }\n  }\n\n  ngOnInit() {\n    this.primeNgConfig.ripple = true\n    this.initError = this.configService.error\n    if (this.initError) {\n      this.preloader = false\n      return\n    }\n    this.mainPortal = this.configService.getPortalData()\n    if (this.auth.currentUser().accountSettings.layoutAndThemeSettings) {\n      this.isBodyCompact = this.auth.currentUser().accountSettings.layoutAndThemeSettings.compactView ?? false\n      this.applyPadding()\n      // this.sideBarColorTheme = this.auth.currentUser().accountSettings.layoutAndThemeSettings.menuTheme ?? 'LIGHT'\n      if (this.auth.currentUser().accountSettings.layoutAndThemeSettings.sidebarViewMode) {\n        this.layoutMode =\n          MenuOrientation[this.auth.currentUser().accountSettings.layoutAndThemeSettings.sidebarViewMode]\n      } else {\n        this.layoutMode = MenuOrientation['STATIC']\n      }\n    }\n\n    this.menuActive = this.isStatic() && !this.isMobile() && this.fullPortalLayout;\n\n    this.validateRequiredInputs()\n\n    this.setSidebarColorTheme()\n    this.setCustomTheme()\n\n    if (this.fullPortalLayout) {\n      this.loadMenuItems()\n    }\n\n    this.router.events.subscribe((event: Event) => {\n      // console.log(`nav event ${event.constructor.name}`);\n      if (event instanceof NavigationStart) {\n        // Show loading indicator\n      }\n\n      if (event instanceof ActivationEnd) {\n        // this.helpArticleId = event.snapshot.pathFromRoot\n        //   .map(i => (i.routeConfig ? i.routeConfig.path : ''))\n        //   .join('/');\n        // console.log(`aftger event ${this.helpArticleId}`);\n      }\n\n      if (event instanceof NavigationEnd && this.fullPortalLayout) {\n        // Hide loading indicator\n\n        if (this.currentComponent) {\n          let helpPageIdentifier\n          if (isTkitPage(this.currentComponent)) {\n            helpPageIdentifier = this.currentComponent.helpArticleId\n          } else {\n            helpPageIdentifier = event.url || this.currentComponent.constructor.name\n            console.log(`Page does not have helpItemId, using router path ${helpPageIdentifier}`)\n          }\n          this.helpArticleId = helpPageIdentifier\n          this.helpDataItem = {\n            helpItemId: helpPageIdentifier,\n            appId: this.appName,\n            baseUrl: DEFAULT_BASE_URL,\n            resourceUrl: '',\n          }\n          this.loadHelpArticle()\n        }\n      }\n\n      if (event instanceof NavigationError) {\n        // Hide loading indicator\n\n        // Present error to user\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Navigation error',\n          detail: `Route ${event.url} not recognized`,\n        })\n      }\n      // console.log(`navigate event ${event}`);\n      this.setSidebarColorTheme()\n    })\n\n    this.translate.get(['GENERAL.SHOW_MENU', 'GENERAL.HIDE_MENU']).subscribe(text => {\n        this.hideMenuButtonTitle = text['GENERAL.HIDE_MENU']\n        this.showMenuButtonTitle = text['GENERAL.SHOW_MENU']\n    })\n  }\n\n  ngAfterViewInit() {\n    this.documentClickListener = this.renderer2.listen('body', 'click', () => {\n      if (!this.topbarItemClick) {\n        this.activeTopbarItem = null;\n      }\n\n      if (!this.menuClick && (this.isHorizontal() || this.isSlim())) {\n        this.menuService.reset();\n      }\n\n      if (!this.menuClick) {\n        if (this.mobileMenuActive) {\n          this.mobileMenuActive = false;\n        }\n\n        if (this.isOverlay()) {\n          this.menuActive = false;\n        }\n\n        this.menuHoverActive = false;\n        this.unblockBodyScroll();\n      }\n\n      if (!this.searchClick) {\n        this.search = false;\n      }\n\n      if (this.inlineMenuActive && !this.inlineMenuClick) {\n        this.inlineMenuActive = false;\n      }\n\n      this.inlineMenuClick = false;\n      this.searchClick = false;\n      this.topbarItemClick = false;\n      this.menuClick = false;\n    });\n  }\n\n  loadMenuItems() {\n    const portalId = this.configService.getProperty('TKIT_PORTAL_ID')\n    const stripForbiddenStr = this.configService.getProperty('TKIT_PORTAL_DISABLE_MENU_PERMISSIONS')\n    const stripForbidden = stripForbiddenStr === 'true'\n    this.configService.lang$.subscribe(data => (this.lang = data)).unsubscribe()\n\n    if (!portalId) {\n      this.portalMenuItems = [{ label: 'Failed to load menu', icon: 'dashboard', routerLink: ['/'] }]\n    } else if (this.fullPortalLayout) {\n      this.menuApiService.getMenuItems(portalId).subscribe(data => {\n        let serverMenuItems: MenuItem[] = []\n        const mainMenuItem = data.find(item => item.key === 'PORTAL_MAIN_MENU')\n        this.portalHomeMenuItem = this.toPrimeNGMenuItem(data.find(item => item.key === 'PORTAL_MENU_HOME'))\n        if (!this.portalHomeMenuItem) {\n          this.portalHomeMenuItem = { url: '/', label: 'Home' }\n        }\n        if (mainMenuItem) {\n          serverMenuItems = mainMenuItem.children\n            .filter(\n              item => (!stripForbidden || this.auth.hasPermission(`${item.permissionObject}#VIEW`)) && !item.disabled\n            )\n            .sort((a: PortalMenuItem, b: PortalMenuItem) => a.position - b.position)\n            .map(item => this.toPrimeNGMenuItem(item))\n        }\n        this.portalMenuItems = [\n          // { label: 'Portal Home', icon: 'dashboard', routerLink: ['/'] },\n          ...serverMenuItems,\n        ]\n      })\n    }\n  }\n\n  private toPrimeNGMenuItem(item: PortalMenuItem, level = 1): MenuItem {\n    if (!item) {\n      return undefined\n    }\n    let isAbsoluteLink = item.url && item.url.match(/^(http|https)/g) !== null\n    const currentHost = document.getElementsByTagName('base')[0].href\n    let routerLink = undefined\n    const label = item.i18n[this.lang] || item.name\n    if (this.appName === item.applicationId) {\n      // it is a local link, set routerlink\n      if (isAbsoluteLink && item.url.includes(currentHost)) {\n        routerLink = [item.url.substr(currentHost.length - 1)]\n        isAbsoluteLink = false\n      } else {\n        const path = currentHost.substring(window.location.origin.length)\n        if (path.length >= 1 && item.url.startsWith(path)) {\n          // its a link within same  path\n          routerLink = [item.url.substr(path.length - 1)]\n          isAbsoluteLink = false\n        }\n      }\n    }\n    let badgeIcon = level === 1 ? 'menu' : 'subject'\n    if (item.badge !== '' && item.badge) {\n      badgeIcon = item.badge\n    }\n    return {\n      label,\n      // badge: '🔗',\n      icon: badgeIcon,\n      command: e => {\n        e.originalEvent.preventDefault()\n        if (item.children.length === 0) {\n          item.portalExit\n            ? window.open(item.url, '_blank')\n            : routerLink\n            ? this.router.navigate(routerLink)\n            : window.location.assign(item.url)\n        }\n      },\n      url: item.url,\n      routerLinkActiveOptions: [{ exact: false }],\n      items:\n        item.children.length > 0\n          ? item.children\n              .filter(child => !child.disabled)\n              .sort((a: PortalMenuItem, b: PortalMenuItem) => a.position - b.position)\n              .map(child => this.toPrimeNGMenuItem(child, level + 1))\n          : undefined,\n    }\n  }\n\n  validateRequiredInputs() {\n    if (!this.appName) {\n      throw new Error(`You must specify [appName] attribute on <tk-portal-viewport> component.`)\n    }\n  }\n\n  loadHelpArticle() {\n    this.helpDataService.getHelpDataItem(this.appName, this.helpArticleId).subscribe(\n      data => {\n        if (data) {\n          this.helpDataItem = data\n        }\n      },\n      error => console.log('Failed to load help article')\n    )\n  }\n\n  public onHelpArticleEditorClosed(changed: boolean) {\n    if (changed) {\n      this.helpDataService.saveHelpPage(this.appName, this.helpDataItem).subscribe(\n        res => {\n          console.log(`Help item saved: ${res.status}`)\n          this.helpPageEditorDisplayed = false\n\n          this.messageService.add({\n            severity: 'info',\n            summary: 'Help Item definition updated',\n          })\n          this.loadHelpArticle()\n        },\n        error => {\n          console.log(`Could not save help item`)\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Help Item definition update failed',\n            detail: `Server error: ${error.status}`,\n          })\n        }\n      )\n    } else {\n      this.helpPageEditorDisplayed = false\n    }\n  }\n\n  public onAddToLaunchpadClosed(event) {\n    this.addToFavouritesDisplayed = false\n  }\n\n  public openHelpPage(event) {\n    if (this.helpDataItem.id) {\n      const url = this.helpDataItem.baseUrl\n        ? `${this.helpDataItem.baseUrl}/${this.helpDataItem.resourceUrl}`\n        : this.helpDataItem.resourceUrl\n      console.log(`navigate to help page: ${url}`)\n      const win = window.open(url, '_blank')\n      win.focus()\n    } else {\n      this.dialogService.open(NoHelpInfoComponent, {\n        header: 'No help item defined for this page',\n        width: '400px',\n        data: {\n          pageItem: this.helpArticleId,\n        },\n      })\n    }\n    event.preventDefault()\n  }\n\n  public openHelpPageEditor(event) {\n    this.helpPageEditorDisplayed = true\n    event.preventDefault()\n  }\n\n  public openFeedback(event) {\n    if (this.breakpointObserver.isMatched('(max-width: 1024px)')) {\n      this.feedbackVisible = true\n    } else {\n      this.feedbackPanel.toggle(event)\n    }\n    event.preventDefault()\n  }\n\n  public openAddToLaunchpad(event) {\n    this.addToFavouritesDisplayed = true\n    event.preventDefault()\n  }\n\n  public openSupportTicket(event) {\n    this.supportTicketDisplayed = true\n    event.preventDefault()\n  }\n\n  public onSubmitFeedback(feedback: FeedbackBasic) {\n    this.feedbackSubmitDisabled = true\n    const feedbackDTO: FeedbackDTO = {\n      rating: feedback.rating,\n      comment: feedback.comment,\n      appId: this.appName,\n      userId: feedback.anonymous ? 'anonymous' : this.auth.currentUser().userId,\n    }\n    this.feedbackApiService.sendFeedback(feedbackDTO).subscribe(\n      () => {\n        this.closeFeedback()\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Feedback successfully sent',\n        })\n      },\n      () => {\n        this.closeFeedback()\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Sending feedback failed',\n          detail: 'Please try again later',\n        })\n      }\n    )\n  }\n\n  closeFeedback() {\n    this.feedbackSubmitDisabled = false\n    this.feedbackVisible = false\n    this.feedbackPanel.hide()\n  }\n\n  public onSubmitTicket(ticket: SupportTicket) {\n    this.supportTicketApiService.createSupportTicket(ticket, this.appName).subscribe(\n      () => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Success!',\n          detail: 'Ticket successfully submitted',\n        })\n      },\n      () =>\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Error!',\n          detail: 'Error occured while submitting a ticket',\n        })\n    )\n  }\n\n  public clearFeedback() {\n    this.feedbackData = { comment: '', rating: 0, anonymous: false }\n  }\n\n  addClass(element, className) {\n    if (element.classList) {\n      element.classList.add(className)\n    } else {\n      element.className += ' ' + className\n    }\n  }\n\n  removeClass(element, className) {\n    if (element.classList) {\n      element.classList.remove(className)\n    } else {\n      element.className = element.className.replace(\n          new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'),\n          ' '\n      )\n    }\n  }\n\n  onMenuButtonClick(event) {\n    this.menuActive = !this.menuActive;\n    this.menuClick = true;\n\n    if (!this.isDesktop()) {\n      this.mobileMenuActive = !this.mobileMenuActive;\n      if (this.mobileMenuActive) {\n        this.blockBodyScroll();\n      } else {\n        this.unblockBodyScroll();\n      }\n    }\n\n    event.preventDefault()\n  }\n\n  onMenuClick($event) {\n    this.menuClick = true\n\n    if (this.inlineMenuActive && !this.inlineMenuClick) {\n      this.inlineMenuActive = false;\n    }\n  }\n\n  onInlineMenuClick(event) {\n    this.inlineMenuActive = !this.inlineMenuActive;\n    this.inlineMenuClick = true;\n  }\n\n  onTopbarMobileButtonClick(event) {\n    this.mobileTopbarActive = !this.mobileTopbarActive\n    event.preventDefault()\n  }\n\n  onTopbarItemClick(event, item) {\n    this.topbarItemClick = true\n\n    if (this.activeTopbarItem === item) {\n      this.activeTopbarItem = null\n    } else {\n      this.activeTopbarItem = item\n    }\n\n    if (item === 'search') {\n      this.search = !this.search;\n      this.searchClick = !this.searchClick;\n    }\n\n    event.preventDefault()\n  }\n\n  onSearchClick(event, val: boolean) {\n    this.searchClick = val\n    this.search = val\n    event.preventDefault()\n  }\n\n  isDesktop() {\n    return window.innerWidth > 991\n  }\n\n  isMobile() {\n    return window.innerWidth <= 991\n  }\n\n  isStatic() {\n    return this.layoutMode === MenuOrientation.STATIC\n  }\n\n  isOverlay() {\n    return this.layoutMode === MenuOrientation.OVERLAY\n  }\n\n  isHorizontal() {\n    return this.layoutMode === MenuOrientation.HORIZONTAL\n  }\n\n  isSlim() {\n    return this.layoutMode === MenuOrientation.SLIM\n  }\n\n  changeToStaticMenu() {\n    this.layoutMode = MenuOrientation.STATIC\n  }\n\n  changeToOverlayMenu() {\n    this.layoutMode = MenuOrientation.OVERLAY\n  }\n\n  changeToHorizontalMenu() {\n    this.layoutMode = MenuOrientation.HORIZONTAL\n  }\n\n  changeToSlimMenu() {\n    this.layoutMode = MenuOrientation.SLIM\n  }\n\n  blockBodyScroll(): void {\n    if (document.body.classList) {\n      document.body.classList.add('blocked-scroll');\n    } else {\n      document.body.className += ' blocked-scroll';\n    }\n  }\n\n  unblockBodyScroll(): void {\n    if (document.body.classList) {\n      document.body.classList.remove('blocked-scroll');\n    } else {\n      document.body.className = document.body.className.replace(new RegExp('(^|\\\\b)' +\n          'blocked-scroll'.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n    }\n  }\n\n  private setCustomTheme() {\n    const disablePortalThemeMgmt =\n      this.configService.getProperty(CONFIG_KEY_TKIT_PORTAL_DISABLE_THEME_MANAGEMENT) === 'true'\n    if (disablePortalThemeMgmt) {\n      console.log(\n        `Portal theme mgmt is disabled. To enable it, remove env var: ${CONFIG_KEY_TKIT_PORTAL_DISABLE_THEME_MANAGEMENT}`\n      )\n      this.preloader = false\n      return\n    }\n    console.log(`Setting theme dynamically`)\n    let customTheme = this.configService.getPortalData() && this.configService.getPortalData().themeName\n\n    if (!customTheme) {\n      const themeFromEnv = this.configService.getProperty('TKIT_PORTAL_DEFAULT_THEME')\n      if (!themeFromEnv) {\n        console.log(`Custom theme not defined, or portal data not available, setting default theme CG`)\n        customTheme = 'cg'\n      } else {\n        console.log(\n          `Custom theme not defined, or portal data not available, setting theme from 'TKIT_PORTAL_DEFAULT_THEME' var: ${themeFromEnv} `\n        )\n        customTheme = themeFromEnv\n      }\n    }\n\n    if (document.getElementById('theme-css')) {\n      const themeLinkToRemove: HTMLElement = document.getElementById('theme-css')\n      themeLinkToRemove.remove()\n    }\n    const themeLink = document.createElement('link')\n    themeLink.setAttribute('id', 'theme-css')\n    themeLink.setAttribute('rel', 'stylesheet')\n    themeLink.setAttribute('type', 'text/css')\n    themeLink.onload = () => {\n      console.log('theme load done')\n      this.preloader = false\n    }\n    themeLink.onerror = () => {\n      console.log(`Failed to load theme assets for '${customTheme}'`)\n      themeLink.setAttribute('href', FALLBACK_THEME_URL)\n      this.preloader = false\n    }\n    themeLink.setAttribute('href', this.themeService.getThemeHref(customTheme))\n    document.getElementsByTagName('head')[0].appendChild(themeLink)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SupportTicket } from '../model/support-ticket.model';\nimport {\n  CreateIssueRequest,\n  IssueType\n} from '../model/create-issue-request.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SupportTicketApiService {\n  private baseUrl = './portal-api/v1/supportTicket/send';\n\n  constructor(private http: HttpClient) {}\n\n  createSupportTicket(ticket: SupportTicket, appId: string) {\n    const request: CreateIssueRequest = {\n      processId: ticket.title,\n      processStep: ticket.description,\n      source: appId,\n      sourceDeepLink: window.location.href\n    };\n\n    return this.http.post(this.baseUrl, request);\n  }\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { Observable, isObservable } from 'rxjs';\n\n@Injectable()\nexport abstract class PortalSearchPage<T, C> implements OnInit {\n  searchInProgress: boolean;\n  public results: T[];\n\n  public criteria: C;\n  abstract doSearch(): T[] | Observable<T[]>;\n  abstract getDefaultCriteria(): C;\n\n  search() {\n    this.searchInProgress = true;\n    const resultIntermediate = this.doSearch();\n    if (isObservable(resultIntermediate)) {\n      resultIntermediate.subscribe(data => {\n        this.results = data;\n        this.searchInProgress = false;\n      });\n    } else {\n      this.results = resultIntermediate;\n      this.searchInProgress = false;\n    }\n  }\n\n  reset() {\n    this.results = [];\n    this.criteria = this.getDefaultCriteria();\n  }\n\n  ngOnInit() {\n    this.reset();\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Injector,\n  Input,\n  Output,\n  Inject,\n  Optional,\n  SkipSelf\n} from '@angular/core';\nimport { SelectItem } from 'primeng/api';\nimport { MessageService } from 'primeng/api';\nimport { SearchTemplate } from '../../../api/model/search-template.model';\nimport { PortalPageComponent } from '../portal-page/portal-page.component';\nimport { SearchTemplateAPIService } from '../../../api/services/search-template-api.service';\nimport { AUTH_SERVICE } from '../../../api/injection-tokens';\nimport { IAuthService } from '../../../api/iauth.service';\nimport { PortalViewportComponent } from '../portal-viewport/portal-viewport.component';\nimport { PortalSearchPage } from '../../pages/PortalSearchPage';\n\nconst reISO = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*))(?:Z|(\\+|-)([\\d|:]*))?$/;\nconst dateReviver = function(key, value) {\n  if (typeof value === 'string') {\n    const a = reISO.exec(value);\n    if (a) {\n      return new Date(value);\n    }\n  }\n  return value;\n};\n@Component({\n  selector: 'tk-portal-search-page',\n  templateUrl: './portal-search-page.component.html',\n  styleUrls: ['./portal-search-page.component.scss']\n})\nexport class PortalSearchPageComponent extends PortalPageComponent {\n  @Input() searchCriteriaTemplatesEnabled = true;\n  @Input() enableSearchToolbar = false;\n  @Output() onSearch: EventEmitter<any> = new EventEmitter();\n  activeSearchTemplate: SearchTemplate;\n  activeSearchTemplateId: string;\n\n  @Input()\n  private pageName: string;\n\n  searchTemplateOptions: SelectItem[];\n\n  newTemplateName: string;\n  newTemplateDefaultFlag = false;\n\n  constructor(\n    injectorChild: Injector,\n    private messageService: MessageService,\n    private searchTemplateApi: SearchTemplateAPIService,\n    @Inject(AUTH_SERVICE) private auth: IAuthService,\n    private viewPort: PortalViewportComponent,\n    @SkipSelf() @Optional() public searchPage: PortalSearchPage<any, any>\n  ) {\n    super(injectorChild);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.validatedInputs();\n    if (this.pageName) {\n      this.fetchSearchTemplates();\n    }\n  }\n\n  onSearchTemplateSelection(event: any) {\n    if (event.value) {\n      this.activeSearchTemplateId = event.value;\n      this.searchTemplateApi\n        .getTemplateById(this.activeSearchTemplateId)\n        .subscribe(template => {\n          this.activeSearchTemplate = template;\n          // TODO allow override\n          this.searchPage.criteria = JSON.parse(\n            template.criteriaAsJson,\n            dateReviver\n          );\n        });\n    } else {\n      this.activeSearchTemplateId = null;\n      this.activeSearchTemplate = null;\n    }\n  }\n\n  private fetchSearchTemplates() {\n    this.searchTemplateApi\n      .getSearchTemplatesLegacy(\n        this.auth.currentUser().userId,\n        this.viewPort.appName,\n        this.pageName\n      )\n      .subscribe(templates => {\n        this.searchTemplateOptions = [\n          { value: null, label: 'Pick saved template' },\n          ...templates.map(t => ({ label: t.name, value: t.id }))\n        ];\n\n        // if a default template exists preselect it\n        const defaultTemplate = templates.find(t => t.defaultTemplate);\n        if (defaultTemplate) {\n          this.onSearchTemplateSelection({ value: defaultTemplate.id });\n        }\n      });\n  }\n\n  validatedInputs() {\n    if (!this.searchPage) {\n      console.error(\n        `<tk-search-page> can only be used in a component that extends \"PortalSearchPage\". See README.MD chapter #Generic Search Page`\n      );\n    }\n    if (!this.pageName) {\n      console.warn(\n        `You did not specify [pageName] attribute for search page component. Without it, some features will not work.`\n      );\n    }\n  }\n\n  triggerSearch() {\n    console.log(`Click search`);\n    this.onSearch.emit(1);\n  }\n\n  triggerCriteriaTemplateUpdate() {\n    console.log('update tempalte');\n    this.activeSearchTemplate.criteriaAsJson = JSON.stringify(\n      this.searchPage.criteria\n    );\n    this.searchTemplateApi\n      .updateTemplate(this.activeSearchTemplateId, this.activeSearchTemplate)\n      .subscribe(savedTemplate => {\n        this.activeSearchTemplate = savedTemplate;\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Search template updated'\n        });\n      });\n  }\n\n  triggerCriteriaTemplateSave(event: Event, op: any) {\n    this.searchTemplateApi\n      .createNewTemplate({\n        application: this.viewPort.appName,\n        page: this.pageName,\n        user: this.auth.currentUser().userId,\n        name: this.newTemplateName,\n        defaultTemplate: this.newTemplateDefaultFlag,\n        criteriaAsJson: JSON.stringify(this.searchPage.criteria)\n      })\n      .subscribe(savedTemplate => {\n        this.activeSearchTemplate = savedTemplate;\n        this.searchTemplateOptions.push({\n          label: savedTemplate.name,\n          value: savedTemplate.id\n        });\n        this.activeSearchTemplateId = savedTemplate.id;\n        op.hide();\n        this.newTemplateDefaultFlag = false;\n        this.newTemplateName = undefined;\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Search template saved'\n        });\n      });\n  }\n  triggerCriteriaTemplateDelete() {\n    this.searchTemplateApi\n      .deleteTemplate(this.activeSearchTemplateId)\n      .subscribe(ok => {\n        this.messageService.add({\n          severity: 'info',\n          summary: 'Search template deleted'\n        });\n\n        this.searchTemplateOptions.splice(\n          this.searchTemplateOptions.findIndex(\n            i => i.value == this.activeSearchTemplateId\n          ),\n          1\n        );\n        this.activeSearchTemplateId = undefined;\n        this.activeSearchTemplate = undefined;\n      });\n  }\n}\n","import { Directive, Input, Renderer2, ElementRef, Inject, ViewContainerRef, TemplateRef, OnInit } from '@angular/core';\r\nimport { IAuthService } from '../../api/iauth.service';\r\nimport { AUTH_SERVICE } from '../../api/injection-tokens';\r\n\r\n@Directive({ selector: '[tkIfPerm]' })\r\nexport class TkIfPermDirective implements OnInit {\r\n  permission: string;\r\n  @Input() loaderState: boolean;\r\n  constructor(\r\n    private templateRef: TemplateRef<any>,\r\n    private viewContainer: ViewContainerRef,\r\n    @Inject(AUTH_SERVICE) private authService: IAuthService\r\n  ) {}\r\n\r\n  @Input()\r\n  set tkIfPerm(permission: string) {\r\n    this.permission = permission;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.authService.hasPermission(this.permission)) {\r\n      console.log(`Hide element because no perm ${this.permission}`);\r\n      this.viewContainer.clear();\r\n    } else {\r\n      this.viewContainer.createEmbeddedView(this.templateRef);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\n// TODO is <a> without click actually OK? How about a11y?\n@Component({\n  selector: 'tk-toolbar-item',\n  template: `\n    <a\n      pRipple\n      *ngIf=\"link\"\n      class=\"toolbar-item\"\n      [href]=\"link\"\n      [target]=\"linkTarget\"\n      [rel]=\"linkRel\"\n      title=\"{{ title }}\"\n      role=\"button\"\n      ><i class=\"pi pi-{{icon}}\"></i>\n    </a>\n    <a\n      pRipple\n      *ngIf=\"!link\"\n      href=\"javascript:void(0)\"\n      class=\"toolbar-item\"\n      title=\"{{ title }}\"\n      role=\"button\"\n      ><i class=\"pi pi-{{icon}}\"></i>\n    </a>\n  `,\n  styles: [\n    `\n      .toolbar-item {\n        color: #757575;\n        display: inline-block;\n        padding: 3px;\n        text-align: center;\n        font-size: 1.3em;\n        transition: all 0.4s;\n      }\n      .toolbar-item i {\n        transition: all 0.4s;\n        font-size: 1.5rem;\n        padding: 0.2em;\n      }\n      .toolbar-item:hover {\n        background-color: #e8e8e8;\n      }\n      .toolbar-item:focus {\n        background-color: #e8e8e8;\n      }\n\n    `\n  ]\n})\nexport class ToolbarItemComponent implements OnInit {\n  @Input()\n  title: string;\n\n  @Input()\n  permission: string;\n\n  @Input() link: string;\n  @Input() linkTarget: string;\n  @Input() linkRel: string;\n  @Input()\n  action: Function;\n\n  @Input()\n  icon: string;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpResponse } from '@angular/common/http'\nimport { Observable } from 'rxjs'\nimport { tap } from 'rxjs/operators'\nimport { HttpProgressLoaderService } from './http-progress-loader.service'\nimport { Injectable } from '@angular/core'\n\n@Injectable({ providedIn: 'root' })\nexport class HttpProgressInterceptor implements HttpInterceptor {\n  private requests: HttpRequest<any>[] = []\n  constructor(private loaderService: HttpProgressLoaderService) {}\n\n  removeRequest(req: HttpRequest<any>) {\n    const i = this.requests.indexOf(req)\n    if (i >= 0) {\n      this.requests.splice(i, 1)\n    }\n    this.loaderService.isLoading.next(this.requests.length > 0)\n  }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const started = Date.now()\n    this.requests.push(req)\n    this.loaderService.isLoading.next(true)\n    return next.handle(req).pipe(\n      tap(\n        event => {\n          if (event instanceof HttpResponse) {\n            const elapsed = Date.now() - started\n            console.log(\n              `Request for ${req.urlWithParams} took ${elapsed} ms with result ${event.status}. ${this.requests.length}`\n            )\n            this.removeRequest(req)\n          }\n        },\n        error => {\n          console.log(`Http err: status ${error.status} ${JSON.stringify(error)}`)\n          this.removeRequest(req)\n        }\n      )\n    )\n  }\n}\n","import { ConfigurationService } from '../api/configuration.service'\nimport { TranslateService } from '@ngx-translate/core'\nimport { IAuthService } from '../api/iauth.service'\n\nexport function tkitPortalInitializer(\n  configService: ConfigurationService,\n  translateService: TranslateService,\n  authService: IAuthService\n): () => Promise<any> {\n  const startTime = new Date().getTime()\n  console.log(`Start tkit portal module initializer`)\n  return (): Promise<any> =>\n    configService\n      .init()\n      .then(() => console.log('Config initialized, next: init auth'))\n      .then(() => authService.init())\n      .then(res => {\n        console.log(`Auth service init resolved ${res}, next: set default lang`)\n        const availLangsCSV = configService.getProperty('SUPPORTED_LANGUAGES') || 'en,de'\n        const availableLangs = availLangsCSV.split(',').map(l => l.trim())\n        let lang =\n          authService.currentUser().accountSettings?.localeAndTimeSettings?.locale || translateService.getBrowserLang()\n        lang = availableLangs.includes(lang) ? lang : 'de'\n        translateService.use(lang)\n        configService.setLang(lang)\n        const duration = new Date().getTime() - startTime\n        console.log(`Tkit portal module initializer finished in ${(duration / 1000).toFixed(2)}s`)\n\n        return true\n      })\n      .catch(err => {\n        console.log(`\n      #####################################\n      Tkit portal lib initialization failed\n      #####################################\n      `)\n        configService.error = err\n        //throw err;\n      })\n}\n","export enum SearchItemType {\r\n  APPLICATION = 'APPLICATION',\r\n  OPEN_SEARCH = 'OPEN_SEARCH'\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { SearchItemDTO } from '../model/search-item.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PortalItemService {\r\n  private readonly url = 'portal-api/v1/portalItems/search';\r\n  constructor(private readonly http: HttpClient) {}\r\n\r\n  searchForServices(query: string, portalId: string, count?: number): Observable<SearchItemDTO[]> {\r\n    let params = new HttpParams();\r\n    if (query) {\r\n      params = params.set('query', query);\r\n    }\r\n    if (portalId) {\r\n      params = params.set('portal-id', portalId);\r\n    }\r\n    if (count) {\r\n      params = params.set('count', count.toString());\r\n    }\r\n    return this.http.get<SearchItemDTO[]>(this.url, {\r\n      params\r\n    });\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core'\nimport { PortalItemService } from '../../../api/services/portal-item.service'\nimport { SearchItemDTO } from '../../../api/model/search-item.model'\nimport { FormControl } from '@angular/forms'\nimport { SearchItemType } from '../../../api/model/search-item-type'\nimport { ConfigurationService } from '../../../api/configuration.service'\nimport { CONFIG_KEY_TKIT_SEARCH_BASE_URL } from '../../constants'\nimport { TranslateService } from '@ngx-translate/core'\nimport { MessageService } from 'primeng/api'\nimport { AutoComplete } from 'primeng/autocomplete'\n\n@Component({\n  selector: 'tk-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.scss'],\n})\nexport class SearchBarComponent implements OnInit, AfterViewInit {\n  results: SearchItemDTO[]\n  query: FormControl\n  SearchItemType = SearchItemType\n  searchUrl: string\n  maxResults: 10\n\n  @ViewChild('searchInput') searchInputViewChild: AutoComplete\n\n  @Output()\n  searchClick: EventEmitter<any> = new EventEmitter()\n\n  get openInSearchItem(): SearchItemDTO {\n    return {\n      type: SearchItemType.OPEN_SEARCH,\n      name: 'Open in search view',\n      url: `${this.searchUrl}${this.query.value}`,\n      queryString: this.query.value,\n    }\n  }\n\n  constructor(\n    private searchService: PortalItemService,\n    private config: ConfigurationService,\n    private readonly translateService: TranslateService,\n    private readonly messageService: MessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.query = new FormControl('')\n    const searchUrl = this.config.getProperty(CONFIG_KEY_TKIT_SEARCH_BASE_URL) || '/ops/enterprise-search'\n    this.searchUrl = `${searchUrl}/search?query=`\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => this.searchInputViewChild.focusInput(), 0)\n  }\n\n  search(event: { query: string }) {\n    this.searchService.searchForServices(event.query, null).subscribe(data => {\n      data = data.slice(0, this.maxResults)\n      data.push(this.openInSearchItem)\n      this.results = data\n    })\n  }\n\n  select(event: SearchItemDTO) {\n    if (event.type === SearchItemType.OPEN_SEARCH) {\n      this.query.setValue(event.queryString)\n    } else {\n      this.query.setValue(event.name)\n    }\n    window.open(event.url)\n  }\n\n  goToSearch(clickEnter: boolean) {\n    if (this.query.value) {\n      window.open(`${this.searchUrl}${this.query.value}`)\n    } else {\n      if (clickEnter === false) {\n        this.messageService.add({\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          summary: this.translateService.instant('QUICK_SEARCH_FORM.WRONG_DATA'),\n          severity: 'error',\n        })\n      }\n    }\n  }\n\n  onSearchClick(event, val: boolean) {\n    this.searchClick.emit({ event, val })\n  }\n}\n","import { Component, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"tk-result-text\",\r\n  template: `\r\n    <span *ngIf=\"resultsCount > 0 && state.totalRecords > 0; else noResults\">\r\n      {{ 'SEARCH.SHOWING' | translate }} {{ state.first + 1 }} -\r\n      {{\r\n        state.rows * (state.page + 1) < state.totalRecords\r\n          ? state.rows * (state.page + 1)\r\n          : state.totalRecords\r\n      }}\r\n      {{ 'SEARCH.OUT_OF_TOTAL' | translate }} {{ state.totalRecords }}\r\n    </span>\r\n    <ng-template #noResults>\r\n      {{ 'SEARCH.NO_RESULTS' | translate }}\r\n    </ng-template>\r\n  `\r\n})\r\nexport class ResultTextComponent {\r\n  @Input() resultsCount: number;\r\n  @Input() state: CustomTableState;\r\n\r\n  constructor() {};\r\n}\r\n\r\nclass CustomTableState {\r\n  page: number;\r\n  pageCount: number;\r\n  rows: number;\r\n  first: number;\r\n  totalRecords: number;\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  ValidatorFn,\n  Validators\n} from '@angular/forms';\nimport { FeedbackBasic } from '../../../api/model/feedback.model';\n\n@Component({\n  selector: 'tk-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.scss']\n})\nexport class FeedbackComponent implements OnInit {\n  form: FormGroup;\n  minLength = 5;\n\n  @Input()\n  submitDisabled = false;\n  @Input()\n  set feedbackData(feedback: FeedbackBasic) {\n    if (this.form) {\n      this.form.patchValue(feedback);\n    }\n  }\n\n  @Output()\n  feedbackDataChange: EventEmitter<FeedbackBasic> = new EventEmitter();\n  @Output()\n  feedbackSubmit: EventEmitter<FeedbackBasic> = new EventEmitter();\n  commentRequired = false;\n\n  requiredCommentValidator: ValidatorFn = (fg: FormGroup) => {\n    const rating = fg.controls.rating.value;\n    const comment = fg.controls.comment.value;\n    if (rating > 0 && rating < 5) {\n      this.commentRequired = true;\n      return comment.length >= this.minLength ? null : { missingComment: true };\n    } else {\n      this.commentRequired = false;\n      return null;\n    }\n  };\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      rating: [0, [Validators.required, Validators.min(1), Validators.max(5)]],\n      comment: ['', Validators.minLength(this.minLength)],\n      anonymous: false\n    }, { validators: this.requiredCommentValidator });\n    this.form.valueChanges.subscribe(values => {\n      this.feedbackDataChange.emit(values);\n    });\n  }\n\n  submitFeedback() {\n    if (this.form.valid && !this.submitDisabled) {\n      this.submitDisabled = true;\n      this.feedbackSubmit.emit(this.form.value);\n    }\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { SupportTicket } from '../../../api/model/support-ticket.model';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'tk-support-ticket',\n  templateUrl: './support-ticket.component.html',\n  styleUrls: ['./support-ticket.component.scss']\n})\nexport class SupportTicketComponent implements OnInit {\n  formGroup: FormGroup;\n\n  @Input()\n  display = false;\n  @Output()\n  displayChange: EventEmitter<boolean> = new EventEmitter();\n\n  @Output()\n  submitTicket: EventEmitter<SupportTicket> = new EventEmitter();\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.formGroup = this.fb.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n  }\n\n  close(): void {\n    this.displayChange.emit(false);\n  }\n\n  submit(): void {\n    this.submitTicket.emit(this.formGroup.value);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class IconsService {\n  constructor(private http: HttpClient) {}\n\n  public getPrimeicons(): Observable<string[]> {\n    return this.http\n      .get('./portal-lib/assets/primeicons.csv', { responseType: 'text' })\n      .pipe(map(data => data.split('\\n')));\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { FeedbackDTO } from \"../model/feedback.model\";\nimport { HttpClient, HttpParams, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { LaunchpadDTO } from \"../model/launchpadDTO\";\nimport { LaunchpadType } from \"../model/launchpadType\";\nimport { LaunchpadTileCreateDTO } from \"../model/launchpadTileCreateDTO\";\n\nexport interface GetAllLaunchpadsFilteredRequestParams {\n  name?: string;\n  portalId?: string;\n  type?: LaunchpadType;\n  userGroupId?: string;\n  userId?: string;\n  userOrganizationId?: string;\n}\n\n@Injectable({ providedIn: \"root\" })\nexport class LaunchpadService {\n  url = \"./launchpad-api/launchpad\";\n\n  constructor(private httpClient: HttpClient) {}\n\n  public getLaunchpads(\n    criteria: GetAllLaunchpadsFilteredRequestParams\n  ): Observable<LaunchpadDTO[]> {\n    const parameters = new HttpParams();\n    Object.keys(criteria).forEach(key => parameters.set(key, criteria[key]));\n    const options = { params: parameters };\n    return this.httpClient.get<LaunchpadDTO[]>(this.url, options);\n  }\n\n  public addToLaunchpad(\n    id: number,\n    createTileDTO: LaunchpadTileCreateDTO\n  ): Observable<LaunchpadDTO> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      })\n    };\n\n    return this.httpClient.post<LaunchpadDTO>(\n      `${this.url}/${id}/tiles`,\n      createTileDTO,\n      httpOptions\n    );\n  }\n}\n","import { Component, EventEmitter, Inject, Input, OnInit, Output } from '@angular/core'\nimport { IconsService } from '../../../api/services/icons.service'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\nimport { GetAllLaunchpadsFilteredRequestParams, LaunchpadService } from '../../../api/services/launchpad.service'\nimport { AUTH_SERVICE } from '../../../api/injection-tokens'\nimport { IAuthService } from '../../../api/iauth.service'\nimport { LaunchpadDTO } from '../../../api/model/launchpadDTO'\nimport { LaunchpadTileCreateDTO } from '../../../api/model/launchpadTileCreateDTO'\nimport { TileType } from '../../../api/model/tileType'\nimport { MessageService } from 'primeng/api'\nimport { ConfigurationService } from '../../../api/configuration.service'\n\n@Component({\n  selector: 'tk-add-to-launchpad',\n  templateUrl: './add-to-launchpad.component.html',\n  styleUrls: ['./add-to-launchpad.component.scss'],\n})\nexport class AddToLaunchpadComponent implements OnInit {\n  @Input()\n  public display: boolean\n  @Input()\n  public appId: string\n  @Output()\n  public closed = new EventEmitter<boolean>()\n\n  public launchpads: LaunchpadDTO[] = []\n  public icons: string[]\n  public filteredIcons: string[]\n  public launchpadForm: FormGroup\n\n  constructor(\n    private iconsService: IconsService,\n    private fb: FormBuilder,\n    private launchpadService: LaunchpadService,\n    @Inject(AUTH_SERVICE) private readonly auth: IAuthService,\n    private readonly messageService: MessageService,\n    private readonly confService: ConfigurationService\n  ) {}\n\n  public ngOnInit(): void {\n    this.iconsService.getPrimeicons().subscribe(\n      icons => (this.icons = icons.filter(i => !!i)),\n      error => console.log(error)\n    )\n    this.launchpadForm = this.fb.group({\n      icon: ['', Validators.required],\n      type: [{ value: 'FAVOURITE', disabled: true }],\n      name: ['', Validators.required],\n      appId: [{ value: this.appId, disabled: true }],\n      appUrl: [\n        {\n          value: window.location.href.replace(window.location.origin, ''),\n          disabled: true,\n        },\n      ],\n      launchpad: ['', Validators.required],\n    })\n\n    const launchpadCriteria: GetAllLaunchpadsFilteredRequestParams = {\n      portalId: this.confService.getProperty('TKIT_PORTAL_ID'),\n    }\n    this.launchpadService.getLaunchpads(launchpadCriteria).subscribe(\n      data => (this.launchpads = data),\n      error => console.log(error)\n    )\n  }\n\n  public addToLaunchpad(): void {\n    const createTileDTO: LaunchpadTileCreateDTO = {\n      appId: this.launchpadForm.get('appId').value as string,\n      appUrl: this.launchpadForm.get('appUrl').value as string,\n      name: this.launchpadForm.get('name').value as string,\n      type: this.launchpadForm.get('type').value as TileType,\n      icon: this.launchpadForm.get('icon').value as string,\n    }\n    this.launchpadService.addToLaunchpad(this.launchpadForm.get('launchpad').value.id, createTileDTO).subscribe(\n      () => {\n        this.messageService.add({\n          summary: 'App added to favourites successfully',\n          severity: 'success',\n        })\n        this.close()\n      },\n      () => {\n        this.messageService.add({\n          summary: 'Failed to add app to favourites',\n          severity: 'error',\n        })\n      }\n    )\n  }\n\n  public filterIcons(event): void {\n    const query = event.query.toLowerCase()\n    this.filteredIcons = this.icons.filter(icon => icon.toLowerCase().includes(query))\n  }\n\n  public close(event?: any) {\n    this.closed.emit(false)\n  }\n}\n","import {\n  Directive,\n  Input,\n  ElementRef,\n  NgZone, \n  AfterViewInit\n} from '@angular/core';\nimport { Tooltip } from 'primeng/tooltip';\n\n@Directive({ selector: '[pTooltip-aria]' })\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport class TooltipAriaDirective extends Tooltip implements AfterViewInit {\n  constructor(public el: ElementRef, public zone: NgZone) {\n    super(el, zone);\n  }\n  \n  public ngAfterViewInit(): void {\n    this.zone.runOutsideAngular(() => {\n      switch (this.tooltipEvent) {\n        case 'hover':\n          this.initHoverForTooltipEvent();\n          break;\n        case 'focus':\n          this.initFocusForTooltipEvent();\n          break;\n        case 'hover|focus':\n          this.initHoverForTooltipEvent();\n          this.initFocusForTooltipEvent();\n          break;\n        case 'focus|hover':\n          this.initHoverForTooltipEvent();\n          this.initFocusForTooltipEvent();\n          break;\n      }\n    });\n  }\n  \n  private initHoverForTooltipEvent(): void {\n    this.mouseEnterListener = this.onMouseEnter.bind(this);\n    this.mouseLeaveListener = this.onMouseLeave.bind(this);\n    this.clickListener = this.onClick.bind(this);\n    this.el.nativeElement.addEventListener('mouseenter', this.mouseEnterListener);\n    this.el.nativeElement.addEventListener('mouseleave', this.mouseLeaveListener);\n    this.el.nativeElement.addEventListener('click', this.clickListener);\n  }\n  \n  private initFocusForTooltipEvent(): void {\n    this.focusListener = this.onFocus.bind(this);\n    this.blurListener = this.onBlur.bind(this);\n    this.el.nativeElement.addEventListener('focus', this.focusListener);\n    this.el.nativeElement.addEventListener('blur', this.blurListener);\n  }\n  \n  @Input('pTooltip-aria') set pTooltipText(text: string) {\n    this.text = text;\n  }\n}\n","import { CommonModule } from '@angular/common'\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\nimport { APP_INITIALIZER, NgModule } from '@angular/core'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { TranslateModule, TranslateService } from '@ngx-translate/core'\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader'\nimport { ButtonModule } from 'primeng/button'\nimport { CalendarModule } from 'primeng/calendar'\nimport { CardModule } from 'primeng/card'\nimport { CheckboxModule } from 'primeng/checkbox'\nimport { ConfirmDialogModule } from 'primeng/confirmdialog'\nimport { DialogModule } from 'primeng/dialog'\nimport { DropdownModule } from 'primeng/dropdown'\nimport { DialogService, DynamicDialogModule } from 'primeng/dynamicdialog'\nimport { InputSwitchModule } from 'primeng/inputswitch'\nimport { InputTextModule } from 'primeng/inputtext'\nimport { InputTextareaModule } from 'primeng/inputtextarea'\nimport { MenuModule } from 'primeng/menu'\nimport { MessageModule } from 'primeng/message'\nimport { MessagesModule } from 'primeng/messages'\nimport { OverlayPanelModule } from 'primeng/overlaypanel'\nimport { PaginatorModule } from 'primeng/paginator'\nimport { PanelModule } from 'primeng/panel'\nimport { PanelMenuModule } from 'primeng/panelmenu'\nimport { ScrollPanelModule } from 'primeng/scrollpanel'\nimport { SelectButtonModule } from 'primeng/selectbutton'\nimport { TableModule } from 'primeng/table'\nimport { ToastModule } from 'primeng/toast'\nimport { ToggleButtonModule } from 'primeng/togglebutton'\nimport { TooltipModule } from 'primeng/tooltip'\nimport { AutoCompleteModule } from 'primeng/autocomplete'\nimport { RatingModule } from 'primeng/rating'\nimport { RippleModule } from 'primeng/ripple'\nimport { SkeletonModule } from 'primeng/skeleton'\nimport { BreadcrumbModule } from \"primeng/breadcrumb\";\nimport { ConfigurationService } from '../api/configuration.service'\nimport { AUTH_SERVICE } from '../api/injection-tokens'\nimport { ActionDirective } from './components/action.directive'\nimport { BreadcrumbComponent } from './components/breadcrumbs/breadcrumb.component'\n// import { KeycloakAngularModule, KeycloakService } from \"keycloak-angular\";\nimport { CollapsibleDirective } from './components/collapsible.directive'\nimport { AppFooterComponent } from './components/footer.component'\nimport { HelpEditDialogComponent } from './components/help-edit-dialog.component'\nimport { HttpProgressLoaderComponent } from './components/http-progress-loader.component'\nimport { AppInlineProfileComponent } from './components/inline-profile.component'\nimport { LoadingComponent } from './components/loading/loading.component'\nimport { NoHelpInfoComponent } from './components/no-help-info/no-help-info.component'\nimport { PanelHeaderComponent } from './components/panel-header.component'\nimport { HeaderComponent } from './components/portal-header/header.component'\nimport { AppMenuComponent, AppSubMenuComponent } from './components/portal-menu/portal-menu.component'\nimport { PortalPageComponent } from './components/portal-page/portal-page.component'\nimport { PortalSearchPageComponent } from './components/portal-search-page/portal-search-page.component'\nimport { PortalViewportComponent } from './components/portal-viewport/portal-viewport.component'\nimport { TkIfPermDirective } from './components/tkifperm.directive'\nimport { ToolbarItemComponent } from './components/toolbar-item.component'\nimport { HttpProgressInterceptor } from './http-progress-interceptor'\nimport { tkitPortalInitializer } from './tkitPortalInitilizer'\nimport { SearchBarComponent } from './components/search-bar/search-bar.component'\nimport { MultiTranslateHttpLoader } from 'ngx-translate-multi-http-loader'\nimport { ResultTextComponent } from './components/result-text.component'\nimport { FeedbackComponent } from './components/feedback/feedback.component'\nimport { SupportTicketComponent } from './components/support-ticket/support-ticket.component'\nimport { AddToLaunchpadComponent } from './components/add-to-launchpad/add-to-launchpad.component'\nimport { TooltipAriaDirective } from './components/aria/tooltip.directive'\nimport { HttpCacheInterceptorModule, useHttpCacheLocalStorage } from '@ngneat/cashew'\n\nexport function HttpLoaderFactory2(http: HttpClient) {\n  return new TranslateHttpLoader(http, './portal-lib/assets/i18n/')\n}\n\nexport function StandardTranslateHttpLoader(http: HttpClient) {\n  return new MultiTranslateHttpLoader(http, [\n    { prefix: './assets/i18n/', suffix: '.json' },\n    { prefix: './portal-lib/assets/i18n/', suffix: '.json' },\n  ])\n}\n\n@NgModule({\n  declarations: [\n    PortalViewportComponent,\n    ToolbarItemComponent,\n    AppMenuComponent,\n    AppSubMenuComponent,\n    HeaderComponent,\n    AppFooterComponent,\n    HelpEditDialogComponent,\n    BreadcrumbComponent,\n    AppInlineProfileComponent,\n    HttpProgressLoaderComponent,\n    PortalPageComponent,\n    PanelHeaderComponent,\n    CollapsibleDirective,\n    ActionDirective,\n    TooltipAriaDirective,\n    NoHelpInfoComponent,\n    PortalSearchPageComponent,\n    LoadingComponent,\n    TkIfPermDirective,\n    SearchBarComponent,\n    ResultTextComponent,\n    FeedbackComponent,\n    AddToLaunchpadComponent,\n    SupportTicketComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    // KeycloakAngularModule,\n\n    // primeng\n    // TODO do not import all!!!\n    AutoCompleteModule,\n    BreadcrumbModule,\n    ButtonModule,\n    CalendarModule,\n    CardModule,\n    CheckboxModule,\n    ConfirmDialogModule,\n    DialogModule,\n    DynamicDialogModule,\n    DropdownModule,\n    InputSwitchModule,\n    InputTextModule,\n    InputTextareaModule,\n    MenuModule,\n    MessageModule,\n    MessagesModule,\n    OverlayPanelModule,\n    PanelModule,\n    PanelMenuModule,\n    RatingModule,\n    RippleModule,\n    ScrollPanelModule,\n    SkeletonModule,\n    TableModule,\n    ToastModule,\n    ToggleButtonModule,\n    TooltipModule,\n    // end primeng modules\n    HttpClientModule,\n    HttpCacheInterceptorModule.forRoot(),\n\n    TranslateModule,\n  ],\n  exports: [\n    FormsModule,\n\n    // reexport primeng\n    AutoCompleteModule,\n    BreadcrumbModule,\n    ButtonModule,\n    CalendarModule,\n    CardModule,\n    CheckboxModule,\n    ConfirmDialogModule,\n    DialogModule,\n    DynamicDialogModule,\n    DropdownModule,\n    InputSwitchModule,\n    InputTextModule,\n    InputTextareaModule,\n    MenuModule,\n    MessageModule,\n    MessagesModule,\n    OverlayPanelModule,\n    PaginatorModule,\n    PanelModule,\n    PanelMenuModule,\n    RatingModule,\n    RippleModule,\n    SelectButtonModule,\n    SkeletonModule,\n    TableModule,\n    ToastModule,\n    ToggleButtonModule,\n    TooltipModule,\n\n    // angular common\n    HttpClientModule,\n    HttpCacheInterceptorModule,\n\n    // our components\n    PortalViewportComponent,\n    PortalPageComponent,\n    PortalSearchPageComponent,\n    PanelHeaderComponent,\n    ToolbarItemComponent,\n    LoadingComponent,\n    CollapsibleDirective,\n    ActionDirective,\n    TooltipAriaDirective,\n    TkIfPermDirective,\n    ResultTextComponent,\n  ],\n  entryComponents: [NoHelpInfoComponent],\n  providers: [\n    useHttpCacheLocalStorage,\n\n    DialogService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpProgressInterceptor,\n      multi: true,\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: tkitPortalInitializer,\n      multi: true,\n      deps: [ConfigurationService, TranslateService, AUTH_SERVICE],\n    },\n  ],\n})\nexport class TkitPortalModule {}\n","import { forwardRef } from '@angular/core';\r\nimport { PortalSearchPage } from './pages/PortalSearchPage';\r\n\r\nexport function provideParent(component: any, parentType?: any) {\r\n  return {\r\n    provide: parentType || PortalSearchPage,\r\n    useExisting: forwardRef(() => component)\r\n  };\r\n}\r\n"]}